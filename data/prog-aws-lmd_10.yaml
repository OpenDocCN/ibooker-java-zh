- en: Chapter 10\. Conclusion
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 章 结论
- en: The goal of this book was for you to learn what it means to build and run applications
    using serverless technology on AWS, with AWS Lambda at the core of those systems.
    We hope that you feel empowered to do this, safe in the knowledge that Java is
    truly a first-class language choice in the serverless world.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标是让您了解在AWS上使用无服务器技术构建和运行应用程序的含义，其中AWS Lambda是这些系统的核心。我们希望您有信心这样做，了解到Java在无服务器世界中确实是一个一流的语言选择。
- en: 'We encourage you to reflect on some of the points we’ve tried to emphasize
    in this book:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们鼓励您反思本书中我们试图强调的一些要点：
- en: Above all, know that trying out ideas with serverless systems is quick, and
    cheap. If in doubt, experiment!
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最重要的是，要知道在无服务器系统中尝试各种想法是快速且廉价的。如果有疑问，就进行实验吧！
- en: Remember that Lambda code is “just code.” Lambda is not a framework, or an “application
    server” in the traditional sense—your Lambda functions are just small pieces of
    Java that process a JSON event. This makes unit testing, and incremental development
    within your IDE, fast and nimble. Similarly, try not to bloat your functions with
    unnecessary libraries and frameworks that were designed for alternative runtime
    models.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请记住 Lambda 代码只是“代码”。Lambda 不是一个框架，也不是传统意义上的“应用服务器”——您的 Lambda 函数只是处理 JSON 事件的小片段
    Java 代码。这使得在IDE中进行单元测试和增量开发变得快速和灵活。同样，尽量不要使用不必要的为其他运行时模型设计的库和框架使您的函数臃肿。
- en: Automate the scripting of building and deploying your functions to the AWS Cloud.
    You want to be able to rapidly iterate in the same environment that will be processing
    production events. Use the techniques we’ve shown throughout the book with Maven,
    SAM, and CloudFormation to enable this.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化构建和部署函数到AWS云的脚本编写。您希望能够在处理生产事件的相同环境中快速迭代。使用本书中介绍的 Maven、SAM 和 CloudFormation
    技术来实现这一点。
- en: As we showed in [Chapter 6](ch06.html#ch06), spend most of your testing time
    on quick unit and functional tests that run locally within one JVM along with
    functions under test, but also invest in the automation of end-to-end tests that
    exercise your functions running on the Lambda platform.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正如我们在 [第 6 章](ch06.html#ch06) 中展示的那样，大部分测试时间应花在快速单元测试和功能测试上，这些测试在一个 JVM 中与待测试的函数一起在本地运行，但也要投资于自动化的端到端测试，这些测试可以在Lambda平台上运行您的函数。
- en: Try to keep each of your Lambda functions focused on solving one task. Just
    include the code and libraries necessary to handle each function’s own events.
    Where necessary, use code sharing as we described in [“Build and Package Using
    Multiple Modules and Isolated Artifacts”](ch05.html#multi-module-build-and-package).
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量使每个 Lambda 函数专注于解决一个任务。只需包含处理每个函数自身事件所需的代码和库。必要时，使用我们在 [“使用多模块和隔离构建和打包”](ch05.html#multi-module-build-and-package)
    中描述的代码共享。
- en: Don’t give in to the fear of cold starts! Typically either they won’t be a concern
    for you once your application is in production, or you can use one or more remediation
    techniques if necessary.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要害怕冷启动！通常情况下，一旦您的应用程序投入生产，它们就不会成为您的问题，或者如果有必要，您可以使用一个或多个补救技术。
- en: Secure your serverless applications appropriately, considering the principle
    of least privilege, using AWS IAM. Your organization may end up with thousands
    of deployed Lambda functions, so you want to reduce the blast radius of each to
    reduce the impact of bugs or perhaps malicious intent.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适当地保护您的无服务器应用程序，考虑到最小特权原则，使用AWS IAM。您的组织可能会部署数千个Lambda函数，因此您希望减少每个函数的影响范围，以减少错误或可能的恶意意图的影响。
- en: Remember that logging and metrics work a little differently in this new world
    of Lambda. Use structured logging as much as you can; remember that you want to
    be able to observe behavior of your complete system, not just an individual function.
    Consider what metrics best indicate the health of the system as far as your users
    are concerned.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请记住，在 Lambda 这个新世界中，日志记录和度量工作有所不同。尽量使用结构化日志记录；请记住，您希望能够观察到整个系统的行为，而不仅仅是单个函数。考虑哪些度量标志最能反映系统的健康状态，就您的用户而言。
- en: As you build your serverless applications, embrace an “event-driven” mode of
    thinking. Even for functions invoked synchronously, consider how each invocation
    represents the passing of a self-contained message from one component to the next.
    And then think about how you can make your system as asynchronous as possible.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在构建无服务器应用程序时，要采用“事件驱动”的思维方式。即使是同步调用的函数，也要考虑每次调用如何代表消息从一个组件传递到下一个组件。然后思考如何尽可能地使系统异步化。
- en: Don’t necessarily throw away your nonserverless services. Things like relational
    databases might still be the best way for you to solve certain problems, especially
    if they already exist in your larger ecosystem. But do think carefully about how
    to use them in a world where scale is handled very differently.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不一定要放弃非无服务器服务。像关系数据库这样的东西可能仍然是您解决特定问题的最佳方式，特别是如果它们已经存在于您较大的生态系统中。但请仔细考虑在一个处理规模非常不同的世界中如何使用它们。
- en: Finally, serverless is a lot bigger than just Lambda—consider how you can lean
    on BaaS products from AWS and others to reduce the amount of code you need to
    write and operate. Even when you’ve settled on a particular service, investigate
    all of its features—it may have some hidden gems that can save you days or weeks
    of work.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，无服务器不仅仅是Lambda——考虑如何依靠AWS和其他提供商的BaaS产品来减少您需要编写和操作的代码量。即使您已经确定了特定的服务，也要调查其所有功能——它可能有一些隐藏的宝藏，可以为您节省数天甚至数周的工作时间。
- en: We hope you’ve enjoyed this book, have found it valuable, and that it continues
    to be a useful resource to you over the coming months and years. We will continue
    to write and speak about what we learn and build with Lambda and other AWS technologies.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 希望您喜欢这本书，发现它有价值，并希望在未来的几个月和年中继续为您提供有用的资源。我们将继续撰写和讲述Lambda和其他AWS技术的学习和应用。
- en: 'You can find our work at the following locations:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下位置找到我们的工作：
- en: On Twitter at [*https://twitter.com/symphoniacloud*](https://twitter.com/symphoniacloud),
    [*https://twitter.com/johnchapin*](https://twitter.com/johnchapin), and [*https://twitter.com/mikebroberts*](https://twitter.com/mikebroberts)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Twitter上[*https://twitter.com/symphoniacloud*](https://twitter.com/symphoniacloud)，[*https://twitter.com/johnchapin*](https://twitter.com/johnchapin)，和[*https://twitter.com/mikebroberts*](https://twitter.com/mikebroberts)
- en: Our blog at [*https://blog.symphonia.io*](https://blog.symphonia.io)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的博客在[*https://blog.symphonia.io*](https://blog.symphonia.io)
- en: Our website at [*https://www.symphonia.io*](https://www.symphonia.io)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的网站在[*https://www.symphonia.io*](https://www.symphonia.io)
- en: Our GitHub repositories at [*https://github.com/symphoniacloud*](https://github.com/symphoniacloud)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的GitHub存储库在[*https://github.com/symphoniacloud*](https://github.com/symphoniacloud)
- en: And of course, we’d love to hear how you get along. Please feel free to drop
    us a line at [johnandmike@symphonia.io](mailto:johnandmike@symphonia.io).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们很乐意听到您的进展。请随时通过[ johnandmike@symphonia.io ](mailto:johnandmike@symphonia.io)联系我们。
- en: Thanks for reading, and go serverless!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，加入无服务器行列吧！
