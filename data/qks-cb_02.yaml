- en: Chapter 2\. Scaffolding
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章. 搭建
- en: In this chapter, you’ll learn about creating the project structure of Quarkus.
    Quarkus comes with some different ways to scaffold a project.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解如何创建Quarkus项目结构。Quarkus 提供了几种不同的方式来搭建项目。
- en: 'You’ll learn how to do the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您将学会如何做以下事情：
- en: Scaffold a project in different ways, from Maven to VSCode IDE
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以不同的方式搭建项目，从Maven到VSCode IDE
- en: Improve developer experience with the live reloading
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过实时重载提升开发者体验
- en: Serve static resources with Quarkus
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Quarkus提供静态资源
- en: 2.1 Scaffolding a Quarkus Project with Maven
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.1 使用Maven搭建Quarkus项目
- en: Problem
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to start quickly in Quarkus by generating a simple project.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过生成一个简单的项目来快速开始Quarkus。
- en: Solution
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use the Quarkus Maven plug-in.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Quarkus Maven插件。
- en: Discussion
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: 'Using the Quarkus Maven plug-in creates a simple project that is ready to be
    deployed and contains the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Quarkus Maven插件创建一个简单的项目，准备部署，并包含以下内容：
- en: A *pom.xml* file with minimal Quarkus dependencies
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含最小Quarkus依赖项的*pom.xml*文件
- en: A simple JAX-RS resource
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个简单的JAX-RS资源
- en: A test for the JAX-RS resource
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于JAX-RS资源的测试
- en: A native test
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地测试
- en: Dockerfiles to generate a container
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Dockerfiles生成一个容器
- en: An empty configuration file
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空配置文件
- en: 'We assume you’ve already installed [Apache Maven](http://maven.apache.org).
    Open a terminal and execute the following command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设您已经安装了[Apache Maven](http://maven.apache.org)。打开终端并执行以下命令：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The project has this structure:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目具有以下结构：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[![1](Images/1.png)](#co_scaffolding_CO1-1)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](Images/1.png)](#co_scaffolding_CO1-1)'
- en: Dockerfiles
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Dockerfiles
- en: '[![2](Images/2.png)](#co_scaffolding_CO1-2)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](Images/2.png)](#co_scaffolding_CO1-2)'
- en: JAX-RS resource
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: JAX-RS资源
- en: '[![3](Images/3.png)](#co_scaffolding_CO1-3)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](Images/3.png)](#co_scaffolding_CO1-3)'
- en: Static resource
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 静态资源
- en: '[![4](Images/4.png)](#co_scaffolding_CO1-4)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](Images/4.png)](#co_scaffolding_CO1-4)'
- en: Configuration file
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件
- en: '[![5](Images/5.png)](#co_scaffolding_CO1-5)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](Images/5.png)](#co_scaffolding_CO1-5)'
- en: Auto-generated tests for JAX-RS resource
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为JAX-RS资源自动生成的测试
- en: 2.2 Scaffolding a Quarkus Project with Gradle
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.2 使用Gradle搭建Quarkus项目
- en: Problem
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to get started quickly in Quarkus by generating a simple project, and
    you are a Gradle user.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您想要通过生成一个简单的项目来快速开始Quarkus，您是Gradle用户。
- en: Solution
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use the Quarkus Maven plug-in (yes, the Maven plug-in).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Quarkus Maven插件（是的，Maven插件）。
- en: Discussion
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: 'You can scaffold a simple Quarkus project by using the Quarkus Maven plug-in;
    you just set the output as a Gradle project. The resulting project is ready to
    be deployed and contains the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用Quarkus Maven插件来搭建一个简单的Quarkus项目；您只需将输出设置为Gradle项目。生成的项目准备好部署，并包含以下内容：
- en: A *build.gradle* file with minimal Quarkus dependencies
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含最小Quarkus依赖项的*build.gradle*文件
- en: A simple JAX-RS resource
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个简单的JAX-RS资源
- en: A test for the JAX-RS resource
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为JAX-RS资源编写的测试
- en: A native test
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地测试
- en: Dockerfiles to generate a container
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Dockerfiles生成一个容器
- en: An empty configuration file
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空配置文件
- en: 'We assume you’ve already installed [Apache Maven](http://maven.apache.org).
    Open a terminal and execute the following command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设您已经安装了[Apache Maven](http://maven.apache.org)。打开终端并执行以下命令：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-48
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Unlike in Apache Maven, this command will create the structure in the *current*
    directory.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 不像在Apache Maven中那样，此命令将在*当前*目录中创建结构。
- en: 'The resulting project has the following structure:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 结果项目具有以下结构：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 2.3 Scaffolding a Quarkus Project with the Quarkus Start Coding Website
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.3 使用Quarkus Start Coding网站搭建Quarkus项目
- en: Problem
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to start quickly in Quarkus by generating a simple project without
    having to install Maven or Gradle.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过生成一个简单的项目来快速开始Quarkus，而无需安装Maven或Gradle。
- en: Solution
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use the Quarkus Start Coding website by visiting [*https://code.quarkus.io*](https://code.quarkus.io)
    to generate a simple Quarkus project.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Quarkus Start Coding网站通过[*https://code.quarkus.io*](https://code.quarkus.io)生成一个简单的Quarkus项目。
- en: Discussion
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: At the time of writing, the home page looks like what’s shown in [Figure 2-1](#quarkusio).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 撰写本文时，主页看起来像[图2-1](#quarkusio)所示。
- en: '![qucb 0201](Images/qucb_0201.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0201](Images/qucb_0201.png)'
- en: Figure 2-1\. [*https://code.quarkus.io*](https://code.quarkus.io) homepage
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-1. [*https://code.quarkus.io*](https://code.quarkus.io) 主页
- en: When the page is loaded, push the “Generate your application” button to download
    a ZIP file with the generated project inside.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 页面加载后，点击“生成您的应用程序”按钮以下载包含生成项目的ZIP文件。
- en: 'Open a terminal and uncompress the generated project:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端并解压生成的项目：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The scaffolded project is the same as the one you generated in [Recipe 2.1](#scaffold-with-maven),
    with the following elements:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 脚手架项目与您在[Recipe 2.1](#scaffold-with-maven)中生成的项目相同，具有以下元素：
- en: A *pom.xml* file with minimal Quarkus dependencies
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*pom.xml* 文件具有最小的 Quarkus 依赖项'
- en: A simple JAX-RS resource
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个简单的 JAX-RS 资源
- en: A test for the JAX-RS resource
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JAX-RS 资源的测试
- en: A native test
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地测试
- en: Dockerfiles to generate a container
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dockerfile 用于生成容器
- en: An empty configuration file
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个空配置文件
- en: See Also
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: We have not yet discussed Quarkus extensions, but notice that you can generate
    a project with any of the Quarkus extensions registered. You’ll see more about
    extensions in the next sections.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有讨论 Quarkus 扩展，但请注意，您可以使用注册的任何 Quarkus 扩展生成项目。您将在后续章节中了解更多有关扩展的信息。
- en: Extensions are added either by selecting them in the checkbox that contains
    every extension in the page or by using the search box.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在页面上的复选框中选择它们或使用搜索框来添加扩展。
- en: 2.4 Scaffolding a Quarkus Project with Visual Studio Code
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.4 使用 Visual Studio Code 搭建 Quarkus 项目
- en: Problem
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to start quickly in Quarkus by generating a simple project in Visual
    Studio (VS) Code.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在 Visual Studio (VS) Code 中生成一个简单的 Quarkus 项目来快速入门 Quarkus。
- en: Solution
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use the Quarkus VS Code extension.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Quarkus VS Code 扩展。
- en: Discussion
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: 'A Quarkus extension is developed for Visual Studio Code IDE to integrate some
    of the features of Quarkus into the IDE. The following are some of these features:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Quarkus 扩展为 Visual Studio Code IDE 开发，将一些 Quarkus 特性集成到 IDE 中。以下是其中一些特性：
- en: Commands to scaffold a project
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用命令搭建项目
- en: A command to add extensions
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加扩展的命令
- en: Auto-completion for configuration file (properties and YAML formats) Snippets
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置文件（属性和 YAML 格式）的自动完成代码段
- en: To install the plug-in, open VS Code, and push the “Extensions” button, as seen
    in [Figure 2-2](#Extension-button).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装插件，请打开 VS Code 并点击“Extensions”按钮，如[图 2-2](#Extension-button)所示。
- en: '![qucb 0202](Images/qucb_0202.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0202](Images/qucb_0202.png)'
- en: Figure 2-2\. Clicking on the extension button in VS Code allows you to install
    the Quarkus Extension
  id: totrans-86
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-2\. 在 VS Code 中点击扩展按钮可以安装 Quarkus 扩展
- en: Then search for `quarkus` and select the `Quarkus Tools for Visual Studio Code`
    by Red Hat. Your search should populate similar to [Figure 2-3](#Quarkus-Extension).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后搜索`quarkus`并选择由 Red Hat 提供的`Quarkus Tools for Visual Studio Code`。你的搜索结果应该类似于[图 2-3](#Quarkus-Extension)。
- en: '![qucb 0203](Images/qucb_0203.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0203](Images/qucb_0203.png)'
- en: Figure 2-3\. The Quarkus extension is available for free from the VS Code marketplace
  id: totrans-89
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-3\. Quarkus 扩展可以从 VS Code 市场免费获取
- en: After the installation process, restart the IDE, and you can start using the
    extensions.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，请重新启动 IDE，然后即可开始使用这些扩展。
- en: To generate a new Quarkus project, open the Command Palette and select “Generate
    a Quarkus Project.” The available options at the time of writing are shown in
    [Figure 2-4](#Quarkus-Generate-New-Project).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成一个新的 Quarkus 项目，打开命令面板并选择“生成一个 Quarkus 项目”。编写时的可用选项如[图 2-4](#Quarkus-Generate-New-Project)所示。
- en: '![qucb 0204](Images/qucb_0204.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0204](Images/qucb_0204.png)'
- en: Figure 2-4\. Generate a new Quarkus project from the Command Palette
  id: totrans-93
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-4\. 从命令面板生成一个新的 Quarkus 项目
- en: The next step, shown in [Figure 2-5](#Quarkus-Selecting-Building-Tool), will
    ask you about which build tool you will be using. There are also some questions
    about `groupId`, `artifactId`, and so on.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是根据[图 2-5](#Quarkus-Selecting-Building-Tool)所示的提示，选择构建工具。还有关于`groupId`、`artifactId`等的一些问题。
- en: '![qucb 0205](Images/qucb_0205.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0205](Images/qucb_0205.png)'
- en: Figure 2-5\. Selecting your building tool
  id: totrans-96
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-5\. 选择您的构建工具
- en: Extensions can be added by using the `Add Extension` command from the console,
    as shown in [Figure 2-6](#Add-Extension-Command).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展可以通过控制台中的`Add Extension`命令进行添加，如[图 2-6](#Add-Extension-Command)所示。
- en: '![qucb 0206](Images/qucb_0206.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0206](Images/qucb_0206.png)'
- en: Figure 2-6\. The `Add extension` command
  id: totrans-99
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-6\. `Add extension` 命令
- en: And select any Quarkus extension that you might want to add to the project.
    A sample of available extensions can been seen in [Figure 2-7](#List-of-Extensions).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 并选择您可能想要添加到项目中的任何 Quarkus 扩展。可见的可用扩展样本可见于[图 2-7](#List-of-Extensions)。
- en: '![qucb 0207](Images/qucb_0207.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0207](Images/qucb_0207.png)'
- en: Figure 2-7\. You can see a list of available extensions for your application
    that could be installed
  id: totrans-102
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-7\. 您可以看到可安装到应用程序的可用扩展列表
- en: In the following figures, you can see some of the features that are provided
    by the Quarkus extension.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的图表中，您可以看到 Quarkus 扩展提供的一些功能。
- en: '[Figure 2-8](#config-properties) shows the auto-completion of configuration
    properties that help you correctly configure the application.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[图2-8](#config-properties) 显示了配置属性的自动完成，帮助您正确配置应用程序。'
- en: '![qucb 0208](Images/qucb_0208.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0208](Images/qucb_0208.png)'
- en: Figure 2-8\. Auto-completion and type information of configuration property
    keys
  id: totrans-106
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-8\. 配置属性键的自动完成和类型信息
- en: '[Figure 2-9](#config-properties-desc) shows the description of a configuration
    property when you mouse over it.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[图2-9](#config-properties-desc) 当您将鼠标悬停在配置属性上时，显示配置属性的描述。'
- en: '![qucb 0209](Images/qucb_0209.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0209](Images/qucb_0209.png)'
- en: Figure 2-9\. Hovering over a configuration property gives you more information
    about that property
  id: totrans-109
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-9\. 将鼠标悬停在配置属性上，可以获得有关该属性的更多信息
- en: '[Figure 2-10](#unused-config-prop) demonstrates how to detect unused properties
    in your application.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[图2-10](#unused-config-prop) 演示如何检测应用程序中未使用的属性。'
- en: '![qucb 0210](Images/qucb_0210.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0210](Images/qucb_0210.png)'
- en: Figure 2-10\. Detect unused configuration properties
  id: totrans-112
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-10\. 检测未使用的配置属性
- en: '[Figure 2-11](#clickable-url) shows the URL representing the endpoint. If you
    click it, a new browser window is opened, pointing to the given URL.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[图2-11](#clickable-url) 显示了表示端点的URL。如果单击它，将打开一个新的浏览器窗口，指向给定的URL。'
- en: '![qucb 0211](Images/qucb_0211.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0211](Images/qucb_0211.png)'
- en: Figure 2-11\. A clickable URL endpoint is generated by the VS Code extension
    for each endpoint method
  id: totrans-115
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-11\. VS Code扩展为每个端点方法生成可点击的URL端点
- en: See Also
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'The Quarkus extension is available for several IDEs:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Quarkus扩展适用于多个IDE：
- en: '[Visual Studio Code](https://oreil.ly/rL1Md)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Visual Studio Code](https://oreil.ly/rL1Md)'
- en: '[Eclipse](https://oreil.ly/3Ais_)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Eclipse](https://oreil.ly/3Ais_)'
- en: '[IntelliJ](https://oreil.ly/Whvdj)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IntelliJ](https://oreil.ly/Whvdj)'
- en: 2.5 Live Reloading with Dev Mode
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.5 使用开发模式实现实时重新加载
- en: Problem
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to review the result of a change in the project without having to repackage
    and redeploy the full application.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望在不必重新打包和重新部署完整应用程序的情况下查看项目中的更改结果。
- en: Solution
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use *development mode*, which enables hot deployment with background compilation,
    which means that when you modify your Java files and/or your resource files and
    refresh your browser, these changes will automatically take effect.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用*开发模式*，它可以通过后台编译实现热部署，这意味着当您修改Java文件和/或资源文件并刷新浏览器时，这些更改将自动生效。
- en: Note
  id: totrans-126
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Each of the scaffolding methods default to Java 11. You will need a Java 11
    VM, or you will need to modify the project to use a different version of the JVM.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 每种脚手架方法默认使用Java 11。您需要Java 11 VM，或者您需要修改项目以使用不同版本的JVM。
- en: Discussion
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: 'To start an application in development mode, run the `quarkus:dev` command
    in the root of your project. For this example, you are using the project created
    in [Recipe 2.1](#scaffold-with-maven):'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要在开发模式下启动应用程序，请在项目的根目录中运行`quarkus:dev`命令。例如，您正在使用[Recipe 2.1](#scaffold-with-maven)中创建的项目：
- en: '[PRE5]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'When the application is up and running, open a new terminal window and run
    the following command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序运行时，请打开新的终端窗口并运行以下命令：
- en: '[PRE6]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now *without* stopping the `quarkus:dev` mode, do this next modification in
    `org.acme.quickstart.GreetingResource.java`:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在*不停止* `quarkus:dev` 模式的情况下，在 `org.acme.quickstart.GreetingResource.java`
    中进行下一个修改：
- en: '[PRE7]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then run this again:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 然后再次运行此命令：
- en: '[PRE8]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: It is really important to note that you’ve done a change in your source code
    and that without any recompilation, repackaging, or redeployment, the change has
    been automatically populated in your running instance out of the box—without any
    special setup.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 非常重要的一点是，您已经对源代码进行了更改，并且在不需要任何重新编译、重新打包或重新部署的情况下，这些更改已经自动应用到正在运行的实例中——无需任何特殊设置。
- en: Now, instead of *write code* → *compile* → *deploy* → *refresh* → *repeat*,
    you are simplifying your development workflow to *write code* → *refresh* → *repeat*.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，不再是*编写代码* → *编译* → *部署* → *刷新* → *重复*，而是简化您的开发工作流程为*编写代码* → *刷新* → *重复*。
- en: Development mode detects changes for Java files, application configs, and static
    resources.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 开发模式检测Java文件、应用程序配置和静态资源的更改。
- en: To stop development mode, go to `quarkus:dev` terminal and push Ctrl+C.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止开发模式，请转到`quarkus:dev`终端并按Ctrl+C。
- en: 'To run development mode in Gradle projects, you can run a `quarkusDev` task:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Gradle项目中运行开发模式，可以运行`quarkusDev`任务：
- en: '[PRE9]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 2.6 Serving Static Resources
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.6 提供静态资源
- en: Problem
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to serve static resources such as HTML, JavaScript, CSS, and images.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您想要提供静态资源，如HTML、JavaScript、CSS和图像。
- en: Solution
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: In Quarkus, any resource copied into *src/main/resources/META-INF/resources*
    is served from the root path.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在Quarkus中，复制到*src/main/resources/META-INF/resources*的任何资源将从根路径提供服务。
- en: In some situations, you might want to serve static resources to your callers.
    These could be static downloadable content or an HTML page.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能希望为调用者提供静态资源。这些可以是静态可下载内容或者一个HTML页面。
- en: By default, Quarkus comes with an *index.html* file as a static resource.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Quarkus带有一个*index.html*文件作为静态资源。
- en: 'Start the application:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 启动应用程序：
- en: '[PRE10]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Open a browser and enter the following URL: [*http://localhost:8080/index.html*](http://localhost:8080/index.html).'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 打开浏览器并输入以下网址：[*http://localhost:8080/index.html*](http://localhost:8080/index.html)。
- en: And you’ll see something like what’s shown in [Figure 2-12](#indexpage).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 并且你将看到类似于[图 2-12](#indexpage)所示的内容。
- en: '![qucb 0212](Images/qucb_0212.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![qucb 0212](Images/qucb_0212.png)'
- en: Figure 2-12\. Quarkus creates a placeholder index for your application with
    basic information and next steps to help you after scaffolding
  id: totrans-155
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-12\. Quarkus为您的应用程序创建一个带有基本信息和下一步操作的占位符索引，以帮助您在脚手架后继续进行操作。
- en: Tip
  id: totrans-156
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Live reloading also works with static resources.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 实时重新加载也适用于静态资源。
