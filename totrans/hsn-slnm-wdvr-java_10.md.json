["```java\n@Test\nvoid testVanillaBasicLogin() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/login-form.html\");\n\n    driver.findElement(By.id(\"username\")).sendKeys(\"user\"); ![1](assets/1.png)\n    driver.findElement(By.id(\"password\")).sendKeys(\"user\"); ![2](assets/2.png)\n    driver.findElement(By.cssSelector(\"button\")).click(); ![3](assets/3.png)\n\n    assertThat(driver.findElement(By.id(\"success\")).isDisplayed()).isTrue(); ![4](assets/4.png)\n}\n```", "```java\n@Test\nvoid testVanillaBasicLoginFailure() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/login-form.html\");\n\n    driver.findElement(By.id(\"username\")).sendKeys(\"bad-user\");\n    driver.findElement(By.id(\"password\")).sendKeys(\"bad-password\");\n    driver.findElement(By.cssSelector(\"button\")).click();\n\n    assertThat(driver.findElement(By.id(\"invalid\")).isDisplayed()).isTrue();\n}\n```", "```java\npublic class BasicLoginPage {\n\n    WebDriver driver; ![1](assets/1.png)\n\n    By usernameInput = By.id(\"username\"); ![2](assets/2.png)\n    By passwordInput = By.id(\"password\");\n    By submitButton = By.cssSelector(\"button\");\n    By successBox = By.id(\"success\");\n\n    public BasicLoginPage(WebDriver driver) { ![3](assets/3.png)\n        this.driver = driver;\n\n        driver.get(\n                \"https://bonigarcia.dev/selenium-webdriver-java/login-form.html\");\n    }\n\n    public void with(String username, String password) { ![4](assets/4.png)\n        driver.findElement(usernameInput).sendKeys(username);\n        driver.findElement(passwordInput).sendKeys(password);\n        driver.findElement(submitButton).click();\n    }\n\n    public boolean successBoxPresent() { ![5](assets/5.png)\n        return driver.findElement(successBox).isDisplayed();\n    }\n\n}\n```", "```java\nclass BasicLoginJupiterTest {\n\n    WebDriver driver;\n    BasicLoginPage login; ![1](assets/1.png)\n\n    @BeforeEach\n    void setup() {\n        driver = WebDriverManager.chromedriver().create();\n        login = new BasicLoginPage(driver); ![2](assets/2.png)\n    }\n\n    @AfterEach\n    void teardown() {\n        driver.quit();\n    }\n\n    @Test\n    void testBasicLoginSuccess() {\n        login.with(\"user\", \"user\"); ![3](assets/3.png)\n        assertThat(login.successBoxPresent()).isTrue(); ![4](assets/4.png)\n    }\n\n}\n```", "```java\n@Test\nvoid testBasicLoginFailure() {\n    login.with(\"bad-user\", \"bad-password\");\n    assertThat(login.successBoxPresent()).isFalse();\n}\n```", "```java\npublic class BasePage {\n\n    static final Logger log = getLogger(lookup().lookupClass());\n\n    WebDriver driver;\n    WebDriverWait wait;\n    int timeoutSec = 5; // wait timeout (5 seconds by default) \n    public BasePage(WebDriver driver) {\n        this.driver = driver;\n        wait = new WebDriverWait(driver, Duration.ofSeconds(timeoutSec)); ![1](assets/1.png)\n    }\n\n    public void setTimeoutSec(int timeoutSec) { ![2](assets/2.png)\n        this.timeoutSec = timeoutSec;\n    }\n\n    public void visit(String url) { ![3](assets/3.png)\n        driver.get(url);\n    }\n\n    public WebElement find(By element) {\n        return driver.findElement(element);\n    }\n\n    public void click(By element) {\n        find(element).click();\n    }\n\n    public void type(By element, String text) {\n        find(element).sendKeys(text);\n    }\n\n    public boolean isDisplayed(By locator) { ![4](assets/4.png)\n        try {\n            wait.until(ExpectedConditions.visibilityOfElementLocated(locator));\n        } catch (TimeoutException e) {\n            log.warn(\"Timeout of {} wait for {}\", timeoutSec, locator);\n            return false;\n        }\n        return true;\n    }\n\n}\n```", "```java\npublic class LoginPage extends BasePage {\n\n    By usernameInput = By.id(\"username\"); ![1](assets/1.png)\n    By passwordInput = By.id(\"password\");\n    By submitButton = By.cssSelector(\"button\");\n    By successBox = By.id(\"success\");\n\n    public LoginPage(WebDriver driver, int timeoutSec) { ![2](assets/2.png)\n        this(driver);\n        setTimeoutSec(timeoutSec);\n    }\n\n    public LoginPage(WebDriver driver) { ![3](assets/3.png)\n        super(driver);\n        visit(\"https://bonigarcia.dev/selenium-webdriver-java/login-form.html\");\n    }\n\n    public void with(String username, String password) { ![4](assets/4.png)\n        type(usernameInput, username);\n        type(passwordInput, password);\n        click(submitButton);\n    }\n\n    public boolean successBoxPresent() { ![5](assets/5.png)\n        return isDisplayed(successBox);\n    }\n\n}\n```", "```java\nclass LoginJupiterTest {\n\n    WebDriver driver;\n    LoginPage login;\n\n    @BeforeEach\n    void setup() {\n        driver = WebDriverManager.chromedriver().create();\n        login = new LoginPage(driver); ![1](assets/1.png)\n    }\n\n    @AfterEach\n    void teardown() {\n        driver.quit();\n    }\n\n    @Test\n    void testLoginSuccess() {\n        login.with(\"user\", \"user\");\n        assertThat(login.successBoxPresent()).isTrue();\n    }\n\n    @Test\n    void testLoginFailure() {\n        login.with(\"bad-user\", \"bad-password\");\n        assertThat(login.successBoxPresent()).isFalse(); ![2](assets/2.png)\n    }\n\n}\n```", "```java\npublic class ExtendedBasePage {\n\n    static final Logger log = getLogger(lookup().lookupClass());\n\n    WebDriver driver;\n    WebDriverWait wait;\n    int timeoutSec = 5; // wait timeout (5 seconds by default) \n    public ExtendedBasePage(String browser) { ![1](assets/1.png)\n        driver = WebDriverManager.getInstance(browser).create(); ![2](assets/2.png)\n        wait = new WebDriverWait(driver, Duration.ofSeconds(timeoutSec));\n    }\n\n    public void setTimeoutSec(int timeoutSec) {\n        this.timeoutSec = timeoutSec;\n    }\n\n    public void quit() { ![3](assets/3.png)\n        if (driver != null) {\n            driver.quit();\n        }\n    }\n\n    // Rest of common methods: quit(), visit(URL url), find(By element), etc. \n}\n```", "```java\npublic class ExtendedLoginPage extends ExtendedBasePage {\n\n    By usernameInput = By.id(\"username\");\n    By passwordInput = By.id(\"password\");\n    By submitButton = By.cssSelector(\"button\");\n    By successBox = By.id(\"success\");\n\n    public ExtendedLoginPage(String browser, int timeoutSec) {\n        this(browser);\n        setTimeoutSec(timeoutSec);\n    }\n\n    public ExtendedLoginPage(String browser) {\n        super(browser);\n        visit(\"https://bonigarcia.dev/selenium-webdriver-java/login-form.html\");\n    }\n\n    public void with(String username, String password) {\n        type(usernameInput, username);\n        type(passwordInput, password);\n        click(submitButton);\n    }\n\n    public boolean successBoxPresent() {\n        return isDisplayed(successBox);\n    }\n\n}\n```", "```java\nclass ExtendedLoginJupiterTest {\n\n    ExtendedLoginPage login;\n\n    @BeforeEach\n    void setup() {\n        login = new ExtendedLoginPage(\"chrome\"); ![1](assets/1.png)\n    }\n\n    @AfterEach\n    void teardown() {\n        login.quit(); ![2](assets/2.png)\n    }\n\n    @Test\n    void testLoginSuccess() {\n        login.with(\"user\", \"user\");\n        assertThat(login.successBoxPresent()).isTrue();\n    }\n\n    @Test\n    void testLoginFailure() {\n        login.with(\"bad-user\", \"bad-password\");\n        assertThat(login.successBoxPresent()).isFalse();\n    }\n\n}\n```", "```java\npublic class FactoryLoginPage extends ExtendedBasePage {\n\n    @FindBy(id = \"username\")\n    @CacheLookup\n    WebElement usernameInput; ![1](assets/1.png)\n\n    @FindBy(id = \"password\")\n    @CacheLookup\n    WebElement passwordInput;\n\n    @FindBy(css = \"button\")\n    @CacheLookup\n    WebElement submitButton;\n\n    @FindBy(id = \"success\")\n    @CacheLookup\n    WebElement successBox;\n\n    public FactoryLoginPage(String browser, int timeoutSec) {\n        this(browser);\n        setTimeoutSec(timeoutSec);\n    }\n\n    public FactoryLoginPage(String browser) {\n        super(browser);\n        PageFactory.initElements(driver, this); ![2](assets/2.png)\n        visit(\"https://bonigarcia.dev/selenium-webdriver-java/login-form.html\");\n    }\n\n    // Same logic to the page class without using the page factory \n}\n```"]