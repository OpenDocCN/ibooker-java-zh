["```java\n{\n  \"name\": \"robinparse\",\n  \"version\": \"1.2.3\",\n  \"description\": \"Another Parser for JSON\",\n  \"className\": \"RobinParse\",\n  \"contributors\": [\n        \"Robin Smythe\",\n        \"Jon Jenz\",\n        \"Jan Ardann\"\n    ]\n}\n```", "```java\n{\n\t\"year\": 2019,\n\t\"month\": 4,\n\t\"day\" : 1\n}\n```", "```java\n{\n\t[{\n\t\t\"year\": 2019,\n\t\t\"month\": 4,\n\t\t\"day\" : 1\n\t},{\n\t\t\"year\": 2019,\n\t\t\"month\": 5,\n\t\t\"day\" : 15\n\t}]\n}\n```", "```java\n{[{\"year\":2019,\"month\":4,\"day\":1},{\"year\":2019,\"month\":5,\"day\":15}]}\n```", "```java\n/**\n * Convert an object to JSON, not using any JSON API.\n * BAD IDEA - should use an API!\n */\npublic class LocalDateToJsonManually {\n\n    private static final String OPEN = \"{\";\n    private static final String CLOSE = \"}\";\n\n    public static void main(String[] args) {\n        LocalDate dNow = LocalDate.now();\n        System.out.println(toJson(dNow));\n    }\n\n    public static String toJson(LocalDate dNow) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(OPEN).append(\"\\n\");\n        sb.append(jsonize(\"year\", dNow.getYear()));\n        sb.append(jsonize(\"month\", dNow.getMonth()));\n        sb.append(jsonize(\"day\", dNow.getDayOfMonth()));\n        sb.append(CLOSE).append(\"\\n\");\n        return sb.toString();\n    }\n\n    public static String jsonize(String key, Object value) {\n        return String.format(\"\\\"%s\\\": \\\"%s\\\",\\n\", key, value);\n    }\n}\n```", "```java\npublic class ReadWriteJackson {\n\n    public static void main(String[] args) throws IOException {\n        ObjectMapper mapper = new ObjectMapper();                ![1](assets/1.png)\n\n        String jsonInput =                                       ![2](assets/2.png)\n                \"{\\\"id\\\":0,\\\"firstName\\\":\\\"Robin\\\",\\\"lastName\\\":\\\"Wilson\\\"}\";\n        Person q = mapper.readValue(jsonInput, Person.class);\n        System.out.println(\"Read and parsed Person from JSON: \" + q);\n\n        Person p = new Person(\"Roger\", \"Rabbit\");                ![3](assets/3.png)\n        System.out.print(\"Person object \" + p +\" as JSON = \");\n        mapper.writeValue(System.out, p);\n    }\n}\n```", "```java\nRead and parsed Person from JSON: Robin Wilson\nPerson object Roger Rabbit as JSON = {\"id\":0,\"firstName\":\"Roger\",\n\t\"lastName\":\"Rabbit\",\"name\":\"Roger Rabbit\"}\n```", "```java\npublic class SoftwareParseJackson {\n    final static String FILE_NAME = \"/json/softwareinfo.json\";\n\n    public static void main(String[] args) throws Exception {\n        ObjectMapper mapper = new ObjectMapper(); ![1](assets/1.png)\n\n        InputStream jsonInput =\n            SoftwareParseJackson.class.getResourceAsStream(FILE_NAME);\n        if (jsonInput == null) {\n            throw new NullPointerException(\"can't find \" + FILE_NAME);\n        }\n        SoftwareInfo sware = mapper.readValue(jsonInput, SoftwareInfo.class);\n        System.out.println(sware);\n    }\n\n}\n```", "```java\nSoftware: robinparse (1.2.3) by [Robin Smythe, Jon Jenz, Jan Ardann]\n```", "```java\npublic class SoftwareParseOrgJson {\n    final static String FILE_NAME = \"/json/softwareinfo.json\";\n\n    public static void main(String[] args) throws Exception {\n\n        InputStream jsonInput =\n            SoftwareParseOrgJson.class.getResourceAsStream(FILE_NAME);\n        if (jsonInput == null) {\n            throw new NullPointerException(\"can't find\" + FILE_NAME);\n        }\n        JSONObject obj = new JSONObject(new JSONTokener(jsonInput));      ![1](assets/1.png)\n        System.out.println(\"Software Name: \" + obj.getString(\"name\"));    ![2](assets/2.png)\n        System.out.println(\"Version: \" + obj.getString(\"version\"));\n        System.out.println(\"Description: \" + obj.getString(\"description\"));\n        System.out.println(\"Class: \" + obj.getString(\"className\"));\n        JSONArray contribs = obj.getJSONArray(\"contributors\");            ![3](assets/3.png)\n        for (int i = 0; i < contribs.length(); i++) {                     ![4](assets/4.png)\n            System.out.println(\"Contributor Name: \" + contribs.get(i));\n        }\n    }\n\n}\n```", "```java\nSoftware Name: robinparse\nVersion: 1.2.3\nDescription: Another Parser for JSON\nClass: RobinParse\nContributor Name: Robin Smythe\nContributor Name: Jon Jenz\nContributor Name: Jan Ardann\n```", "```java\npublic class WriteOrgJson {\n    public static void main(String[] args) {\n        JSONObject jsonObject = new JSONObject();\n        jsonObject.put(\"Name\", \"robinParse\").        ![1](assets/1.png)\n            put(\"Version\", \"1.2.3\").\n            put(\"Class\", \"RobinParse\");\n        String printable = jsonObject.toString();    ![2](assets/2.png)\n        System.out.println(printable);\n    }\n}\n```", "```java\n{\"Name\":\"robinParse\",\"Class\":\"RobinParse\",\"Version\":\"1.2.3\"}\n```", "```java\npublic class ReadWriteJsonB {\n\n    public static void main(String[] args) throws IOException {\n\n        Jsonb jsonb = JsonbBuilder.create();            ![1](assets/1.png)\n\n        // Read\n        String jsonInput =                              ![2](assets/2.png)\n                \"{\\\"id\\\":0,\\\"firstName\\\":\\\"Robin\\\",\\\"lastName\\\":\\\"Williams\\\"}\";\n        Person rw = jsonb.fromJson(jsonInput, Person.class);\n        System.out.println(rw);\n\n        String result = jsonb.toJson(rw);                ![3](assets/3.png)\n        System.out.println(result);\n    }\n}\n```", "```java\n{\"firstName\":\"Robin\",\"fullName\":\"Robin Williams\",\"id\":0,\"lastName\":\"Williams\"}\n```", "```java\n{\"firstName\":\"Robin\",\"id\":0,\"lastName\":\"Williams\"}\n```", "```java\n{\"firstName\":\"Robin\",\"lastName\":\"Williams\",\n\t\"age\": 63,\"id\":0,\n\t\"roles\":[\"Mork\", \"Mrs. Doubtfire\", \"Patch Adams\"]}\n```", "```java\n/firstName => Robin\n/age => 63\n/roles => [\"Mork\",\"Mrs. Doubtfire\",\"Patch Adams\"]\n/roles/1 => \"Mrs. Doubtfire\"\n```", "```java\npublic class JsonPointerDemo {\n\n    public static void main(String[] args) {\n        String jsonPerson =\n            \"{\\\"firstName\\\":\\\"Robin\\\",\\\"lastName\\\":\\\"Williams\\\",\" +\n                \"\\\"age\\\": 63,\" +\n                \"\\\"id\\\":0,\" +\n                \"\\\"roles\\\":[\\\"Mork\\\", \\\"Mrs. Doubtfire\\\", \\\"Patch Adams\\\"]}\";\n\n        System.out.println(\"Input: \" + jsonPerson);\n\n        JsonReader rdr =\n                Json.createReader(new StringReader(jsonPerson));       ![1](assets/1.png)\n        JsonStructure jsonStr = rdr.read();\n        rdr.close();\n\n        JsonPointer jsonPointer;\n        JsonString jsonString;\n\n        jsonPointer = Json.createPointer(\"/firstName\");                ![2](assets/2.png)\n        jsonString = (JsonString)jsonPointer.getValue(jsonStr);\n        String firstName = jsonString.getString();\n        System.out.println(\"/firstName => \" + firstName);\n\n        JsonNumber num =                                               ![3](assets/3.png)\n                (JsonNumber) Json.createPointer(\"/age\").getValue(jsonStr);\n        System.out.println(\"/age => \" + num + \"; a \" + num.getClass().getName());\n\n        jsonPointer = Json.createPointer(\"/roles\");                    ![4](assets/4.png)\n        JsonArray roles = (JsonArray) jsonPointer.getValue(jsonStr);\n        System.out.println(\"/roles => \" + roles);\n        System.out.println(\"JsonArray roles.get(1) => \" + roles.get(1));\n\n        jsonPointer = Json.createPointer(\"/roles/1\");                  ![5](assets/5.png)\n        jsonString = (JsonString)jsonPointer.getValue(jsonStr);\n        System.out.println(\"/roles/1 => \" + jsonString);\n    }\n}\n```"]