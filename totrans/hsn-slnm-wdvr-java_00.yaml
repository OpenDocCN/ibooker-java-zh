- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Selenium is an open source umbrella project that enables the automation of web
    browsers. The core component of the Selenium project is Selenium WebDriver, a
    library for controlling browsers (e.g., Chrome, Firefox, Edge, Safari, or Opera)
    programmatically. Selenium WebDriver provides a cross-browser Application Programming
    Interface (API) in several programming languages (officially supported in Java,
    JavaScript, Python, C#, or Ruby).
  prefs: []
  type: TYPE_NORMAL
- en: Although we can use Selenium WebDriver for multiple purposes related to browser
    automation, its primary use is implementing end-to-end tests for web application
    verification. Thousands of organizations and testers now use Selenium worldwide,
    and it is one of the leading solutions for end-to-end testing, supporting a multi-million-dollar
    industry.
  prefs: []
  type: TYPE_NORMAL
- en: Who Should Read This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book provides a comprehensive summary of the main features of Selenium
    WebDriver version 4, using Java as language binding. It reviews the main aspects
    of automated web navigation, browser manipulation, web element interaction, user
    impersonation, automated driver management, the Page Object Model (POM) design
    pattern, use of remote and cloud infrastructure, integration with Docker and third-party
    tools, and much more.
  prefs: []
  type: TYPE_NORMAL
- en: The primary audience of this book includes Java coders of different levels (from
    beginner to advanced), such as developers, testers, QA engineers, etc. Thus, you
    need a basic knowledge of the Java language and object-oriented programming. The
    final goal is to have a comprehensive understanding of the main aspects of Selenium
    WebDriver to create end-to-end tests in Java using different testing frameworks
    of your choice (e.g., JUnit or TestNG).
  prefs: []
  type: TYPE_NORMAL
- en: Why I Wrote This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Test automation is a software testing technique that leverages automation tools
    to control test execution. It allows increased efficiency and effectiveness while
    ensuring the overall quality of a software system. In this arena, Selenium WebDriver
    is the de facto standard library to develop end-to-end tests for web applications.
    This book provides the first complete review of Selenium 4 to date.
  prefs: []
  type: TYPE_NORMAL
- en: 'The book follows a learn-by-doing approach. To that aim, we review the main
    features of Selenium WebDriver through ready-to-be-executed test examples. These
    examples are publicly available in a GitHub open source repository ([*https://github.com/bonigarcia/selenium-webdriver-java*](https://github.com/bonigarcia/selenium-webdriver-java)).
    For the sake of completeness, this repository contains each test example in different
    flavors of the embedding testing framework: JUnit 4, JUnit 5 (alone or with Selenium-Jupiter),
    and TestNG.'
  prefs: []
  type: TYPE_NORMAL
- en: Navigating This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The content of this book is divided into 3 parts and 10 chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: Part I, Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Part I](part01.html#part01) provides technological background on Selenium,
    test automation, and project setup. This part, more theoretical than practical,
    is composed of two chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 1, “A Primer on Selenium”](ch01.html#ch01), presents the core components
    of the Selenium project (WebDriver, Grid, and IDE) and its ecosystem (i.e., the
    tools and technologies around Selenium). In addition, this chapter reviews the
    principles of end-to-end testing related to Selenium.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 2, “Preparing for Testing”](ch02.html#ch02), explains how to set up
    a Java project (Maven and Gradle) containing end-to-end tests that use the Selenium
    WebDriver API. Then, you will learn how to develop your first WebDriver tests
    using different testing frameworks: JUnit 4, JUnit 5 (alone or in conjunction
    with Selenium-Jupiter), and TestNG.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Part II, The Selenium WebDriver API
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Part II](part02.html#part02) provides practical insight into the Selenium
    WebDriver API. This part is guided by tests available in the examples repository
    and includes the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3, “WebDriver Fundamentals”](ch03.html#ch03), describes the primary
    aspects of the Selenium WebDriver API for carrying out automated interaction with
    web applications. Thus, this chapter reviews several strategies for locating and
    waiting for web elements. In addition, you will discover how to impersonate user
    actions (i.e., automated interactions using the keyboard and mouse) in a browser.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 4, “Browser-Agnostic Features”](ch04.html#ch04), reviews those aspects
    of the Selenium WebDriver API that are interoperable in different browsers. Hence,
    this chapter shows how to execute JavaScript, create event listeners, manage windows,
    make screenshots, handle the shadow DOM, manipulate cookies, access the browser
    history or web storage, or interact with windows, tabs, and iframes, among other
    elements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 5, “Browser-Specific Manipulation”](ch05.html#ch05), explains those
    aspects of the Selenium WebDriver API particular to specific browsers. This group
    of features covers browser capabilities (options, arguments, preferences, etc.),
    the Chrome DevTools Protocol (CDP), geolocation functions, basic and web authentication,
    printing pages to PDF, or the WebDriver BiDi API.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 6, “Remote WebDriver”](ch06.html#ch06), describes how to use the Selenium
    WebDriver API to control remote browsers. Then, you will learn how to set up and
    use Selenium Grid version 4\. Finally, you will discover how to use advanced infrastructure
    for Selenium tests in cloud providers (e.g., Sauce Labs, BrowserStack, or CrossBrowserTesting,
    among others) and browsers in Docker containers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Part III, Advanced Concepts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Part III](part03.html#part03) focuses on leveraging the Selenium WebDriver
    API in different ambits and use cases. This part includes the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7, “The Page Object Model (POM)”](ch07.html#ch07), introduces POM,
    a popular design pattern used in conjunction with Selenium WebDriver. This pattern
    allows users to model web pages using object-oriented classes to ease test maintenance
    and reduce code duplication.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 8, “Testing Framework Specifics”](ch08.html#ch08), reviews several
    particular features of the unit testing framework used together with Selenium
    WebDriver that allow improvements to different aspects of the overall testing
    process. To that aim, this chapter first explains how to carry out cross-browser
    testing (i.e., reusing the same test logic for verifying web applications using
    different browsers) using parameterized tests and test templates. Then, you will
    learn how to split tests into different categories for execution filtering, ordering
    tests, failure analysis (i.e., collecting and analyzing data to determine the
    cause of a failure), retrying tests, parallel test execution, test listeners,
    or disabling tests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9, “Third-Party Integrations”](ch09.html#ch09), reviews different
    technologies you can use to enhance your Selenium WebDriver tests, such as reporting
    tools, test data generation, and other frameworks (e.g., Cucumber or Spring).
    Moreover, this chapter describes how to use external libraries with Selenium to
    implement specific use cases, such as file downloading or nonfunctional tests
    (such as load, security, or accessibility).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 10, “Beyond Selenium”](ch10.html#ch10), presents a couple of automation
    frameworks related to Selenium: Appium (for mobile testing) and REST Assured (for
    testing REST web services). To conclude, we review some of the most relevant current
    alternatives to Selenium WebDriver, such as Cypress, WebDriverIO, TestCafe, Puppeteer,
    or Playwright.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that the user should type literally.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Code examples are available for download at [*https://github.com/bonigarcia/selenium-webdriver-java*](https://github.com/bonigarcia/selenium-webdriver-java).
    If you have a technical question or a problem using the code examples, please
    email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Hands-On Selenium
    WebDriver with Java* by Boni García (O’Reilly). Copyright 2022 Boni García, 978-1-098-11000-0.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/handsOn_SeleniumWDJ*](https://oreil.ly/handsOn_SeleniumWDJ).
  prefs: []
  type: TYPE_NORMAL
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on Facebook: [*https://facebook.com/oreilly*](https://facebook.com/oreilly).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*https://www.youtube.com/oreillymedia*](https://www.youtube.com/oreillymedia).'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First, I want to thank the team at O’Reilly for making this book a reality.
    Their editorial support has been exemplary through every stage of this journey.
  prefs: []
  type: TYPE_NORMAL
- en: 'I also want to recognize the technical reviewers who helped with this book.
    Their valuable feedback and expert advice improved its quality significantly:
    Diego Molina (staff software engineer at Sauce Labs and technical lead of the
    Selenium project), Filippo Ricca (associate professor of computer science at Università
    di Genova), Andrea Stocco (postdoctoral researcher at Software Institute in Università
    della Svizzera italiana), Ivan Krutov (software developer at Aerokube), and Daniel
    Hinojosa (independent consultant, programmer, instructor, speaker, and author)—thank
    you very much.'
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, I would like to acknowledge the contribution of Simon Stewart (creator
    of WebDriver and Selenium project lead until 2021). Thanks a lot, Simon, for writing
    the foreword on this book and for your priceless feedback about its content. But
    mainly, I want to recognize your work during all these years leading the Selenium
    project. Your contributions to the automation testing community are already part
    of software history.
  prefs: []
  type: TYPE_NORMAL
