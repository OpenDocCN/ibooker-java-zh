["```java\n<dependency>\n  <groupId>io.quarkus</groupId>\n  <artifactId>quarkus-smallrye-health</artifactId>\n</dependency>\n```", "```java\n<dependency>\n  <groupId>io.quarkus</groupId>\n  <artifactId>quarkus-minikube</artifactId>\n</dependency>\n```", "```java\nquarkus.kubernetes.liveness-probe.period=10s\n```", "```java\n@Incoming(\"ticks\")\n@Outgoing(\"processed\")\n@Acknowledgment(Acknowledgment.Strategy.MANUAL)                            ![1](assets/1.png)\nMessage<String> process(Message<Long> message) throws Exception {          ![2](assets/2.png)\n    if (count++ % 8 == 0) {                                                ![3](assets/3.png)\n      message.nack(new Throwable(\"Random failure to process a record.\"))\n          .toCompletableFuture().join();\n      return null;\n    }\n    String value = String.valueOf(message.getPayload());\n    value += \" consumed in pod (\" + InetAddress.getLocalHost().getHostName() + \")\";\n    message.ack().toCompletableFuture().join();                            ![4](assets/4.png)\n    return message.withPayload(value);\n}\n```", "```java\n{\n    \"status\": \"UP\",\n    \"checks\": [\n        {\n            \"name\": \"SmallRye Reactive Messaging - liveness check\",\n            \"status\": \"UP\",\n            \"data\": {\n                \"ticks\": \"[OK]\",                     ![1](assets/1.png)\n                \"processed\": \"[OK]\"\n            }\n        },\n        {\n            \"name\": \"SmallRye Reactive Messaging - readiness check\",\n            \"status\": \"UP\",\n            \"data\": {\n                \"ticks\": \"[OK]\",\n                \"processed\": \"[OK]\"\n            }\n        }\n    ]\n}\n```", "```java\n> kubectl get pods\nNAME                                       READY   STATUS    RESTARTS   AGE\nobservability-processor-5cffd8c755-d5578   1/1     Running   2          84s\nobservability-ticker-bd8f6f5bb-hqtpj       1/1     Running   0          2m\nobservability-viewer-786dd8bc84-zbjp4      1/1     Running   0          3m\n```", "```java\n{\n    \"status\": \"DOWN\",\n    \"checks\": [\n        {\n            \"name\": \"SmallRye Reactive Messaging - liveness check\",\n            \"status\": \"DOWN\",                                               ![1](assets/1.png)\n            \"data\": {\n                \"ticks\": \"[KO] - Random failure to process a record.\",      ![2](assets/2.png)\n                \"processed\": \"[KO] - Multiple exceptions caught:\n                    [Exception 0] java.util.concurrent.CompletionException:\n                      java.lang.Throwable: Random failure to process a record.\n                    [Exception 1] io.smallrye.reactive.messaging.ProcessingException:\n                      SRMSG00103: Exception thrown when calling the method\n                      org.acme.Processor#process\"\n            }\n        },\n        {\n            \"name\": \"SmallRye Reactive Messaging - readiness check\",\n            \"status\": \"UP\",\n            \"data\": {\n                \"ticks\": \"[OK] - no subscription yet,\n                    so no connection to the Kafka broker yet\"   ![3](assets/3.png)\n                \"processed\": \"[OK]\"\n            }\n        }\n    ]\n}\n```", "```java\n<dependency>\n  <groupId>io.quarkus</groupId>\n  <artifactId>quarkus-micrometer-registry-prometheus</artifactId>\n</dependency>\n```", "```java\n# HELP kafka_consumer_fetch_manager_records_consumed_total The total number of\n# records consumed\nkafka_consumer_fetch_manager_records_consumed_total \\\n  {client_id=\"kafka-consumer-ticks\",kafka_version=\"2.8.0\",} 726.0\n# HELP kafka_consumer_response_total The total number of responses received\nkafka_consumer_response_total\n  {client_id=\"kafka-consumer-ticks\",kafka_version=\"2.8.0\",} 123.0\n# HELP kafka_consumer_fetch_manager_fetch_latency_avg The average time taken for\n# a fetch request.\nkafka_consumer_fetch_manager_fetch_latency_avg \\\n  {client_id=\"kafka-consumer-ticks\",kafka_version=\"2.8.0\",} 485.6222222222222\n# HELP kafka_consumer_fetch_manager_records_consumed_rate\n# The average number of records consumed per second\nkafka_consumer_fetch_manager_records_consumed_rate \\\n  {client_id=\"kafka-consumer-ticks\",kafka_version=\"2.8.0\",} 15.203870076019351\n# HELP kafka_consumer_coordinator_assigned_partitions\n# The number of partitions currently assigned to this consumer\nkafka_consumer_coordinator_assigned_partitions \\\n  {client_id=\"kafka-consumer-ticks\",kafka_version=\"2.8.0\",} 3.0\n# HELP kafka_producer_response_rate The number of responses received per second\nkafka_producer_response_rate \\\n  {client_id=\"kafka-producer-processed\",kafka_version=\"2.8.0\",} 3.8208002687156233\n# HELP kafka_producer_request_rate The number of requests sent per second\nkafka_producer_request_rate \\\n  {client_id=\"kafka-producer-processed\",kafka_version=\"2.8.0\",} 3.820639852212612\n# HELP kafka_producer_record_send_rate The average number of records sent per second.\nkafka_producer_record_send_rate \\\n  {client_id=\"kafka-producer-processed\",kafka_version=\"2.8.0\",} 15.230982251500022\n# HELP kafka_producer_record_send_total The total number of records sent.\nkafka_producer_record_send_total \\\n  {client_id=\"kafka-producer-processed\",kafka_version=\"2.8.0\",}\\\n 726.0\n# HELP kafka_producer_response_total The total number of responses received\nkafka_producer_response_total \\\n  {client_id=\"kafka-producer-processed\",kafka_version=\"2.8.0\",} \\\n 182.0\n# HELP kafka_producer_request_total The total number of requests sent\nkafka_producer_request_total \\\n  {client_id=\"kafka-producer-processed\",kafka_version=\"2.8.0\",} \\\n 182.0\n# HELP kafka_producer_request_latency_avg The average request latency in ms\nkafka_producer_request_latency_avg \\\n  {client_id=\"kafka-producer-processed\",kafka_version=\"2.8.0\",} 10.561797752808989\n```", "```java\n<dependency>\n  <groupId>io.quarkus</groupId>\n  <artifactId>quarkus-opentelemetry-exporter-jaeger</artifactId>\n</dependency>\n```", "```java\nquarkus.opentelemetry.tracer.exporter.jaeger.endpoint=\nhttp://simplest-collector.jaeger:14250\n```", "```java\nkubectl create ns jaeger\nkubectl apply -f deploy/jaeger/jaeger-simplest.yaml -n jaeger\n```", "```java\nkubectl delete kafkatopics -n kafka processed\nkubectl delete kafkatopics -n kafka ticks\nkubectl apply -f deploy/kafka/ticks.yaml\nkubectl apply -f deploy/kafka/processed.yaml\n```", "```java\ncd ticker\nmvn verify -Dquarkus.kubernetes.deploy=true\n# After 20-30 seconds\nkubectl delete all --all -n default\n```", "```java\nmp.messaging.incoming.ticks.auto.offset.reset=earliest\n```"]