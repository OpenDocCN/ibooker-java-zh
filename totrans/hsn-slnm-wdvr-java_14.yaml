- en: Appendix A. What’s New in Selenium 4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This appendix provides a summary of the novelties available in Selenium 4\.
    The aim of this content is twofold. First, it enumerates the new features in the
    core components of the Selenium suite (i.e., WebDriver, Driver, and IDE), providing
    a link to the book chapter that explains each aspect. In addition, this appendix
    describes other aspects of the Selenium project that changed with Selenium 4,
    such as documentation and governance. The second objective is to identify the
    deprecated parts and the corresponding new features when migrating from Selenium
    3 to 4.
  prefs: []
  type: TYPE_NORMAL
- en: Selenium WebDriver
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first stable version of Selenium WebDriver 4.0.0 was released on October
    13, 2021\. [Table A-1](#novelties_sel_web_4) summarizes the most relevant new
    features in this version compared with the former stable version (i.e., Selenium
    WebDriver 3.141.59).
  prefs: []
  type: TYPE_NORMAL
- en: Table A-1\. Novelties in Selenium WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Feature | Description | Chapter | Section |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Full adoption of W3C WebDriver | Standard communication protocol between
    the Selenium WebDriver API and the drivers | [Chapter 1](ch01.html#ch01) | [“Selenium
    WebDriver”](ch01.html#sel-web) |'
  prefs: []
  type: TYPE_TB
- en: '| Relative locators | Location strategy based on the proximity of other web
    elements | [Chapter 3](ch03.html#ch03) | [“Relative Locators”](ch03.html#rel-loc)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Pinned scripts | Attach a piece of JavaScript to a WebDriver session | [Chapter 4](ch04.html#ch04)
    | [“Pinned Scripts”](ch04.html#pinned-scripts) |'
  prefs: []
  type: TYPE_TB
- en: '| Element screenshots | Capture screenshots of web elements (instead of the
    entire page) | [Chapter 4](ch04.html#ch04) | [“WebElement Screenshots”](ch04.html#webelements-screenshots)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Shadow DOM | Seamless access to a shadow tree | [Chapter 4](ch04.html#ch04)
    | [“The Shadow DOM”](ch04.html#shadow-dom) |'
  prefs: []
  type: TYPE_TB
- en: '| Open new windows and tabs | Improved way to navigate to different windows
    and tabs | [Chapter 4](ch04.html#ch04) | [“Tabs and Windows”](ch04.html#tabs-and-windows)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Decorators | Wrappers for `WebDriver` objects for implementing event listeners
    | [Chapter 4](ch04.html#ch04) | [“Event Listeners”](ch04.html#event-listeners)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Chrome DevTools Protocol | Native access to the DevTools in Chromium-based
    browsers (e.g., Chrome and Edge) | [Chapter 5](ch05.html#ch05) | [“The Chrome
    DevTools Protocol”](ch05.html#the-chrome-devtools-protocol) |'
  prefs: []
  type: TYPE_TB
- en: '| Network interception | Stubbing out the backend requests and intercepting
    network traffic | [Chapter 5](ch05.html#ch05) | [“Network interceptor”](ch05.html#network-interceptor)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Basic authentication | Simplified API for basic and digest authentication
    | [Chapter 5](ch05.html#ch05) | [“Basic and digest authentication”](ch05.html#basic-and-digest-auth)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Full-page screenshots | Capture the full content of a web page | [Chapter 5](ch05.html#ch05)
    | [“Full-page screenshot”](ch05.html#fullpage-screenshot) |'
  prefs: []
  type: TYPE_TB
- en: '| Location context | Mock geolocation coordinates | [Chapter 5](ch05.html#ch05)
    | [“Location Context”](ch05.html#location-context) |'
  prefs: []
  type: TYPE_TB
- en: '| Print to PDF | Save web pages as PDF documents | [Chapter 5](ch05.html#ch05)
    | [“Print Page”](ch05.html#print-pdf) |'
  prefs: []
  type: TYPE_TB
- en: '| WebDriver BiDi | Bidirectional communication between driver and browser |
    [Chapter 5](ch05.html#ch05) | [“WebDriver BiDi”](ch05.html#web-bidi) |'
  prefs: []
  type: TYPE_TB
- en: Migration Guide
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section summarizes the changes you need to make to migrate an existing
    codebase that uses Selenium WebDriver 3 to version 4.
  prefs: []
  type: TYPE_NORMAL
- en: Locators
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The utility methods to find elements (`FindsBy` interfaces) have been removed
    in Selenium WebDriver 4\. [Table A-2](#locators_selenium3_4) compares the old
    and new API for finding Web Elements in Selenium WebDriver. You can find more
    details about this feature in [“Locating WebElements”](ch03.html#location).
  prefs: []
  type: TYPE_NORMAL
- en: Table A-2\. Migration of web element location in Selenium WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: User gestures
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The class `Actions` allows emulating complex user gestures (such as drag and
    drop, hovering, mouse movements, etc.). As illustrated in [Table A-3](#actions_selenium3_4),
    the API exposed by this class has been simplified in Selenium WebDriver 4\. [“User
    Gestures”](ch03.html#user-gestures) contains further information and examples
    about this class.
  prefs: []
  type: TYPE_NORMAL
- en: Table A-3\. Migration of the Actions class in Selenium WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Waits and timeouts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The parameters to specify timeouts have switched from `TimeUnit` to `Duration`.
    [Table A-4](#wait_selenium3_4) describes this change. You can see more detail
    in [“Waiting Strategies”](ch03.html#waiting_strategies) and [“Timeouts”](ch04.html#timeouts).
  prefs: []
  type: TYPE_NORMAL
- en: Table A-4\. Migration of waits and timeouts in Selenium WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Event listeners
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Selenium WebDriver 3, we used the class `EventFiringWebDriver` to create
    event listeners. This class is deprecated in Selenium WebDriver 4, and instead,
    the class `EventFiringDecorator` is recommended. [Table A-5](#locators_selenium3_4_2)
    summarizes this change. [“Event Listeners”](ch04.html#event-listeners) contains
    a complete example of this feature.
  prefs: []
  type: TYPE_NORMAL
- en: Table A-5\. Migration of event listeners in Selenium WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Capabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The static methods for selecting different browser types have been removed in
    Selenium WebDriver 4\. Instead, we should use browser-specific options. [Table A-6](#caps_selenium3_4)
    summarizes this change. [“Browser Capabilities”](ch05.html#browser-caps) contains
    more details and examples.
  prefs: []
  type: TYPE_NORMAL
- en: Table A-6\. Migration of desired capabilities in Selenium WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Then, the `WebDriver` constructors based on capabilities are deprecated instead
    of browser-specific options. [Table A-7](#caps_selenium3_4_2) shows an example
    of this process. You can find examples using this constructor [“Browser Capabilities”](ch05.html#browser-caps).
  prefs: []
  type: TYPE_NORMAL
- en: Table A-7\. Migration of WebDriver instantiation using capabilities in Selenium
    WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, how capabilities are merged has changed in Selenium WebDriver 4\.
    In Selenium WebDriver 3, it was possible to combine capabilities by mutating the
    calling object. This process is different in Selenium WebDriver 4, in which the
    merge operation needs to be assigned. [Table A-8](#caps_selenium3_4_3) provides
    an example of this change.
  prefs: []
  type: TYPE_NORMAL
- en: Table A-8\. Migration of merging capabilities in Selenium WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the `BrowserType` interface has been deprecated in favor of the new
    `Browser` interface. [Table A-9](#caps_selenium3_4_4) illustrates the difference
    between these interfaces when specifying capabilities. You can find more details
    about this aspect in [“Creation of RemoteWebDriver Objects”](ch06.html#remotewebdriver-creation).
  prefs: []
  type: TYPE_NORMAL
- en: Table A-9\. Migration of capabilities in Selenium WebDriver 4
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Selenium Grid
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Selenium Grid 4 has been completely rewritten from scratch. The new codebase
    has been created with all the learning from Selenium Grid 3, improving its source
    code maintainability. Selenium Grid 4 supports the classical mode implemented
    in version 3, i.e., the standalone and the hub-nodes architecture. In addition,
    Selenium Grid provides a fully distributed architecture to improve its overall
    performance and scalability. Finally, Selenium Grid 4 uses modern infrastructure
    technologies such as Docker, Kubernetes, or distributed tracing using OpenTelemetry.
  prefs: []
  type: TYPE_NORMAL
- en: '[“Selenium Grid”](ch01.html#sel-grid) provides an introduction to Selenium
    Grid. Then, [“Selenium Grid”](ch06.html#sel-grid-ch06) explains the details of
    the different modes of Selenium Grid (i.e., standalone, hub-nodes, and fully distributed),
    and how to use it from Selenium WebDriver tests.'
  prefs: []
  type: TYPE_NORMAL
- en: Migration guide
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When using Selenium Grid as a Java dependency and bumping to version 4, in addition
    to the version upgrade, you should know that the project coordinates changed in
    Selenium Grid 4\. Previously, the `artifactId` was `selenium-server`. This value
    has changed to `selenium-grid` in Selenium Grid 4\. [Table A-10](#maven_gradle_grid3_4)
    contains the new coordinates of Selenium Grid 4 in Maven and Gradle.
  prefs: []
  type: TYPE_NORMAL
- en: Table A-10\. Migration of Selenium Grid 4 as Maven and Gradle dependency
  prefs: []
  type: TYPE_NORMAL
- en: '| Selenium WebDriver 3 | Selenium WebDriver 4 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Selenium IDE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Selenium IDE is introduced in [“Selenium IDE”](ch01.html#sel-ide). Some of
    the new features available as of Selenium 4 are:'
  prefs: []
  type: TYPE_NORMAL
- en: Backup element selectors
  prefs: []
  type: TYPE_NORMAL
- en: Selenium IDE records multiple locators (e.g., by id, XPath, or CSS selector)
    for each element. This way, if the test execution does not locate an element using
    the first locator, it will fall back to the following until it is found.
  prefs: []
  type: TYPE_NORMAL
- en: Control flows
  prefs: []
  type: TYPE_NORMAL
- en: Selenium IDE enhances script execution using conditionals (i.e., `if`, `else`,
    `else if`, and `end`) and loops (i.e., `do`, `while`, `times`, and `forEach`)
    .
  prefs: []
  type: TYPE_NORMAL
- en: Code export
  prefs: []
  type: TYPE_NORMAL
- en: Selenium IDE allows exporting the recording to several Selenium WebDriver binding
    languages (i.e., C#, Java, JavaScript, Python, and Ruby) and unit testing frameworks
    (i.e., NUnit, xUnit, JUnit, Mocha, pytest, and RSpec).
  prefs: []
  type: TYPE_NORMAL
- en: Plug-ins
  prefs: []
  type: TYPE_NORMAL
- en: We can extend the Selenium IDE (e.g., introducing new commands or third-party
    integration) using custom add-ons.
  prefs: []
  type: TYPE_NORMAL
- en: Other Novelties
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The official Selenium documentation has been significantly improved with Selenium
    4\. The new site is available on [*https://www.selenium.dev*](https://www.selenium.dev),
    and it covers the Selenium subprojects (WebDriver, IDE, and Grid), user guide,
    blog, support, and other project information.
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, Simon Stewart, the cocreator of Selenium WebDriver and Selenium
    project lead since 2009, stepped down as leader of the Selenium project on October
    27, 2021\. You can find the current project structure (composed of the project
    leadership committee, technical leadership committee, and Selenium committers
    and triggers) and governance (i.e., model, philosophy, project roles, decision-making
    process, etc.) on the [Selenium website](https://www.selenium.dev/project).
  prefs: []
  type: TYPE_NORMAL
