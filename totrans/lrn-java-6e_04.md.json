["```java\n\\uxxxx\n```", "```java\njshell> import javax.swing.*\n\njshell> JFrame f = new JFrame(\"Emoji Test\")\nf ==> javax.swing.JFrame[frame0 ...=true]\n\njshell> f.add(new JLabel(\"Hi \\uD83D\\uDE00\"))\n$12 ==> javax.swing.JLabel[ ...=CENTER]\n\njshell> f.setSize(300,200)\n\njshell> f.setVisible(true)\n```", "```java\n    /*  This is a\n multiline\n comment.    */\n\n    // This is a single-line comment\n    // and so // is this\n```", "```java\n/**\n * I think this class is possibly the most amazing thing you will\n * ever see. Let me tell you about my own personal vision and\n * motivation in creating it.\n * <p>\n * It all began when I was a small child, growing up on the\n * streets of Idaho. Potatoes were the rage, and life was good...\n *\n * @see PotatoPeeler\n * @see PotatoMasher\n * @author John 'Spuds' Smith\n * @version 1.00, 19 Nov 2022\n */\nclass Potato { ... }\n```", "```java\nimport javax.swing.*;\n\npublic class HelloJava {\n  public static void main(String[] args) {\n    JFrame frame = new JFrame(\"Hello, Java!\");\n    JLabel label = new JLabel(\"Hello, Java!\", JLabel.CENTER);\n    frame.add(label);\n    frame.setSize(300, 300);\n    frame.setVisible(true);\n  }\n}\n```", "```java\njshell> double radius = 42.0;\nradius ==> 42.0\n\njshell> Math.PI\n$2 ==> 3.141592653589793\n\njshell> Math.PI = 3;\n|  Error:\n|  cannot assign a value to final variable PI\n|  Math.PI = 3;\n|  ^-----^\n\njshell> double area = Math.PI * radius * radius;\narea ==> 5541.769440932396\n\njshell> radius = 6;\nradius ==> 6.0\n\njshell> area = Math.PI * radius * radius;\narea ==> 113.09733552923255\n\njshell> area\narea ==> 113.09733552923255\n```", "```java\n    int foo;\n    double d1, d2;\n    boolean isFun;\n```", "```java\n    int foo = 42;\n    double d1 = 3.14, d2 = 2 * 3.14;\n    boolean isFun = true;\n```", "```java\n    int i = 1230;\n```", "```java\n    int i = 0b01001011;            // i = 75 decimal\n```", "```java\n    int i = 01230;             // i = 664 decimal\n```", "```java\n    int i = 0xFFFF;            // i = 65535 decimal\n```", "```java\n    long l = 13L;\n    long l = 13;           // equivalent: 13 is converted from type int\n    long l = 40123456789L;\n    long l = 40123456789;  // error: too big for an int without conversion\n```", "```java\n    byte b = 42;\n    int i = 43;\n    int result = b * i;  // b is promoted to int before multiplication\n```", "```java\n    int i = 13;\n    byte b = i;        // Compile-time error, explicit cast needed\n    byte b = (byte) i; // OK\n```", "```java\n    int RICHARD_NIXONS_SSN = 567_68_0515;\n    int for_no_reason = 1___2___3;\n    int JAVA_ID = 0xCAFE_BABE;\n    long grandTotal = 40_123_456_789L;\n```", "```java\njshell> long m = 41234567890;\n|  Error:\n|  integer number too large\n|  long m = 41234567890;\n|           ^\n\njshell> long m = 40123456789L;\nm ==> 40123456789\n\njshell> long grandTotal = 40_123_456_789L;\ngrandTotal ==> 40123456789\n```", "```java\n    double d = 8.31;\n    double e = 3.00e+8;\n    float f = 8.31F;\n    float g = 3.00e+8F;\n    float pi = 3.1415_9265F;\n```", "```java\n    char a = 'a';\n    char newline = '\\n';\n    char smiley = '\\u263a';\n```", "```java\n    Car myCar = new Car();\n    Car anotherCar = myCar;\n```", "```java\njshell> class Car {}\n|  created class Car\n\njshell> Car myCar = new Car()\nmyCar ==> Car@21213b92\n\njshell> Car anotherCar = myCar\nanotherCar ==> Car@21213b92\n\njshell> Car notMyCar = new Car()\nnotMyCar ==> Car@66480dd7\n```", "```java\njshell> class Car2 {}\n|  created class Car2\n\njshell> Car2 myCar2 = new Car2()\nmyCar2 ==> Car2@728938a9\n\njshell> var myCar3 = new Car2()\nmyCar3 ==> Car2@6433a2\n```", "```java\n    myMethod(myCar);\n```", "```java\n    System.out.println(\"Hello, World...\");\n    String s = \"I am the walrus...\";\n    String t = \"John said: \\\"I am the walrus...\\\"\";\n```", "```java\n    String quote = \"Fourscore and \" + \"seven years ago,\";\n    String more = quote + \" our\" + \" fathers\" +  \" brought...\";\n\n    // quote is now \"Fourscore and seven years ago,\"\n    // more is now \" our fathers brought...\"\n```", "```java\n    int size = 5;\n    if (size > 10)\n      doSomething();\n    for (int x = 0; x < size; x++) {\n      doSomethingElse();\n      doMoreThings();\n    }\n```", "```java\n    // These are all valid Java expressions\n    new Object()\n    Math.sin(3.1415)\n    42 * 64\n```", "```java\n  {\n    int size = 5;\n    setName(\"Max\");\n    // more statements could follow...\n  }\n```", "```java\n  setUpDog(String name) {\n    int size = 5;\n    setName(name);\n    // do any other setup work ...\n  }\n```", "```java\n    {\n      // Scopes are like Vegas...\n      // What's declared in a scope, stays in that scope\n      int i = 5;\n    }\n\n    i = 6;  // Compile-time error, no such variable i\n```", "```java\n    if (condition)\n      statement1;\n    else\n      statement2;\n```", "```java\n// filename: ch04/examples/IfDemo.java\n    int i = 0;\n    // you can use i now to do other work and then\n    // we can test it to see if anything has changed\n    if (i == 0)\n      System.out.println(\"i is still zero\");\n    else\n      System.out.println(\"i is most definitely not zero\");\n```", "```java\n    if (condition) {\n      // condition was true, execute this block\n      statement;\n      statement;\n      // and so on...\n    } else {\n      // condition was false, execute this block\n      statement;\n      statement;\n      // and so on...\n    }\n```", "```java\n// filename: ch04/examples/IfDemo.java\n    int j = 0;\n    // you can use j now to do work like i before,\n    // then make sure that work didn't drop\n    // j's value below zero\n    if (j < 0) {\n      System.out.println(\"j is less than 0! Resetting.\");\n      j = 0;\n    } else {\n      System.out.println(\"j is positive or 0\\. Continuing.\");\n    }\n```", "```java\n    switch (expression) {\n      case constantExpression :\n        statement;\n      [ case constantExpression :\n        statement;  ]\n      // ...\n      [ default :\n        statement;  ]\n    }\n```", "```java\n// filename: ch04/examples/SwitchDemo.java\n    int value = 2;\n\n    switch(value) {\n      case 1:\n        System.out.println(1);\n      case 2:\n        System.out.println(2);\n      case 3:\n        System.out.println(3);\n    }\n    // prints both 2 and 3\n```", "```java\n// filename: ch04/examples/SwitchDemo.java\n    int value = GOOD;\n\n    switch (value) {\n      case GOOD:\n        // something good\n        System.out.println(\"Good\");\n        break;\n      case BAD:\n        // something bad\n        System.out.println(\"Bad\");\n        break;\n      default:\n        // neither one\n        System.out.println(\"Not sure\");\n        break;\n    }\n    // prints only \"Good\"\n```", "```java\n// filename: ch04/examples/SwitchDemo.java\n    int value = MINISCULE;\n    String size = \"Unknown\";\n\n    switch(value) {\n      case MINISCULE:\n      case TEENYWEENY:\n      case SMALL:\n        size = \"Small\";\n        break;\n      case MEDIUM:\n        size = \"Medium\";\n        break;\n      case LARGE:\n      case EXTRALARGE:\n        size = \"Large\";\n        break;\n    }\n\n    System.out.println(\"Your size is: \" + size);\n```", "```java\n// filename: ch04/examples/SwitchDemo.java\n\n    int value = EXTRALARGE;\n\n    String size = switch(value) {\n      case MINISCULE, TEENYWEENY, SMALL -> \"Small\";\n      case MEDIUM -> \"Medium\";\n      case LARGE, EXTRALARGE -> \"Large\";\n      default -> \"Unknown\";\n    }; // note the semicolon! It completes the switch statement\n\n    System.out.println(\"Your size is: \" + size);\n    // prints \"Your size is Large\"\n```", "```java\n    while (condition)\n      statement; // or block\n\n    do\n      statement; // or block\n    while (condition);\n```", "```java\n    while(mailQueue.isEmpty())\n      wait();\n```", "```java\n// filename: ch04/examples/WhileDemo.java\n\n    int count = 10;\n    while(count > 0) {\n      System.out.println(\"Counting down: \" + count);\n      // maybe do other useful things\n      // and decrement our count\n      count = count - 1;\n    }\n    System.out.println(\"Done\");\n```", "```java\n    do {\n      System.out.println(\"Please enter a valid email: \");\n      String email = askUserForEmail();\n    } while (email.hasErrors());\n```", "```java\n    for (initialization; condition; incrementor)\n      statement; // or block\n```", "```java\n// filename: ch04/examples/ForDemo.java\n\n    for (int i = 0; i < 100; i++) {\n      System.out.println(i);\n      int j = i;\n      // do any other work needed\n    }\n```", "```java\n// filename: ch04/examples/ForDemo.java\n\n    // generate some coordinates\n    for (int x = 0, y = 10; x < y; x++, y--) {\n      System.out.println(x + \", \" + y);\n      // do other stuff with our new (x, y)...\n    }\n```", "```java\n    int x;\n    for(x = 0; x < someHaltingValue; x++) {\n      System.out.print(x + \": \");\n      // do whatever work you need ...\n    }\n    // x is still valid and available\n    System.out.println(\"After the loop, x is: \" + x);\n```", "```java\n    int x = 1;\n    for(; x < someHaltingValue; x++) {\n      System.out.print(x + \": \");\n      // do whatever work you need ...\n    }\n```", "```java\n    for (varDeclaration : iterable)\n      statement_or_block;\n```", "```java\n// filename: ch04/examples/EnhancedForDemo.java\n\n    int [] arrayOfInts = new int [] { 1, 2, 3, 4 };\n    int total = 0;\n\n    for(int i  : arrayOfInts) {\n      System.out.println(i);\n      total = total + i;\n    }\n    System.out.println(\"Total: \" + total);\n\n    // ArrayList is a popular collection class\n    ArrayList<String> list = new ArrayList<String>();\n    list.add(\"foo\");\n    list.add(\"bar\");\n\n    for(String s : list)\n      System.out.println(s);\n```", "```java\n    while(true) {\n      if (watchForErrors())\n        break;\n      // No errors yet so do some work...\n    }\n    // The \"break\" will cause execution to\n    // resume here, after the while loop\n```", "```java\n// filename: ch04/examples/ForDemo.java\n\n    for (int i = 0; i < 10; i++) {\n      if (i == 5)\n        continue;\n      System.out.println(i);\n    }\n```", "```java\n    labelOne:\n      while (condition1) {\n        // ...\n        labelTwo:\n          while (condition2) {\n            // ...\n            if (smallProblem)\n              break; // Will break out of just this loop\n\n            if (bigProblem)\n              break labelOne; // Will break out of both loops\n          }\n        // after labelTwo\n      }\n    // after labelOne\n```", "```java\n    if (1 < 2) {\n      // This branch always runs and the compiler knows it\n      System.out.println(\"1 is, in fact, less than 2\");\n      return;\n    } else {\n      // unreachable statements, this branch never runs\n      System.out.println(\"Look at that, seems we got \\\"math\\\" wrong.\");\n    }\n```", "```java\njshell> int x = 5\nx ==> 5\n\njshell> int y = 12\ny ==> 12\n\njshell> int sumOfSquares = x * x + y * y\nsumOfSquares ==> 169\n\njshell> int explicitOrder = (((x * x) + y) * y)\nexplicitOrder ==> 444\n\njshell> sumOfSquares % 5\n$7 ==> 4\n```", "```java\n    int i, j;   // statement with no resulting value\n    int k = 6;  // also a statement with no result\n    i = 5;      // both a statement and an expression\n```", "```java\n    j = (i = 5);\n    // both j and i are now 5\n```", "```java\n    int i = myObject.length;\n    String s = myObject.name;\n    myObject.someMethod();\n```", "```java\n    int len = myObject.name.length();\n    int initialLen = myObject.name.substring(5, 10).length();\n```", "```java\n    System.out.println(\"calling println on out\");\n```", "```java\n    System.out.println(\"Hello, World...\");\n    int myLength = myString.length();\n```", "```java\njshell> String myString = \"Hi there!\"\nmyString ==> \"Hi there!\"\n\njshell> int myLength = myString.length()\nmyLength ==> 9\n\njshell> int mistake = System.out.println(\"This is a mistake.\")\n|  Error:\n|  incompatible types: void cannot be converted to int\n|  int mistake = System.out.println(\"This is a mistake.\");\n|                ^--------------------------------------^\n```", "```java\n// filename: ch04/examples/EuclidGCD.java\n\n    int a = 2701;\n    int b = 222;\n    while (b != 0) {\n      if (a > b) {\n        a = a - b;\n      } else {\n        b = b - a;\n      }\n    }\n    System.out.println(\"GCD is \" + a);\n```", "```java\n    Object o = new Object();\n```", "```java\njshell> int hours = new Date().getHours()\nhours ==> 13\n```", "```java\njshell> boolean b\nb ==> false\n\njshell> String str = \"something\"\nstr ==> \"something\"\n\njshell> b = (str instanceof String)\nb ==> true\n\njshell> b = (str instanceof Object)\nb ==> true\n\njshell> b = (str instanceof Date)\n|  Error:\n|  incompatible types: java.lang.String cannot be converted to java.util.Date\n|  b = (str instanceof Date)\n|       ^-^\n```", "```java\n    if (myVariable instanceof byte[]) {\n      // now we're sure myVariable is an array of bytes\n      // go ahead with your array work here...\n    }\n```", "```java\njshell> String s = null\ns ==> null\n\njshell> Date d = null\nd ==> null\n\njshell> s instanceof String\n$7 ==> false\n\njshell> d instanceof Date\n$8 ==> false\n\njshell> d instanceof String\n|  Error:\n|  incompatible types: java.util.Date cannot be converted to java.lang.String\n|  d instanceof String\n|  ^\n```", "```java\n    int[] arrayOfInts;   // preferred\n    int [] arrayOfInts;  // spacing is optional\n    int arrayOfInts[];   // C-style, allowed\n```", "```java\n    String[] someStrings;\n    JLabel someLabels[];\n```", "```java\n    int number = 10;\n    arrayOfInts = new int[42];\n    someStrings = new String[ number + 2 ];\n```", "```java\n    double[] someNumbers = new double[20];\n    Component[] widgets = new Component[12];\n```", "```java\n    int[] grades = new int[30];\n    // first element grades[0] == 0\n    // ...\n    // last element grades[19] == 0\n```", "```java\n    String names[] = new String[42];\n    // names[0] == null\n    // names[1] == null\n    // ...\n```", "```java\njshell> int[] primes = { 2, 3, 5, 7, 7+4 };\nprimes ==> int[5] { 2, 3, 5, 7, 11 }\n\njshell> primes[2]\n$12 ==> 5\n\njshell> primes[4]\n$13 ==> 11\n```", "```java\njshell> String[] verbs = { \"run\", \"jump\", \"hide\" }\nverbs ==> String[3] { \"run\", \"jump\", \"hide\" }\n\njshell> import javax.swing.JLabel\n\njshell> JLabel yesLabel = new JLabel(\"Yes\")\nyesLabel ==> javax.swing.JLabel...\n\njshell> JLabel noLabel = new JLabel(\"No\")\nnoLabel ==> javax.swing.JLabel...\n\njshell> JLabel[] choices={ yesLabel, noLabel,\n   ...> new JLabel(\"Maybe\") }\nchoices ==> JLabel[3] { javax.swing.JLabel ... ition=CENTER] }\n\njshell> Object[] anything = { \"run\", yesLabel, new Date() }\nanything ==> Object[3] { \"run\", javax.swing.JLabe ... 2023 }\n```", "```java\n    JLabel[] threeLabels = new JLabel[3];\n    JLabel[] threeLabels = { null, null, null };\n```", "```java\njshell> char[] alphabet = new char[26]\nalphabet ==> char[26] { '\\000', '\\000' ... , '\\000' }\n\njshell> String[] musketeers = { \"one\", \"two\", \"three\" }\nmusketeers ==> String[3] { \"one\", \"two\", \"three\" }\n\njshell> alphabet.length\n$24 ==> 26\n\njshell> musketeers.length\n$25 ==> 3\n```", "```java\n// remember the first index is 0!\njshell> System.out.println(musketeers[1])\ntwo\n```", "```java\n    JButton[] keyPad = new JButton[10];\n    for (int i=0; i < keyPad.length; i++)\n      keyPad[i] = new JButton(\"Button \" + i);\n```", "```java\n    for (JButton b : keyPad)\n      System.out.println(b);\n```", "```java\n    String [] states = new String [50];\n\n    try {\n      states[0] = \"Alabama\";\n      states[1] = \"Alaska\";\n      // 48 more...\n      states[50] = \"McDonald's Land\";  // Error: array out of bounds\n    } catch (ArrayIndexOutOfBoundsException err) {\n      System.out.println(\"Handled error: \" + err.getMessage());\n    }\n```", "```java\n    System.arraycopy(source, sourceStart, destination, destStart, length);\n```", "```java\n    String[] tmpVar = new String [ 2 * names.length ];\n    System.arraycopy(names, 0, tmpVar, 0, names.length);\n    names = tmpVar;\n```", "```java\njshell> byte[] bar = new byte[] { 1, 2, 3, 4, 5 }\nbar ==> byte[5] { 1, 2, 3, 4, 5 }\n\njshell> byte[] barCopy = Arrays.copyOf(bar, bar.length)\nbarCopy ==> byte[5] { 1, 2, 3, 4, 5 }\n\njshell> byte[] expanded = Arrays.copyOf(bar, bar.length+2)\nexpanded ==> byte[7] { 1, 2, 3, 4, 5, 0, 0 }\n\njshell> byte[] firstThree = Arrays.copyOfRange(bar, 0, 3)\nfirstThree ==> byte[3] { 1, 2, 3 }\n\njshell> byte[] lastThree = Arrays.copyOfRange(bar, 2, bar.length)\nlastThree ==> byte[3] { 3, 4, 5 }\n\njshell> byte[] plusTwo = Arrays.copyOfRange(bar, 2, bar.length+2)\nplusTwo ==> byte[5] { 3, 4, 5, 0, 0 }\n```", "```java\n    Dog pete = new Dog (\"golden\");\n    Dog mj = new Dog (\"black-and-white\");\n    Cat stash = new Cat (\"orange\");\n    setPets (new Animal[] { pete, mj, stash });\n```", "```java\n    ChessPiece[][] chessBoard;\n    chessBoard = new ChessPiece[8][8];\n    chessBoard[0][0] = new ChessPiece.Rook;\n    chessBoard[1][0] = new ChessPiece.Pawn;\n    chessBoard[0][1] = new ChessPiece.Knight;\n    // setup the remaining pieces\n```", "```java\n    Color [][][] rgb = new Color [256][256][256];\n    rgb[0][0][0] = Color.BLACK;\n    rgb[255][255][0] = Color.YELLOW;\n    rgb[128][128][128] = Color.GRAY;\n    // Only 16 million to go!\n```", "```java\n    ChessPiece[] homeRow =  {\n      new ChessPiece(\"Rook\"), new ChessPiece(\"Knight\"),\n      new ChessPiece(\"Bishop\"), new ChessPiece(\"King\"),\n      new ChessPiece(\"Queen\"), new ChessPiece(\"Bishop\"),\n      new ChessPiece(\"Knight\"), new ChessPiece(\"Rook\")\n    };\n\n    chessBoard[0] = homeRow;\n```", "```java\n    boolean [][] checkerBoard = new boolean [8][];\n```", "```java\n    checkerBoard[0] = new boolean [8];\n    checkerBoard[1] = new boolean [8];\n    // ...\n    checkerBoard[7] = new boolean [8];\n```", "```java\n    boolean [][] checkerBoard = new boolean [8][8];\n```", "```java\n        int a = 2701;\n        int b = 222;\n        while (b != 0) {\n          if (a > b) {\n            a = a - b;\n          } else {\n            b = b - a;\n          }\n        }\n        System.out.println(\"GCD is \" + a);\n    ```", "```java\n    % java Euclid\n    The GCD of 2701 and 222 is 37\n    ```", "```java\n        int[][] triangle = new int[5][];\n        for (int i = 0; i < triangle.length; i++) {\n          triangle[i] = new int [i + 1];\n          for (int j = 0; j < i + 1; j++)\n            triangle[i][j] = i + j;\n        }\n    ```", "```java\n        System.out.println(triangle[3][1]);\n    ```", "```java\n    0\n    1\n    2\n    2\n    3\n    4\n    3\n    4\n    5\n    6\n    4\n    5\n    6\n    7\n    8\n    ```", "```java\n        System.out.print(\"Hello\");\n        System.out.print(\" \");\n        System.out.print(\"triangle!\");\n        System.out.println(); // We do want to complete the line\n        // Output:\n        // Hello triangle!\n    ```", "```java\n    % java Triangle\n    0\n    1 2\n    2 3 4\n    3 4 5 6\n    4 5 6 7 8\n    ```"]