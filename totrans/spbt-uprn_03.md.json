["```java\n@RestController\nclass RestApiDemoController {\n\tprivate List<Coffee> coffees = new ArrayList<>();\n}\n```", "```java\n@RestController\nclass RestApiDemoController {\n\tprivate List<Coffee> coffees = new ArrayList<>();\n\n\tpublic RestApiDemoController() {\n\t\tcoffees.addAll(List.of(\n\t\t\t\tnew Coffee(\"Café Cereza\"),\n\t\t\t\tnew Coffee(\"Café Ganador\"),\n\t\t\t\tnew Coffee(\"Café Lareño\"),\n\t\t\t\tnew Coffee(\"Café Três Pontas\")\n\t\t));\n\t}\n}\n```", "```java\n@RestController\nclass RestApiDemoController {\n\tprivate List<Coffee> coffees = new ArrayList<>();\n\n\tpublic RestApiDemoController() {\n\t\tcoffees.addAll(List.of(\n\t\t\t\tnew Coffee(\"Café Cereza\"),\n\t\t\t\tnew Coffee(\"Café Ganador\"),\n\t\t\t\tnew Coffee(\"Café Lareño\"),\n\t\t\t\tnew Coffee(\"Café Três Pontas\")\n\t\t));\n\t}\n\n\t@RequestMapping(value = \"/coffees\", method = RequestMethod.GET)\n\tIterable<Coffee> getCoffees() {\n\t\treturn coffees;\n\t}\n}\n```", "```java\n@GetMapping(\"/coffees\")\nIterable<Coffee> getCoffees() {\n    return coffees;\n}\n```", "```java\n@PostMapping(\"/coffees\")\nCoffee postCoffee(@RequestBody Coffee coffee) {\n    coffees.add(coffee);\n    return coffee;\n}\n```", "```java\n@PutMapping(\"/coffees/{id}\")\nCoffee putCoffee(@PathVariable String id, @RequestBody Coffee coffee) {\n    int coffeeIndex = -1;\n\n    for (Coffee c: coffees) {\n        if (c.getId().equals(id)) {\n            coffeeIndex = coffees.indexOf(c);\n            coffees.set(coffeeIndex, coffee);\n        }\n    }\n\n    return (coffeeIndex == -1) ? postCoffee(coffee) : coffee;\n}\n```", "```java\n@DeleteMapping(\"/coffees/{id}\")\nvoid deleteCoffee(@PathVariable String id) {\n    coffees.removeIf(c -> c.getId().equals(id));\n}\n```", "```java\n@RestController\n@RequestMapping(\"/coffees\")\nclass RestApiDemoController {\n\tprivate List<Coffee> coffees = new ArrayList<>();\n\n\tpublic RestApiDemoController() {\n\t\tcoffees.addAll(List.of(\n\t\t\t\tnew Coffee(\"Café Cereza\"),\n\t\t\t\tnew Coffee(\"Café Ganador\"),\n\t\t\t\tnew Coffee(\"Café Lareño\"),\n\t\t\t\tnew Coffee(\"Café Três Pontas\")\n\t\t));\n\t}\n\n\t@GetMapping\n\tIterable<Coffee> getCoffees() {\n\t\treturn coffees;\n\t}\n\n\t@GetMapping(\"/{id}\")\n\tOptional<Coffee> getCoffeeById(@PathVariable String id) {\n\t\tfor (Coffee c: coffees) {\n\t\t\tif (c.getId().equals(id)) {\n\t\t\t\treturn Optional.of(c);\n\t\t\t}\n\t\t}\n\n\t\treturn Optional.empty();\n\t}\n\n\t@PostMapping\n\tCoffee postCoffee(@RequestBody Coffee coffee) {\n\t\tcoffees.add(coffee);\n\t\treturn coffee;\n\t}\n\n\t@PutMapping(\"/{id}\")\n\tCoffee putCoffee(@PathVariable String id, @RequestBody Coffee coffee) {\n\t\tint coffeeIndex = -1;\n\n\t\tfor (Coffee c: coffees) {\n\t\t\tif (c.getId().equals(id)) {\n\t\t\t\tcoffeeIndex = coffees.indexOf(c);\n\t\t\t\tcoffees.set(coffeeIndex, coffee);\n\t\t\t}\n\t\t}\n\n\t\treturn (coffeeIndex == -1) ? postCoffee(coffee) : coffee;\n\t}\n\n\t@DeleteMapping(\"/{id}\")\n\tvoid deleteCoffee(@PathVariable String id) {\n\t\tcoffees.removeIf(c -> c.getId().equals(id));\n\t}\n}\n```", "```java\n@PutMapping(\"/{id}\")\nResponseEntity<Coffee> putCoffee(@PathVariable String id,\n        @RequestBody Coffee coffee) {\n    int coffeeIndex = -1;\n\n    for (Coffee c: coffees) {\n        if (c.getId().equals(id)) {\n            coffeeIndex = coffees.indexOf(c);\n            coffees.set(coffeeIndex, coffee);\n        }\n    }\n\n    return (coffeeIndex == -1) ?\n            new ResponseEntity<>(postCoffee(coffee), HttpStatus.CREATED) :\n            new ResponseEntity<>(coffee, HttpStatus.OK);\n}\n```"]