["```java\n/**\n * This immutable class represents <i>complex numbers</i>.\n *\n * @author David Flanagan\n * @version 1.0\n */\npublic class Complex {\n    /**\n * Holds the real part of this complex number.\n * @see #y\n */\n    protected double x;\n\n    /**\n * Holds the imaginary part of this complex number.\n * @see #x\n */\n    protected double y;\n\n    /**\n * Creates a new Complex object that represents the complex number\n * x+yi.\n * @param x The real part of the complex number.\n * @param y The imaginary part of the complex number.\n */\n    public Complex(double x, double y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n * Adds two Complex objects and produces a third object that\n * represents their sum.\n * @param c1 A Complex object\n * @param c2 Another Complex object\n * @return  A new Complex object that represents the sum of\n *          <code>c1</code> and <code>c2</code>.\n * @exception java.lang.NullPointerException\n *            If either argument is <code>null</code>.\n */\n    public static Complex add(Complex c1, Complex c2) {\n        return new Complex(c1.x + c2.x, c1.y + c2.y);\n    }\n}\n```", "```java\n<img src=\"doc-files/Circle-2.gif\">\n```", "```java\n@author David Flanagan\n@author Ben Evans\n@author Jason Clark\n```", "```java\n@version 1.32, 08/26/04\n```", "```java\n@param o      the object to insert\n@param index  the position to insert it at\n```", "```java\n@return <code>true</code> if the insertion is successful, or\n        <code>false</code> if the list already contains the object.\n```", "```java\n@exception java.io.FileNotFoundException\n           If the specified file could not be found\n```", "```java\n@deprecated As of Version 3.0, this method is replaced\n            by {@link #setColor}.\n```", "```java\n@since JNUT 3.0\n```", "```java\n@serial include\n@serial exclude\n```", "```java\n@param regexp The regular expression to search for. This string\n              argument must follow the syntax rules described for\n              {@link java.util.regex.Pattern}.\n```", "```java\n@param index {@inheritDoc}\n@return {@inheritDoc}\n```", "```java\n<img src=\"{@docroot}/images/logo.gif\">\nThis is <a href=\"{@docRoot}/legal.xhtml\">Copyrighted</a> material.\n```", "```java\n&lt;code&gt;{@literal <replaceable>text</replaceable>}&lt;/code&gt;\n```", "```java\n*`feature`* [*`label`*]\n\n```", "```java\n@see java.lang.reflect\n```", "```java\n@see java.util.List\n```", "```java\n@see List\n```", "```java\n@see java.io.InputStream#reset\n@see InputStream#close\n```", "```java\n@see InputStream#read(byte[], int, int)\n```", "```java\n@see #setBackgroundColor\n```", "```java\n@see #setPosition(int, int)\n```", "```java\n@see java.io.BufferedInputStream#buf\n```", "```java\n@see #x\n```"]