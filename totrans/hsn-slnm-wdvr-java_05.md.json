["```java\nWebDriver driver = new ChromeDriver();\n```", "```java\noneOf(Capabilities options)\n```", "```java\naddAlternative(Capabilities options)\n```", "```java\naddMetadata(String key, Object value)\n```", "```java\nsetCapability(String capabilityName,\n    Object value)\n```", "```java\naddress(String uri)\naddress(URL url)\naddress(URI uri)\n```", "```java\nconfig(ClientConfig config)\n```", "```java\nwithDriverService(DriverService service)\n```", "```java\nbuild()\n```", "```java\nclass WebDriverBuilderJupiterTest {\n\n    WebDriver driver;\n\n    @BeforeAll\n    static void setupClass() {\n        WebDriverManager.chromedriver().setup(); ![1](assets/1.png)\n    }\n\n    @BeforeEach\n    void setup() {\n        driver = RemoteWebDriver.builder().oneOf(new ChromeOptions()).build(); ![2](assets/2.png)\n    }\n\n    @AfterEach\n    void teardown() {\n        driver.quit();\n    }\n\n    @Test\n    void test() {\n        // TODO: use variable \"driver\" to call the Selenium WebDriver API\n    }\n\n}\n```", "```java\n@BeforeEach\nvoid setup() {\n    driver = RemoteWebDriver.builder().oneOf(new SafariOptions())\n            .addAlternative(new ChromeOptions()).build();\n}\n```", "```java\nclass WdmBuilderJupiterTest {\n\n    WebDriver driver;\n\n    @BeforeEach\n    void setup() {\n        driver = WebDriverManager.chromedriver().create(); ![1](assets/1.png)\n    }\n\n    @AfterEach\n    void teardown() {\n        driver.quit();\n    }\n\n    @Test\n    void test() {\n        // TODO: use variable \"driver\" to call the Selenium WebDriver API\n    }\n\n}\n```", "```java\nget(String url)\n```", "```java\nvoid\n```", "```java\ngetCurrentUrl()\n```", "```java\nString\n```", "```java\ngetTitle()\n```", "```java\nString\n```", "```java\nfindElement(By by)\n```", "```java\nWebElement\n```", "```java\nfindElements(By by)\n```", "```java\nList<WebElement>\n```", "```java\ngetPageSource()\n```", "```java\nString\n```", "```java\nnavigate()\n```", "```java\nNavigation\n```", "```java\ngetWindowHandle()\n```", "```java\nString\n```", "```java\ngetWindowHandles()\n```", "```java\nSet<String>\n```", "```java\nswitchTo()\n```", "```java\nTargetLocator\n```", "```java\nmanage()\n```", "```java\nOptions\n```", "```java\nclose()\n```", "```java\nvoid\n```", "```java\nquit()\n```", "```java\nvoid\n```", "```java\n@Test\nvoid testBasicMethods() {\n    String sutUrl = \"https://bonigarcia.dev/selenium-webdriver-java/\";\n    driver.get(sutUrl); ![1](assets/1.png)\n\n    assertThat(driver.getTitle())\n            .isEqualTo(\"Hands-On Selenium WebDriver with Java\"); ![2](assets/2.png)\n    assertThat(driver.getCurrentUrl()).isEqualTo(sutUrl); ![3](assets/3.png)\n    assertThat(driver.getPageSource()).containsIgnoringCase(\"</html>\"); ![4](assets/4.png)\n}\n```", "```java\n@Test\nvoid testSessionId() {\n    driver.get(\"https://bonigarcia.dev/selenium-webdriver-java/\");\n\n    SessionId sessionId = ((RemoteWebDriver) driver).getSessionId(); ![1](assets/1.png)\n    assertThat(sessionId).isNotNull(); ![2](assets/2.png)\n    log.debug(\"The sessionId is {}\", sessionId.toString()); ![3](assets/3.png)\n}\n```", "```java\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>DOM example</title>\n</head>\n<body>\n  <h1>Heading text</h1>\n  <a href=\"#\">Link text</a>\n</body>\n</html>\n```", "```java\nclick()\n```", "```java\nvoid\n```", "```java\nsubmit()\n```", "```java\nvoid\n```", "```java\nsendKeys(CharSequence... keys)\n```", "```java\nvoid\n```", "```java\nclear()\n```", "```java\nvoid\n```", "```java\ngetTagName()\n```", "```java\nString\n```", "```java\ngetDomProperty(String name)\n```", "```java\nString\n```", "```java\ngetDomAttribute(String name)\n```", "```java\nString\n```", "```java\ngetAttribute(String name)\n```", "```java\nString\n```", "```java\ngetAriaRole()\n```", "```java\nString\n```", "```java\ngetAccessibleName()\n```", "```java\nString\n```", "```java\nisSelected()\n```", "```java\nboolean\n```", "```java\nisEnabled()\n```", "```java\nboolean\n```", "```java\nisDisplayed()\n```", "```java\nboolean\n```", "```java\ngetText()\n```", "```java\nString\n```", "```java\ngetLocation()\n```", "```java\nPoint\n```", "```java\ngetSize()\n```", "```java\nDimension\n```", "```java\ngetRect()\n```", "```java\nRectangle\n```", "```java\ngetCssValue(String propName)\n```", "```java\nString\n```", "```java\ngetShadowRoot()\n```", "```java\nSearchContext\n```", "```java\nfindElements(By by)\n```", "```java\nList<WebElement>\n```", "```java\nfindElement(By by)\n```", "```java\nWebElement\n```", "```java\n<textarea class=\"form-control\" id=\"my-textarea\" rows=\"3\"></textarea>\n```", "```java\n@Test\nvoid testByTagName() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement textarea = driver.findElement(By.tagName(\"textarea\")); ![1](assets/1.png)\n    assertThat(textarea.getDomAttribute(\"rows\")).isEqualTo(\"3\"); ![2](assets/2.png)\n}\n```", "```java\n<input type=\"text\" class=\"form-control\" name=\"my-text\" id=\"my-text-id\"\n    myprop=\"myvalue\">\n```", "```java\n@Test\nvoid testByHtmlAttributes() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    // By name\n    WebElement textByName = driver.findElement(By.name(\"my-text\")); ![1](assets/1.png)\n    assertThat(textByName.isEnabled()).isTrue(); ![2](assets/2.png)\n\n    // By id\n    WebElement textById = driver.findElement(By.id(\"my-text-id\")); ![3](assets/3.png)\n    assertThat(textById.getAttribute(\"type\")).isEqualTo(\"text\"); ![4](assets/4.png)\n    assertThat(textById.getDomAttribute(\"type\")).isEqualTo(\"text\");\n    assertThat(textById.getDomProperty(\"type\")).isEqualTo(\"text\");\n\n    assertThat(textById.getAttribute(\"myprop\")).isEqualTo(\"myvalue\"); ![5](assets/5.png)\n    assertThat(textById.getDomAttribute(\"myprop\")).isEqualTo(\"myvalue\");\n    assertThat(textById.getDomProperty(\"myprop\")).isNull();\n\n    // By class name\n    List<WebElement> byClassName = driver\n            .findElements(By.className(\"form-control\")); ![6](assets/6.png)\n    assertThat(byClassName.size()).isPositive(); ![7](assets/7.png)\n    assertThat(byClassName.get(0).getAttribute(\"name\")).isEqualTo(\"my-text\"); ![8](assets/8.png)\n}\n```", "```java\n<a href=\"./index.html\">Return to index</a>\n```", "```java\n@Test\nvoid testByLinkText() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement linkByText = driver\n            .findElement(By.linkText(\"Return to index\")); ![1](assets/1.png)\n    assertThat(linkByText.getTagName()).isEqualTo(\"a\"); ![2](assets/2.png)\n    assertThat(linkByText.getCssValue(\"cursor\")).isEqualTo(\"pointer\"); ![3](assets/3.png)\n\n    WebElement linkByPartialText = driver\n            .findElement(By.partialLinkText(\"index\")); ![4](assets/4.png)\n    assertThat(linkByPartialText.getLocation())\n            .isEqualTo(linkByText.getLocation()); ![5](assets/5.png)\n    assertThat(linkByPartialText.getRect()).isEqualTo(linkByText.getRect());\n}\n```", "```java\n<input type=\"hidden\" name=\"my-hidden\">\n```", "```java\n    @Test\n    void testByCssSelectorBasic() {\n        driver.get(\n                \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n        WebElement hidden = driver\n                .findElement(By.cssSelector(\"input[type=hidden]\")); ![1](assets/1.png)\n        assertThat(hidden.isDisplayed()).isFalse(); ![2](assets/2.png)\n    }\n```", "```java\n<input class=\"form-check-input\" type=\"checkbox\" name=\"my-check\" id=\"my-check-1\"\n        checked>\n<input class=\"form-check-input\" type=\"checkbox\" name=\"my-check\" id=\"my-check-2\">\n```", "```java\n@Test\nvoid testByCssSelectorAdvanced() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement checkbox1 = driver\n            .findElement(By.cssSelector(\"[type=checkbox]:checked\")); ![1](assets/1.png)\n    assertThat(checkbox1.getAttribute(\"id\")).isEqualTo(\"my-checkbox-1\"); ![2](assets/2.png)\n    assertThat(checkbox1.isSelected()).isTrue(); ![3](assets/3.png)\n\n    WebElement checkbox2 = driver\n            .findElement(By.cssSelector(\"[type=checkbox]:not(:checked)\")); ![4](assets/4.png)\n    assertThat(checkbox2.getAttribute(\"id\")).isEqualTo(\"my-checkbox-2\"); ![5](assets/5.png)\n    assertThat(checkbox2.isSelected()).isFalse(); ![6](assets/6.png)\n}\n```", "```java\n/html/body/a\n```", "```java\n//tagname[@attribute='value']\n```", "```java\n@Test\nvoid testByXPathBasic() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement hidden = driver\n            .findElement(By.xpath(\"//input[@type='hidden']\")); ![1](assets/1.png)\n    assertThat(hidden.isDisplayed()).isFalse(); ![2](assets/2.png)\n}\n```", "```java\n<input class=\"form-check-input\" type=\"radio\" name=\"my-radio\" id=\"my-radio-1\"\n        checked>\n<input class=\"form-check-input\" type=\"radio\" name=\"my-radio\" id=\"my-radio-2\">\n```", "```java\n@Test\nvoid testByXPathAdvanced() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement radio1 = driver\n            .findElement(By.xpath(\"//*[@type='radio' and @checked]\")); ![1](assets/1.png)\n    assertThat(radio1.getAttribute(\"id\")).isEqualTo(\"my-radio-1\"); ![2](assets/2.png)\n    assertThat(radio1.isSelected()).isTrue(); ![3](assets/3.png)\n\n    WebElement radio2 = driver\n            .findElement(By.xpath(\"//*[@type='radio' and not(@checked)]\")); ![4](assets/4.png)\n    assertThat(radio2.getAttribute(\"id\")).isEqualTo(\"my-radio-2\"); ![5](assets/5.png)\n    assertThat(radio2.isSelected()).isFalse(); ![6](assets/6.png)\n}\n```", "```java\n<input class=\"form-control\" type=\"file\" name=\"my-file\">\n```", "```java\n@Test\nvoid testByIdOrName() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement fileElement = driver.findElement(new ByIdOrName(\"my-file\")); ![1](assets/1.png)\n    assertThat(fileElement.getAttribute(\"id\")).isBlank(); ![2](assets/2.png)\n    assertThat(fileElement.getAttribute(\"name\")).isNotBlank(); ![3](assets/3.png)\n}\n```", "```java\n@Test\nvoid testByChained() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    List<WebElement> rowsInForm = driver.findElements(\n            new ByChained(By.tagName(\"form\"), By.className(\"row\"))); ![1](assets/1.png)\n    assertThat(rowsInForm.size()).isEqualTo(1); ![2](assets/2.png)\n}\n\n@Test\nvoid testByAll() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    List<WebElement> rowsInForm = driver.findElements(\n            new ByAll(By.tagName(\"form\"), By.className(\"row\"))); ![3](assets/3.png)\n    assertThat(rowsInForm.size()).isEqualTo(5); ![4](assets/4.png)\n}\n```", "```java\n@Test\nvoid testRelativeLocators() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement link = driver.findElement(By.linkText(\"Return to index\")); ![1](assets/1.png)\n    RelativeBy relativeBy = RelativeLocator.with(By.tagName(\"input\")); ![2](assets/2.png)\n    WebElement readOnly = driver.findElement(relativeBy.above(link)); ![3](assets/3.png)\n    assertThat(readOnly.getAttribute(\"name\")).isEqualTo(\"my-readonly\"); ![4](assets/4.png)\n}\n```", "```java\n@Test\nvoid testDatePicker() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    // Get the current date from the system clock ![1](assets/1.png)\n    LocalDate today = LocalDate.now();\n    int currentYear = today.getYear();\n    int currentDay = today.getDayOfMonth();\n\n    // Click on the date picker to open the calendar ![2](assets/2.png)\n    WebElement datePicker = driver.findElement(By.name(\"my-date\"));\n    datePicker.click();\n\n    // Click on the current month by searching by text ![3](assets/3.png)\n    WebElement monthElement = driver.findElement(By.xpath(\n            String.format(\"//th[contains(text(),'%d')]\", currentYear)));\n    monthElement.click();\n\n    // Click on the left arrow using relative locators ![4](assets/4.png)\n    WebElement arrowLeft = driver.findElement(\n            RelativeLocator.with(By.tagName(\"th\")).toRightOf(monthElement));\n    arrowLeft.click();\n\n    // Click on the current month of that year ![5](assets/5.png)\n    WebElement monthPastYear = driver.findElement(RelativeLocator\n            .with(By.cssSelector(\"span[class$=focused]\")).below(arrowLeft));\n    monthPastYear.click();\n\n    // Click on the present day in that month ![6](assets/6.png)\n    WebElement dayElement = driver.findElement(By.xpath(String.format(\n            \"//td[@class='day' and contains(text(),'%d')]\", currentDay)));\n    dayElement.click();\n\n    // Get the final date on the input text ![7](assets/7.png)\n    String oneYearBack = datePicker.getAttribute(\"value\");\n    log.debug(\"Final date in date picker: {}\", oneYearBack);\n\n    // Assert that the expected date is equal to the one selected in the\n    // date picker ![8](assets/8.png)\n    LocalDate previousYear = today.minusYears(1);\n    DateTimeFormatter dateFormat = DateTimeFormatter\n            .ofPattern(\"MM/dd/yyyy\");\n    String expectedDate = previousYear.format(dateFormat);\n    log.debug(\"Expected date: {}\", expectedDate);\n\n    assertThat(oneYearBack).isEqualTo(expectedDate);\n}\n```", "```java\n@Test\nvoid testSendKeys() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement inputText = driver.findElement(By.name(\"my-text\")); ![1](assets/1.png)\n    String textValue = \"Hello World!\";\n    inputText.sendKeys(textValue); ![2](assets/2.png)\n    assertThat(inputText.getAttribute(\"value\")).isEqualTo(textValue); ![3](assets/3.png)\n\n    inputText.clear(); ![4](assets/4.png)\n    assertThat(inputText.getAttribute(\"value\")).isEmpty(); ![5](assets/5.png)\n}\n```", "```java\n<input class=\"form-control\" type=\"file\" name=\"my-file\">\n```", "```java\n@Test\nvoid testUploadFile() throws IOException {\n    String initUrl = \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\";\n    driver.get(initUrl);\n\n    WebElement inputFile = driver.findElement(By.name(\"my-file\")); ![1](assets/1.png)\n\n    Path tempFile = Files.createTempFile(\"tempfiles\", \".tmp\"); ![2](assets/2.png)\n    String filename = tempFile.toAbsolutePath().toString();\n    log.debug(\"Using temporal file {} in file uploading\", filename);\n    inputFile.sendKeys(filename); ![3](assets/3.png)\n\n    driver.findElement(By.tagName(\"form\")).submit(); ![4](assets/4.png)\n    assertThat(driver.getCurrentUrl()).isNotEqualTo(initUrl); ![5](assets/5.png)\n}\n```", "```java\n((RemoteWebDriver) driver).setFileDetector(new LocalFileDetector());\n```", "```java\n<input type=\"range\" class=\"form-range\" name=\"my-range\" min=\"0\" max=\"10\" step=\"1\"\n        value=\"5\">\n```", "```java\n@Test\nvoid testSlider() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement slider = driver.findElement(By.name(\"my-range\"));\n    String initValue = slider.getAttribute(\"value\");\n    log.debug(\"The initial value of the slider is {}\", initValue);\n\n    for (int i = 0; i < 5; i++) {\n        slider.sendKeys(Keys.ARROW_RIGHT); ![1](assets/1.png)\n    }\n\n    String endValue = slider.getAttribute(\"value\");\n    log.debug(\"The final value of the slider is {}\", endValue);\n    assertThat(initValue).isNotEqualTo(endValue); ![2](assets/2.png)\n}\n```", "```java\n@Test\nvoid testNavigation() {\n    driver.get(\"https://bonigarcia.dev/selenium-webdriver-java/\");\n\n    driver.findElement(By.xpath(\"//a[text()='Navigation']\")).click();\n    driver.findElement(By.xpath(\"//a[text()='Next']\")).click();\n    driver.findElement(By.xpath(\"//a[text()='3']\")).click();\n    driver.findElement(By.xpath(\"//a[text()='2']\")).click();\n    driver.findElement(By.xpath(\"//a[text()='Previous']\")).click();\n\n    String bodyText = driver.findElement(By.tagName(\"body\")).getText();\n    assertThat(bodyText).contains(\"Lorem ipsum\");\n}\n```", "```java\n@Test\nvoid testNavigation() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n\n    WebElement checkbox2 = driver.findElement(By.id(\"my-checkbox-2\"));\n    checkbox2.click();\n    assertThat(checkbox2.isSelected()).isTrue();\n\n    WebElement radio2 = driver.findElement(By.id(\"my-radio-2\"));\n    radio2.click();\n    assertThat(radio2.isSelected()).isTrue();\n}\n```", "```java\nkeyDown(CharSequence key)\nkeyDown(WebElement target,\n    CharSequence key)\n```", "```java\nkeyUp(CharSequence key)\nkeyUp(WebElement target,\n    CharSequence key)\n```", "```java\nsendKeys(CharSequence... keys)\nsendKeys(WebElement target,\n    CharSequence... keys)\n```", "```java\nclickAndHold()\nclickAndHold(WebElement target)\n```", "```java\nrelease()\nrelease(WebElement target)\n```", "```java\nclick()\nclick(WebElement target)\n```", "```java\ndoubleClick()\ndoubleClick(WebElement target)\n```", "```java\ncontextClick()\ncontextClick(WebElement target)\n```", "```java\nmoveToElement(WebElement target)\nmoveToElement(WebElement target,\n    int xOffset, int yOffset)\n```", "```java\nmoveByOffset(int xOffset,\n    int yOffset)\n```", "```java\ndragAndDrop(WebElement source,\n    WebElement target)\ndragAndDropBy(WebElement source,\n    int xOffset, int yOffset)\ndragAndDropBy(WebElement source,\n    int xOffset, int yOffset)\n```", "```java\npause(long pause)\npause(Duration duration)\n```", "```java\nbuild()\n```", "```java\nperform()\n```", "```java\n@Test\nvoid testContextAndDoubleClick() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/dropdown-menu.html\");\n    Actions actions = new Actions(driver);\n\n    WebElement dropdown2 = driver.findElement(By.id(\"my-dropdown-2\"));\n    actions.contextClick(dropdown2).build().perform(); ![1](assets/1.png)\n    WebElement contextMenu2 = driver.findElement(By.id(\"context-menu-2\"));\n    assertThat(contextMenu2.isDisplayed()).isTrue(); ![2](assets/2.png)\n\n    WebElement dropdown3 = driver.findElement(By.id(\"my-dropdown-3\"));\n    actions.doubleClick(dropdown3).build().perform(); ![3](assets/3.png)\n    WebElement contextMenu3 = driver.findElement(By.id(\"context-menu-3\"));\n    assertThat(contextMenu3.isDisplayed()).isTrue(); ![4](assets/4.png)\n}\n```", "```java\n@Test\nvoid testMouseOver() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/mouse-over.html\");\n    Actions actions = new Actions(driver);\n\n    List<String> imageList = Arrays.asList(\"compass\", \"calendar\", \"award\",\n            \"landscape\");\n    for (String imageName : imageList) { ![1](assets/1.png)\n        String xpath = String.format(\"//img[@src='img/%s.png']\", imageName);\n        WebElement image = driver.findElement(By.xpath(xpath)); ![2](assets/2.png)\n        actions.moveToElement(image).build().perform(); ![3](assets/3.png)\n\n        WebElement caption = driver.findElement(\n                RelativeLocator.with(By.tagName(\"div\")).near(image)); ![4](assets/4.png)\n\n        assertThat(caption.getText()).containsIgnoringCase(imageName); ![5](assets/5.png)\n    }\n}\n```", "```java\n@Test\nvoid testDragAndDrop() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/drag-and-drop.html\");\n    Actions actions = new Actions(driver);\n\n    WebElement draggable = driver.findElement(By.id(\"draggable\")); ![1](assets/1.png)\n    int offset = 100;\n    Point initLocation = draggable.getLocation();\n    actions.dragAndDropBy(draggable, offset, 0)\n            .dragAndDropBy(draggable, 0, offset)\n            .dragAndDropBy(draggable, -offset, 0)\n            .dragAndDropBy(draggable, 0, -offset).build().perform(); ![2](assets/2.png)\n    assertThat(initLocation).isEqualTo(draggable.getLocation()); ![3](assets/3.png)\n\n    WebElement target = driver.findElement(By.id(\"target\")); ![4](assets/4.png)\n    actions.dragAndDrop(draggable, target).build().perform(); ![5](assets/5.png)\n    assertThat(target.getLocation()).isEqualTo(draggable.getLocation()); ![6](assets/6.png)\n}\n```", "```java\n@Test\nvoid testClickAndHold() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/draw-in-canvas.html\");\n    Actions actions = new Actions(driver);\n\n    WebElement canvas = driver.findElement(By.tagName(\"canvas\")); ![1](assets/1.png)\n    actions.moveToElement(canvas).clickAndHold(); ![2](assets/2.png)\n\n    int numPoints = 10;\n    int radius = 30;\n    for (int i = 0; i <= numPoints; i++) { ![3](assets/3.png)\n        double angle = Math.toRadians(360 * i / numPoints);\n        double x = Math.sin(angle) * radius;\n        double y = Math.cos(angle) * radius;\n        actions.moveByOffset((int) x, (int) y); ![4](assets/4.png)\n    }\n\n    actions.release(canvas).build().perform(); ![5](assets/5.png)\n}\n```", "```java\n@Test\nvoid testCopyAndPaste() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/web-form.html\");\n    Actions actions = new Actions(driver);\n\n    WebElement inputText = driver.findElement(By.name(\"my-text\")); ![1](assets/1.png)\n    WebElement textarea = driver.findElement(By.name(\"my-textarea\"));\n\n    Keys modifier = SystemUtils.IS_OS_MAC ? Keys.COMMAND : Keys.CONTROL; ![2](assets/2.png)\n    actions.sendKeys(inputText, \"hello world\").keyDown(modifier)\n            .sendKeys(inputText, \"a\").sendKeys(inputText, \"c\")\n            .sendKeys(textarea, \"v\").build().perform(); ![3](assets/3.png)\n\n    assertThat(inputText.getAttribute(\"value\"))\n            .isEqualTo(textarea.getAttribute(\"value\")); ![4](assets/4.png)\n}\n```", "```java\n@Test\nvoid testImplicitWait() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/loading-images.html\");\n    driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10)); ![1](assets/1.png)\n\n    WebElement landscape = driver.findElement(By.id(\"landscape\")); ![2](assets/2.png)\n    assertThat(landscape.getAttribute(\"src\"))\n            .containsIgnoringCase(\"landscape\");\n}\n```", "```java\n@Test\nvoid testExplicitWait() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/loading-images.html\");\n    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10)); ![1](assets/1.png)\n\n    WebElement landscape = wait.until(ExpectedConditions\n            .presenceOfElementLocated(By.id(\"landscape\"))); ![2](assets/2.png)\n    assertThat(landscape.getAttribute(\"src\"))\n            .containsIgnoringCase(\"landscape\");\n}\n```", "```java\n@Test\nvoid testSlowCalculator() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/slow-calculator.html\");\n\n    // 1 + 3\n    driver.findElement(By.xpath(\"//span[text()='1']\")).click(); ![1](assets/1.png)\n    driver.findElement(By.xpath(\"//span[text()='+']\")).click();\n    driver.findElement(By.xpath(\"//span[text()='3']\")).click();\n    driver.findElement(By.xpath(\"//span[text()='=']\")).click();\n\n    // ... should be 4, wait for it\n    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n    wait.until(ExpectedConditions.textToBe(By.className(\"screen\"), \"4\")); ![2](assets/2.png)\n}\n```", "```java\nwithTimeout(Duration timeout)\n```", "```java\npollingEvery(Duration interval)\n```", "```java\nwithMessage(String message)\nwithMessage(Supplier<String> messageSupplier)\n```", "```java\nignoring(Class<? extends Throwable> exceptionType)\nignoring(Class<? extends Throwable> firstType,\n    Class<? extends Throwable> secondType)\nignoreAll(Collection<Class<? extends Throwable>>\n    types)\n```", "```java\nuntil(Function<? super T, V> isTrue)\n```", "```java\n@Test\nvoid testFluentWait() {\n    driver.get(\n            \"https://bonigarcia.dev/selenium-webdriver-java/loading-images.html\");\n    Wait<WebDriver> wait = new FluentWait<>(driver)\n            .withTimeout(Duration.ofSeconds(10))\n            .pollingEvery(Duration.ofSeconds(1))\n            .ignoring(NoSuchElementException.class); ![1](assets/1.png)\n\n    WebElement landscape = wait.until(ExpectedConditions\n            .presenceOfElementLocated(By.id(\"landscape\")));\n    assertThat(landscape.getAttribute(\"src\"))\n            .containsIgnoringCase(\"landscape\");\n}\n```"]