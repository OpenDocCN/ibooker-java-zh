["```java\npublic class GoodbyeJava {\n  public static void main(String[] args) {\n    System.out.println(\"Goodbye, Java!\");\n  }\n}\n```", "```java\nimport javax.swing.*;\n\npublic class GoodbyeJava {\n  public static void main(String[] args) {\n    JFrame frame = new JFrame(\"Chapter 2 Exercises\");\n    frame.setSize(300, 150);\n    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    JLabel label = new JLabel(\"Goodbye, Java!\", JLabel.CENTER);\n    frame.add(label);\n    frame.setVisible(true);\n  }\n}\n```", "```java\n% javac GoodbyeJava.java\n% java GoodbyeJava\n```", "```java\n    % jar tvf MyApp.jar\n    ```", "```java\nManifest-Version: 1.0\nCreated-By: 11.0.16\nMain-Class: ch03.exercises.HelloJar\n```", "```java\n% jar cvmf manifest.mf hello.jar *.class\n% java -jar hello.jar\n```", "```java\n        String[] dayNames = {\n          \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n          \"Thursday\", \"Friday\", \"Saturday\"\n        };\n    ```", "```java\n        for (int i; i < triangle.length; i++)\n          for (int j; j < triangle[i].length; j++)\n            System.out.println(triangle[i][j]);\n    ```", "```java\n    % javac ch05/exercises/AppleToss.java\n    ```", "```java\n        assert x > 0 : \"X is too small\";\n        assert y > 0 : \"Y is too small\";\n    ```", "```java\n    package ch06.exercises;\n\n    public class GCDException extends Exception {\n      private int badA;\n      private int badB;\n\n      GCDException(int a, int b) {\n        super(\"No common factors for \" + a + \", \" + b);\n        badA = a;\n        badB = b;\n      }\n\n      public int getA() { return badA; }\n      public int getB() { return badB; }\n    }\n    ```", "```java\n        if (a == 1) {\n          throw new GCDException(a1, b1);\n        }\n        // ...\n    ```", "```java\n        List<Integer> ids = new ArrayList<>(employees.keySet());\n        ids.sort();\n        for (Integer id : ids) {\n          System.out.println(id + \": \" + employees.get(id));\n        }\n    ```", "```java\n    // File: ch07/exercises/Field.java\n      List<Hedge> hedges = new ArrayList<>();\n      // ...\n\n      protected void paintComponent(Graphics g) {\n        // ...\n        for (Hedge h : hedges) {\n          h.draw(g);\n        }\n        // ...\n      }\n    ```", "```java\n    public class Employee2 implements Comparable<Employee2> {\n      // ...\n      public int compareTo(Employee2 other) {\n        // Let's be a little fancy and sort on a constructed name\n        String myName = last + \", \" + first;\n        String otherName = other.last + \", \" + other.first;\n        return myName.compareToIgnoreCase(otherName);\n      }\n      // ...\n    }\n    ```", "```java\n        System.out.print(\"Converting to Celsius: \");\n        System.out.println(adjust(sample, s -> (s - 32) * 5 / 9));\n    ```", "```java\n        Map<String, List<PaidEmployee>> byRoles =\n          employees.stream().collect(\n          Collectors.groupingBy(PaidEmployee::getRole));\n    ```"]