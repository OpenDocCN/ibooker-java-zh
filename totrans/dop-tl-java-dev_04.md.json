["```java\n.\n├── HELP.md\n├── mvnw\n├── mvnw.cmd\n├── pom.xml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── com\n    │   │       └── example\n    │   │           └── demo\n    │   │               ├── DemoApplication.java\n    │   │               ├── Greeting.java\n    │   │               └── GreetingController.java\n    │   └── resources\n    │       ├── application.properties\n    │       ├── static\n    │       └── templates\n    └── test\n        └── java\n```", "```java\npackage com.example.demo;\n\npublic class Greeting {\n    private final String content;\n\n    public Greeting(String content) {\n        this.content = content;\n    }\n\n    public String getContent() {\n        return content;\n    }\n}\n```", "```java\npackage com.example.demo;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class GreetingController {\n    private static final String template = \"Hello, %s!\";\n\n    @GetMapping(\"/greeting\")\n    public Greeting greeting(@RequestParam(value = \"name\",\n        defaultValue = \"World\") String name) {\n        return new Greeting(String.format(template, name));\n    }\n}\n```", "```java\n// using the default name parameter\n$ curl http://localhost:8080/greeting\n{\"content\":\"Hello, World!\"}\n\n// using an explicit value for the name parameter\n$ curl http://localhost:8080/greeting?name=Microservices\n{\"content\":\"Hello, Microservices!\"}\n```", "```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.5.0</version>\n    </parent>\n    <groupId>com.example</groupId>\n    <artifactId>demo</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>demo</name>\n    <description>Demo project for Spring Boot</description>\n    <properties>\n        <java.version>11</java.version>\n        <spring-native.version>0.10.0-SNAPSHOT</spring-native.version>\n    </properties>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.experimental</groupId>\n            <artifactId>spring-native</artifactId>\n            <version>${spring-native.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <classifier>exec</classifier>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.experimental</groupId>\n                <artifactId>spring-aot-maven-plugin</artifactId>\n                <version>${spring-native.version}</version>\n                <executions>\n                    <execution>\n                        <id>test-generate</id>\n                        <goals>\n                            <goal>test-generate</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>generate</id>\n                        <goals>\n                            <goal>generate</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n    <repositories>\n        <repository>\n            <id>spring-release</id>\n            <name>Spring release</name>\n            <url>https://repo.spring.io/release</url>\n        </repository>\n    </repositories>\n    <pluginRepositories>\n        <pluginRepository>\n            <id>spring-release</id>\n            <name>Spring release</name>\n            <url>https://repo.spring.io/release</url>\n        </pluginRepository>\n    </pluginRepositories>\n\n    <profiles>\n        <profile>\n            <id>native-image</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.graalvm.nativeimage</groupId>\n                        <artifactId>native-image-maven-plugin</artifactId>\n                        <version>21.1.0</version>\n                        <configuration>\n                            <mainClass>\n                                com.example.demo.DemoApplication\n                            </mainClass>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>native-image</goal>\n                                </goals>\n                                <phase>package</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n```", "```java\n.\n├── README.md\n├── micronaut-cli.yml\n├── mvnw\n├── mvnw.bat\n├── pom.xml\n└── src\n    └── main\n        ├── java\n        │   └── com\n        │       └── example\n        │           └── demo\n        │               ├── Application.java\n        │               ├── Greeting.java\n        │               └── GreetingController.java\n        └── resources\n            ├── application.yml\n            └── logback.xml\n```", "```java\npackage com.example.demo;\n\nimport io.micronaut.core.annotation.Introspected;\n\n@Introspected\npublic class Greeting {\n    private final String content;\n\n    public Greeting(String content) {\n        this.content = content;\n    }\n\n    public String getContent() {\n        return content;\n    }\n}\n```", "```java\npackage com.example.demo;\n\nimport io.micronaut.http.annotation.Controller;\nimport io.micronaut.http.annotation.Get;\nimport io.micronaut.http.annotation.QueryValue;\n\n@Controller(\"/\")\npublic class GreetingController {\n    private static final String template = \"Hello, %s!\";\n\n    @Get(uri = \"/greeting\")\n    public Greeting greeting(@QueryValue(value = \"name\",\n        defaultValue = \"World\") String name) {\n        return new Greeting(String.format(template, name));\n    }\n}\n```", "```java\n// using the default name parameter\n$ curl http://localhost:8080/greeting\n{\"content\":\"Hello, World!\"}\n\n// using an explicit value for the name parameter\n$ curl http://localhost:8080/greeting?name=Microservices\n{\"content\":\"Hello, Microservices!\"}\n```", "```java\n.\n├── README.md\n├── mvnw\n├── mvnw.cmd\n├── pom.xml\n└── src\n    ├── main\n    │   ├── docker\n    │   │   ├── Dockerfile.jvm\n    │   │   ├── Dockerfile.legacy-jar\n    │   │   ├── Dockerfile.native\n    │   │   └── Dockerfile.native-distroless\n    │   ├── java\n    │   │   └── com\n    │   │       └── example\n    │   │           └── demo\n    │   │               ├── Greeting.java\n    │   │               └── GreetingResource.java\n    │   └── resources\n    │       ├── META-INF\n    │       │   └── resources\n    │       │       └── index.html\n    │       └── application.properties\n    └── test\n        └── java\n```", "```java\npackage com.example.demo;\n\npublic class Greeting {\n    private final String content;\n\n    public Greeting(String content) {\n        this.content = content;\n    }\n\n    public String getContent() {\n        return content;\n    }\n}\n```", "```java\npackage com.example.demo;\n\nimport javax.ws.rs.DefaultValue;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.QueryParam;\n\n@Path(\"/greeting\")\npublic class GreetingResource {\n    private static final String template = \"Hello, %s!\";\n\n    @GET\n    public Greeting greeting(@QueryParam(\"name\")\n        @DefaultValue(\"World\") String name) {\n        return new Greeting(String.format(template, name));\n    }\n}\n```", "```java\n// using the default name parameter\n$ curl http://localhost:8080/greeting\n{\"content\":\"Hello, World!\"}\n\n// using an explicit value for the name parameter\n$ curl http://localhost:8080/greeting?name=Microservices\n{\"content\":\"Hello, Microservices!\"}\n```", "```java\n.\n├── pom.xml\n├── readme.md\n└── src\n    └── main\n        ├── java\n        │   └── com\n        │       └── example\n        │           └── demo\n        │               ├── Greeting.java\n        │               └── GreetingResource.java\n        └── resources\n            ├── META-INF\n            │   ├── beans.xml\n            │   └── microprofile-config.properties\n            ├── WEB\n            │   └── index.html\n            ├── logging.properties\n            └── privateKey.pem\n```", "```java\npackage com.example.demo;\n\nimport io.helidon.common.Reflected;\n\n@Reflected\npublic class Greeting {\n    private final String content;\n\n    public Greeting(String content) {\n        this.content = content;\n    }\n\n    public String getContent() {\n        return content;\n    }\n}\n```", "```java\npackage com.example.demo;\n\nimport javax.ws.rs.DefaultValue;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.QueryParam;\n\n@Path(\"/greeting\")\npublic class GreetingResource {\n    private static final String template = \"Hello, %s!\";\n\n    @GET\n    public Greeting greeting(@QueryParam(\"name\")\n        @DefaultValue(\"World\") String name) {\n        return new Greeting(String.format(template, name));\n    }\n}\n```", "```java\n// using the default name parameter\n$ curl http://localhost:8080/greeting\n{\"content\":\"Hello, World!\"}\n\n// using an explicit value for the name parameter\n$ curl http://localhost:8080/greeting?name=Microservices\n{\"content\":\"Hello, Microservices!\"}\n```", "```java\nmvn archetype:generate \\\n    -DarchetypeGroupId=io.quarkus \\\n    -DarchetypeArtifactId=quarkus-amazon-lambda-archetype \\\n    -DarchetypeVersion=1.13.7.Final\n```", "```java\n.\n├── payload.json\n├── pom.xml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── com\n    │   │       └── example\n    │   │           └── demo\n    │   │               ├── GreetingLambda.java\n    │   │               ├── InputObject.java\n    │   │               ├── OutputObject.java\n    │   │               └── ProcessingService.java\n    │   └── resources\n    │       └── application.properties\n    └── test\n        ├── java\n        │   └── com\n        │       └── example\n        │           └── demo\n        │               └── LambdaHandlerTest.java\n        └── resources\n            └── application.properties\n```", "```java\npackage com.example.demo;\n\npublic class InputObject {\n    private String name;\n    private String greeting;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getGreeting() {\n        return greeting;\n    }\n\n    public void setGreeting(String greeting) {\n        this.greeting = greeting;\n    }\n}\n```", "```java\npackage com.example.demo;\n\npublic class OutputObject {\n    private String result;\n    private String requestId;\n\n    public String getResult() {\n        return result;\n    }\n\n    public void setResult(String result) {\n        this.result = result;\n    }\n\n    public String getRequestId() {\n        return requestId;\n    }\n\n    public void setRequestId(String requestId) {\n        this.requestId = requestId;\n    }\n}\n```", "```java\npackage com.example.demo;\n\nimport javax.enterprise.context.ApplicationScoped;\n\n@ApplicationScoped\npublic class ProcessingService {\n    public OutputObject process(InputObject input) {\n        OutputObject output = new OutputObject();\n        output.setResult(input.getGreeting() + \" \" + input.getName());\n        return output;\n    }\n}\n```", "```java\npackage com.example.demo;\n\nimport com.amazonaws.services.lambda.runtime.Context;\nimport com.amazonaws.services.lambda.runtime.RequestHandler;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\n@Named(\"greeting\")\npublic class GreetingLambda\n    implements RequestHandler<InputObject, OutputObject> {\n    @Inject\n    ProcessingService service;\n\n    @Override\n    public OutputObject handleRequest(InputObject input, Context context) {\n        OutputObject output = service.process(input);\n        output.setRequestId(context.getAwsRequestId());\n        return output;\n    }\n}\n```", "```java\nLAMBDA_ROLE_ARN=\"arn:aws:iam::1234567890:role/lambda-ex\"\n```", "```java\n{\n  \"name\": \"Bill\",\n  \"greeting\": \"hello\"\n}\n```", "```java\n$ sam local invoke --template target/sam.jvm.yaml --event payload.json\nInvoking io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest\n(java11)\nDecompressing /work/demo/target/function.zip\nSkip pulling image and use local one:\namazon/aws-sam-cli-emulation-image-java11:rapid-1.24.1.\n\nMounting /private/var/folders/p_/3h19jd792gq0zr1ckqn9jb0m0000gn/T/tmppesjj0c8 as\n/var/task:ro,delegated inside runtime container\nSTART RequestId: 0b8cf3de-6d0a-4e72-bf36-232af46145fa Version: $LATEST\n__  ____  __  _____   ___  __ ____  ______\n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n[io.quarkus] (main) quarkus-lambda 1.0-SNAPSHOT on\nJVM (powered by Quarkus 1.13.7.Final) started in 2.680s.\n[io.quarkus] (main) Profile prod activated.\n[io.quarkus] (main) Installed features: [amazon-lambda, cdi]\nEND RequestId: 0b8cf3de-6d0a-4e72-bf36-232af46145fa\nREPORT RequestId: 0b8cf3de-6d0a-4e72-bf36-232af46145fa\tInit Duration: 1.79 ms\nDuration: 3262.01 ms Billed Duration: 3300 ms\nMemory Size: 256 MB\tMax Memory Used: 256 MB\n{\"result\":\"hello Bill\",\"requestId\":\"0b8cf3de-6d0a-4e72-bf36-232af46145fa\"}\n```", "```java\n$ sh target/manage.sh create\n$ sh target/manage.sh invoke\nInvoking function\n++ aws lambda invoke response.txt --cli-binary-format raw-in-base64-out\n++ --function-name QuarkusLambda --payload file://payload.json\n++ --log-type Tail --query LogResult\n++ --output text base64 --decode\nSTART RequestId: df8d19ad-1e94-4bce-a54c-93b8c09361c7 Version: $LATEST\nEND RequestId: df8d19ad-1e94-4bce-a54c-93b8c09361c7\nREPORT RequestId: df8d19ad-1e94-4bce-a54c-93b8c09361c7\tDuration: 273.47 ms\nBilled Duration: 274 ms\tMemory Size: 256 MB\nMax Memory Used: 123 MB\tInit Duration: 1635.69 ms\n{\"result\":\"hello Bill\",\"requestId\":\"df8d19ad-1e94-4bce-a54c-93b8c09361c7\"}\n```", "```java\n# for linux\n$ mvn -Pnative package\n\n# for non-linux\n$ mvn package -Pnative -Dquarkus.native.container-build=true \\\n -Dquarkus.native.container-runtime=docker\n```", "```java\n$ sam local invoke --template target/sam.native.yaml --event payload.json\nInvoking not.used.in.provided.runtime (provided)\nDecompressing /work/demo/target/function.zip\nSkip pulling image and use local one:\namazon/aws-sam-cli-emulation-image-provided:rapid-1.24.1.\n\nMounting /private/var/folders/p_/3h19jd792gq0zr1ckqn9jb0m0000gn/T/tmp1zgzkuhy as\n/var/task:ro,delegated inside runtime container\nSTART RequestId: 27531d6c-461b-45e6-92d3-644db6ec8df4 Version: $LATEST\n__  ____  __  _____   ___  __ ____  ______\n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n[io.quarkus] (main) quarkus-lambda 1.0-SNAPSHOT native\n(powered by Quarkus 1.13.7.Final) started in 0.115s.\n[io.quarkus] (main) Profile prod activated.\n[io.quarkus] (main) Installed features: [amazon-lambda, cdi]\nEND RequestId: 27531d6c-461b-45e6-92d3-644db6ec8df4\nREPORT RequestId: 27531d6c-461b-45e6-92d3-644db6ec8df4\tInit Duration: 0.13 ms\nDuration: 218.76 ms\tBilled Duration: 300 ms Memory Size: 128 MB\nMax Memory Used: 128 MB\n{\"result\":\"hello Bill\",\"requestId\":\"27531d6c-461b-45e6-92d3-644db6ec8df4\"}\n```", "```java\n$ sh target/manage.sh native create\n$ sh target/manage.sh native invoke\nInvoking function\n++ aws lambda invoke response.txt --cli-binary-format raw-in-base64-out\n++ --function-name QuarkusLambdaNative\n++ --payload file://payload.json --log-type Tail --query LogResult --output text\n++ base64 --decode\nSTART RequestId: 19575cd3-3220-405b-afa0-76aa52e7a8b5 Version: $LATEST\nEND RequestId: 19575cd3-3220-405b-afa0-76aa52e7a8b5\nREPORT RequestId: 19575cd3-3220-405b-afa0-76aa52e7a8b5\tDuration: 2.55 ms\nBilled Duration: 187 ms Memory Size: 256 MB\tMax Memory Used: 54 MB\nInit Duration: 183.91 ms\n{\"result\":\"hello Bill\",\"requestId\":\"19575cd3-3220-405b-afa0-76aa52e7a8b5\"}\n```"]