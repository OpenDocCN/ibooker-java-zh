["```java\n50.0% level was 23 ns\n90.0% level was 30 ns\n99.0% level was 43 ns\n99.9% level was 164 ns\n99.99% level was 248 ns\n99.999% level was 3,458 ns\n99.9999% level was 17,463 ns\n```", "```java\n<dependency>\n    <groupId>org.hdrhistogram</groupId>\n    <artifactId>HdrHistogram</artifactId>\n    <version>2.1.12</version>\n</dependency>\n```", "```java\npublic class BenchmarkWithHdrHistogram {\n    private static final long NORMALIZER = 1_000_000;\n\n    private static final Histogram HISTOGRAM\n            = new Histogram(TimeUnit.MINUTES.toMicros(1), 2);\n\n    public static void main(String[] args) throws Exception {\n        final List<String> values = Files.readAllLines(Paths.get(args[0]));\n        double last = 0;\n        for (final String tVal : values) {\n            double parsed = Double.parseDouble(tVal);\n            double gcInterval = parsed - last;\n            last = parsed;\n            HISTOGRAM.recordValue((long)(gcInterval * NORMALIZER));\n        }\n        HISTOGRAM.outputPercentileDistribution(System.out, 1000.0);\n    }\n}\n```", "```java\n       Value     Percentile TotalCount 1/(1-Percentile)\n\n       14.02 0.000000000000          1           1.00\n     1245.18 0.100000000000         37           1.11\n     1949.70 0.200000000000         82           1.25\n     1966.08 0.300000000000        126           1.43\n     1982.46 0.400000000000        157           1.67\n\n...\n\n    28180.48 0.996484375000        368         284.44\n    28180.48 0.996875000000        368         320.00\n    28180.48 0.997265625000        368         365.71\n    36438.02 0.997656250000        369         426.67\n    36438.02 1.000000000000        369\n#[Mean    =      2715.12, StdDeviation   =      2875.87]\n#[Max     =     36438.02, Total count    =          369]\n#[Buckets =           19, SubBuckets     =          256]\n```"]