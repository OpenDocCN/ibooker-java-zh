["```java\nplugins {\n  id(\"org.springframework.boot\") version \"LATEST\"\n  id(\"io.spring.dependency-management\") version \"LATEST\"\n  id(\"nebula.ospackage-application-spring-boot\") version \"LATEST\" ![1](../images/00112.png)\n}\n\n...\n```", "```java\nplugins {\n  id(\"org.springframework.boot\") version \"LATEST\"\n  id(\"io.spring.dependency-management\") version \"LATEST\"\n  id(\"com.bmuschko.docker-spring-boot-application\") version \"LATEST\"\n}\n\nif (hasProperty(\"dockerUser\") && hasProperty(\"dockerPassword\")) {\n  docker {\n    registryCredentials {\n      username = dockerUser\n      password = dockerPassword\n      email = \"bot@myorg.com\"\n    }\n\n    springBootApplication {\n      tag = \"$dockerUser/${project.name}:${project.version}\"\n      baseImage = \"openjdk:8\"\n    }\n  }\n}\n```", "```java\n// For an application with a dependency on\n// 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'\n@Bean\nApplicationInfoManager.StatusChangeListener statusChangeListener() {\n  return new ApplicationInfoManager.StatusChangeListener() {\n    @Override\n    public String getId() {\n      return \"blue.green.listener\";\n    }\n\n    @Override\n    public void notify(StatusChangeEvent statusChangeEvent) {\n      switch(statusChangeEvent.getStatus()) {\n        case OUT_OF_SERVICE:\n          // Disconnect from queues...\n          break;\n        case UP:\n          // Reconnect to queues...\n          break;\n      }\n    }\n  };\n}\n```", "```java\nname,http.server.requests,:eq,\nuri,$ENDPOINT,:eq,\n:and,\noutcome,SUCCESS,:eq,\n:and,\n(,99,),:percentiles\n```", "```java\nhistogram_quantile(\n  0.99,\n  rate(\n    http_server_requests_seconds_bucket{\n      uri=\"$ENDPOINT\",\n      outcome=\"SUCCESS\"\n    }[2m]\n  )\n)\n```", "```java\nname,http.server.requests,:eq,\n:dup,\noutcome,SERVER_ERROR,:eq,\n:div,\nuri,$ENDPOINT,:eq,:cq\n```", "```java\nsum(\n  rate(\n    http_server_requests_seconds_count{outcome=\"SERVER_ERROR\", uri=\"$ENDPOINT\"}[2m]\n  )\n) /\nsum(\n  rate(\n    http_server_requests_seconds_count{uri=\"$ENDPOINT\"}[2m]\n  )\n)\n```", "```java\nname,jvm.memory.used,:eq,\nname,jvm.memory.max,:eq,\n:div\n```", "```java\njvm_memory_used / jvm_memory_max\n```", "```java\nname,jvm.gc.memory.allocated,:eq,\nname,jvm.gc.memory.promoted,:eq,\n:div\n```", "```java\njvm_gc_memory_allocated / jvm_gc_memory_promoted\n```", "```java\nname,process.cpu.usage,:eq\n```", "```java\nprocess_cpu_usage\n```"]