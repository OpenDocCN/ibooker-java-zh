- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book introduces the Java programming language and environment. Whether
    you are a software developer or just someone who uses the internet in your daily
    life, you’ve undoubtedly heard about Java. Its arrival was one of the most exciting
    developments in the history of the web, and Java applications continue to power
    business on the internet. Java is, arguably, the most popular programming language
    in the world, used by millions of developers on almost every kind of computer
    imaginable. Java has surpassed languages such as C++ and Visual Basic in terms
    of developer demand and has become the de facto language for certain kinds of
    development—especially for web-based services. Most universities are now using
    Java in their introductory courses alongside the other important modern languages.
    Perhaps you’re using this text in one of your classes right now!
  prefs: []
  type: TYPE_NORMAL
- en: This book gives you a thorough grounding in Java fundamentals and grammar. *Learning
    Java*, Sixth Edition, attempts to live up to its name by mapping out the Java
    language and its class libraries, programming techniques, and idioms. We’ll dig
    deep into interesting areas and at least scratch the surface of other popular
    topics. Other titles from O’Reilly pick up where we leave off and provide more
    comprehensive information on specific areas and applications of Java.
  prefs: []
  type: TYPE_NORMAL
- en: Whenever possible, we provide compelling, realistic, and fun examples and avoid
    merely cataloging features. The examples are simple but hint at what can be done.
    We won’t be developing the next great “killer app” in these pages, but we hope
    to give you a starting point for many hours of experimentation and inspired tinkering
    that will lead you to develop one yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Who Should Read This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for computer professionals, students, technical people, and Finnish
    hackers. It’s for everyone who has a need for hands-on experience using Java with
    an eye toward building real applications. This book could also be considered a
    crash course in object-oriented programming, threads, and user interfaces. As
    you learn about Java, you’ll also learn a powerful and practical approach to software
    development, beginning with a deep understanding of the fundamentals of Java.
  prefs: []
  type: TYPE_NORMAL
- en: Superficially, Java looks like C or C++, so you’ll have a tiny head start in
    using this book if you have some experience with one of these languages. If you
    do not, don’t worry. In many respects, Java acts like more dynamic languages such
    as Smalltalk and Lisp. Knowledge of another object-oriented programming language
    will certainly help, although you may have to change some ideas and unlearn a
    few habits. Java is considerably simpler than languages such as C++ and Smalltalk.
    If you learn well from concise examples and personal experimentation, you’ll like
    this book.
  prefs: []
  type: TYPE_NORMAL
- en: New Developments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We cover all of the important features of the latest “long-term support” release
    of Java, officially called Java Standard Edition (SE) 21, OpenJDK 21\. Sun Microsystems
    (Java’s keeper before Oracle) has changed the naming scheme many times over the
    years. Sun coined the term *Java 2* to cover the major new features introduced
    in Java version 1.2 and dropped the term *JDK* in favor of *SDK*. With the sixth
    release, Sun skipped from Java version 1.4 to Java 5.0 but revived the term JDK
    and kept its numbering convention. After that, we had Java 6, Java 7, and Java
    8\. Starting with Java 9, Oracle announced a regular (an expedited) release cadence.
    New versions are released twice a year, and we are at Java 21 as we write in 2023.
  prefs: []
  type: TYPE_NORMAL
- en: This release of Java reflects a mature language with occasional syntactic changes
    and updates to packages and libraries. We’ve tried to capture these new features
    and update every example in this book to reflect the current Java style and best
    practices.
  prefs: []
  type: TYPE_NORMAL
- en: New in This Edition (Java 15, 16, 17, 18, 19, 20, 21)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This edition of the book continues our tradition of rework to be as up-to-date
    as possible. It incorporates changes from recent releases of Java, from Java 15
    through Java 21 (early access). New topics in this edition include:'
  prefs: []
  type: TYPE_NORMAL
- en: Virtual threads that allow for impressive performance gains in scenarios requiring
    many, many threads
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New coverage of functional streams for data processing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Expanded coverage of lambda expressions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updated examples and analysis throughout the book
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Review questions and exercises to help reinforce topics discussed in each chapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book is organized as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Chapters [1](ch01.html#learnjava6-CHP-1) and [2](ch02.html#learnjava6-CHP-2)
    provide a basic introduction to Java concepts and a tutorial to give you a jump-start
    on Java programming.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html#learnjava6-CHP-3) discusses fundamental tools for developing
    with Java (the compiler, the interpreter, *jshell*, and the JAR file package).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapters [4](ch04.html#learnjava6-CHP-4) and [5](ch05.html#learnjava6-CHP-5)
    introduce programming fundamentals, then describe the Java language itself, beginning
    with the basic syntax and covering classes and objects, exceptions, arrays, enumerations,
    annotations, and much more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html#learnjava6-CHP-6) covers exceptions, errors, and the
    logging facilities native to Java.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html#learnjava6-CHP-7) covers collections alongside generics
    and parameterized types in Java.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html#learnjava6-CHP-8) covers text processing, formatting,
    scanning, string utilities, and many of the core API utilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html#learnjava6-CHP-9) covers the language’s built-in thread
    facilities, including the new virtual threads.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html#learnjava6-CHP-10) covers Java file I/O and the NIO
    package.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html#learnjava6-CHP-11) covers function programming techniques
    in Java.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.html#learnjava6-CHP-12) covers the basics of graphical user
    interface (GUI) development with Swing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 13](ch13.html#learnjava6-CHP-13) covers network communication for
    both clients and servers, as well as accessing web resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you’re like us, you don’t read books from front to back. If you’re really
    like us, you usually don’t read the preface at all. However, on the off chance
    that you will see this in time, here are a few suggestions:'
  prefs: []
  type: TYPE_NORMAL
- en: If you are already a programmer and just need to learn Java in the next five
    minutes, you are probably looking for the examples. You might want to start by
    glancing at the tutorial in [Chapter 2](ch02.html#learnjava6-CHP-2). If that doesn’t
    float your boat, you should at least look at the information in [Chapter 3](ch03.html#learnjava6-CHP-3),
    which explains how to use the compiler and interpreter. This should get you started.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.html#learnjava6-CHP-12) discusses Java’s graphics features
    and component architecture. You should read this if you are interested in writing
    desktop graphical Java applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 13](ch13.html#learnjava6-CHP-13) is the place to head if you are interested
    in writing network applications or interacting with web-based services. Networking
    remains one of the more interesting and important parts of Java.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Online Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many online sources for information about Java.
  prefs: []
  type: TYPE_NORMAL
- en: Look at [Oracle’s official website](https://oreil.ly/Lo8QZ) for Java topics
    such as the software, updates, and Java releases. This is where you’ll find the
    reference implementation of the JDK, which includes the compiler, the interpreter,
    and other tools.
  prefs: []
  type: TYPE_NORMAL
- en: Oracle also maintains the [OpenJDK site](https://oreil.ly/DrTm4). This is the
    primary open source version of Java and the associated tools. We’ll be using the
    OpenJDK for all the examples in this book.
  prefs: []
  type: TYPE_NORMAL
- en: You should also visit [O’Reilly’s site](http://oreilly.com). There you’ll find
    information about other O’Reilly books for both Java and a growing array of other
    topics. You should also check out the online learning and conference options—O’Reilly
    is a real champion for education in all its forms.
  prefs: []
  type: TYPE_NORMAL
- en: And of course, you can check the home page for [*Learning Java*](https://oreil.ly/learning-java-6e)!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The font conventions used in this book are quite simple.
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic* is used for:'
  prefs: []
  type: TYPE_NORMAL
- en: Pathnames, filenames, and program names
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internet addresses, such as domain names and URLs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New terms where they are defined
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Program names, compilers, interpreters, utilities, and commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emphasis on important points
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Constant width` is used for:'
  prefs: []
  type: TYPE_NORMAL
- en: Anything that might appear in a Java program, including method names, variable
    names, and class names
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tags that might appear in an HTML or XML document
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keywords, objects, and environment variables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**`Constant width bold`** is used for:'
  prefs: []
  type: TYPE_NORMAL
- en: Text that is typed by the user on the command line or in a dialog
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*`Constant width italic`* is used for:'
  prefs: []
  type: TYPE_NORMAL
- en: Replaceable items in code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: In the main body of text, we always use a pair of empty parentheses after a
    method name to distinguish methods from variables, classes, and other creatures.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Java source listings, we follow the coding conventions most frequently
    used in the Java community. Class names begin with capital letters; variable and
    method names begin with lowercase. All the letters in the names of constants are
    capitalized. We don’t use underscores to separate words in a long name; following
    common practice, we capitalize individual words (after the first) and run the
    words together. For example: `thisIsAVariable`, `thisIsAMethod()`, `ThisIsAClass`,
    and `THIS_IS_A_CONSTANT`. Also note that we differentiate between static and nonstatic
    methods when we refer to them. Unlike some books, we never write `Foo.bar()` to
    mean the `bar()` method of `Foo` unless `bar()` is a static method (paralleling
    the Java syntax in that case).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For source listings from example programs, the listing will begin with a comment
    indicating the related filename (and method name, if needed):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: You should feel free to look at the noted file in your editor or IDE. We encourage
    you to compile and run the examples. And we especially encourage tinkering!
  prefs: []
  type: TYPE_NORMAL
- en: 'For work in *jshell*, we will always retain the `jshell` prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Other snippets without a filename or *jshell* prompt are meant to illustrate
    valid syntax and structure, or to present a hypothetical approach to handling
    a programming task. These undecorated listings are not necessarily meant to be
    executed, although you are always encouraged to create your own classes for trying
    out any topic in the book.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Learning Java*
    by Marc Loy, Patrick Niemeyer, and Daniel Leuck (O’Reilly). Copyright 2023 Marc
    Loy, 978-1-098-14553-8.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-889-8969 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-7019 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*support@oreilly.com*](mailto:support@oreilly.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://www.oreilly.com/about/contact.html*](https://www.oreilly.com/about/contact.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book where we list errata and any additional information.
    You can access this page at [*https://oreil.ly/learning-java-6e*](https://oreil.ly/learning-java-6e).
  prefs: []
  type: TYPE_NORMAL
- en: You can visit GitHub to grab the [code examples](https://github.com/l0y/learnjava6e).
    More details on downloading and working with the examples are provided in [Appendix A](app01.html#learnjava6-APP-A).
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many people have contributed to putting this book together, both in its *Exploring
    Java* incarnation and in its current form as *Learning Java*. Foremost, we would
    like to thank Brian Guerin, Senior Acquisitions Editor, and Zan McQuade, Content
    Director, for kicking off this edition. Indeed, we want to thank the entire team
    at O’Reilly, including Sarah Grey, Development Editor; Ashley Stussy, Production
    Editor; and Kristen Brown, Manager, Content Services. It’s hard to imagine a company
    more dedicated to the success of their employees, authors, and readers. Sarah
    deserves a particularly loud shoutout for her work editing this sixth edition.
    Authors often thank their editors regardless of the genre of book, but this gratitude
    and praise is doubly important for technical topics. Sarah is a tireless collaborator
    who lifted our moods almost as regularly as she improved the quality of our writing.
  prefs: []
  type: TYPE_NORMAL
- en: Several reviewers provided valuable feedback as we prepared this edition. Duncan
    MacGregor directed several topics down more useful paths. Eric van Hoose tightened
    our prose. David Calabrese noted spots where new programmers might need more background.
    And Alex Faber helped validate the code for all of our examples and exercises.
    As with so many things, extra eyes are indispensable. We are lucky to have had
    such attentive pairs in our corner.
  prefs: []
  type: TYPE_NORMAL
- en: The original version of the glossary came from David Flanagan’s book [*Java
    in a Nutshell*](http://oreil.ly/Java_Nutshell_5) (O’Reilly). We also borrowed
    several class hierarchy diagrams from David’s book. These diagrams were based
    on similar diagrams by Charles L. Perkins.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, warm thanks to Ron Becker for sound advice and interesting ideas as
    seen from the perspective of a layman well removed from the programming world.
  prefs: []
  type: TYPE_NORMAL
