- en: Part I. Functional Basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Functional programming isn’t more complicated than object-oriented programming
    and its primarily imperative coding style. It’s just a different way of approaching
    the same problems. Every problem that you can solve imperatively can also be solved
    functionally.
  prefs: []
  type: TYPE_NORMAL
- en: Mathematics builds the foundation for functional programming, making it harder
    to approach than an object-oriented mindset. But just like learning a new foreign
    language, the similarities and shared roots become more visible over time until
    it *just clicks*.
  prefs: []
  type: TYPE_NORMAL
- en: You can implement almost any of the upcoming concepts without Java lambda expression.
    Compared to other languages, though, the result won’t be as elegant and concise.
    The functional tools available in Java allow your implementations of these concepts
    and functional idioms to be less verbose and more concise and efficient.
  prefs: []
  type: TYPE_NORMAL
