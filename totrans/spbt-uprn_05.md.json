["```java\n#greeting-name=Dakota\n```", "```java\norg.springframework.beans.factory.BeanCreationException:\n    Error creating bean with name 'greetingController':\n        Injection of autowired dependencies failed; nested exception is\n        java.lang.IllegalArgumentException:\n            Could not resolve placeholder 'greeting-name' in value\n            \"greeting-coffee: ${greeting-name} is drinking Cafe Ganador\"\n```", "```java\nclass Greeting {\n    private String name;\n    private String coffee;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getCoffee() {\n        return coffee;\n    }\n\n    public void setCoffee(String coffee) {\n        this.coffee = coffee;\n    }\n}\n```", "```java\n@SpringBootApplication\n@ConfigurationPropertiesScan\npublic class SburRestDemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SburRestDemoApplication.class, args);\n    }\n\n}\n```", "```java\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-configuration-processor</artifactId>\n    <optional>true</optional>\n</dependency>\n```", "```java\n@RestController\n@RequestMapping(\"/greeting\")\nclass GreetingController {\n    private final Greeting greeting;\n\n    public GreetingController(Greeting greeting) {\n        this.greeting = greeting;\n    }\n\n    @GetMapping\n    String getGreeting() {\n        return greeting.getName();\n    }\n\n    @GetMapping(\"/coffee\")\n    String getNameAndCoffee() {\n        return greeting.getCoffee();\n    }\n}\n```", "```java\nclass Droid {\n    private String id, description;\n\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n}\n```", "```java\n@SpringBootApplication\n@ConfigurationPropertiesScan\npublic class SburRestDemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SburRestDemoApplication.class, args);\n    }\n\n    @Bean\n    @ConfigurationProperties(prefix = \"droid\")\n    Droid createDroid() {\n        return new Droid();\n    }\n}\n```", "```java\n@RestController\n@RequestMapping(\"/droid\")\nclass DroidController {\n    private final Droid droid;\n\n    public DroidController(Droid droid) {\n        this.droid = droid;\n    }\n\n    @GetMapping\n    Droid getDroid() {\n        return droid;\n    }\n}\n```", "```java\n============================\nCONDITIONS EVALUATION REPORT\n============================\n\nPositive matches:\n-----------------\n   DataSourceAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource',\n      'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType'\n      (OnClassCondition)\n```", "```java\nNegative matches:\n-----------------\n   ActiveMQAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class\n          'javax.jms.ConnectionFactory' (OnClassCondition)\n```", "```java\nUnconditional classes:\n----------------------\n    org.springframework.boot.autoconfigure.context\n     .ConfigurationPropertiesAutoConfiguration\n```", "```java\n<dependencies>\n    ... (other dependencies omitted for brevity)\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n</dependencies>\n```", "```java\nmanagement.endpoints.web.exposure.include=env, info, health\n```", "```java\nmanagement.endpoints.web.exposure.include=*\n```", "```java\nINFO 22115 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      :\n    Exposing 13 endpoint(s) beneath base path '/actuator'\n```", "```java\nmheckler-a01 :: ~/dev Â» http :8080/actuator\nHTTP/1.1 200\nConnection: keep-alive\nContent-Type: application/vnd.spring-boot.actuator.v3+json\nDate: Fri, 27 Nov 2020 17:43:27 GMT\nKeep-Alive: timeout=60\nTransfer-Encoding: chunked\n\n{\n    \"_links\": {\n        \"beans\": {\n            \"href\": \"http://localhost:8080/actuator/beans\",\n            \"templated\": false\n        },\n        \"caches\": {\n            \"href\": \"http://localhost:8080/actuator/caches\",\n            \"templated\": false\n        },\n        \"caches-cache\": {\n            \"href\": \"http://localhost:8080/actuator/caches/{cache}\",\n            \"templated\": true\n        },\n        \"conditions\": {\n            \"href\": \"http://localhost:8080/actuator/conditions\",\n            \"templated\": false\n        },\n        \"configprops\": {\n            \"href\": \"http://localhost:8080/actuator/configprops\",\n            \"templated\": false\n        },\n        \"env\": {\n            \"href\": \"http://localhost:8080/actuator/env\",\n            \"templated\": false\n        },\n        \"env-toMatch\": {\n            \"href\": \"http://localhost:8080/actuator/env/{toMatch}\",\n            \"templated\": true\n        },\n        \"health\": {\n            \"href\": \"http://localhost:8080/actuator/health\",\n            \"templated\": false\n        },\n        \"health-path\": {\n            \"href\": \"http://localhost:8080/actuator/health/{*path}\",\n            \"templated\": true\n        },\n        \"heapdump\": {\n            \"href\": \"http://localhost:8080/actuator/heapdump\",\n            \"templated\": false\n        },\n        \"info\": {\n            \"href\": \"http://localhost:8080/actuator/info\",\n            \"templated\": false\n        },\n        \"loggers\": {\n            \"href\": \"http://localhost:8080/actuator/loggers\",\n            \"templated\": false\n        },\n        \"loggers-name\": {\n            \"href\": \"http://localhost:8080/actuator/loggers/{name}\",\n            \"templated\": true\n        },\n        \"mappings\": {\n            \"href\": \"http://localhost:8080/actuator/mappings\",\n            \"templated\": false\n        },\n        \"metrics\": {\n            \"href\": \"http://localhost:8080/actuator/metrics\",\n            \"templated\": false\n        },\n        \"metrics-requiredMetricName\": {\n            \"href\": \"http://localhost:8080/actuator/metrics/{requiredMetricName}\",\n            \"templated\": true\n        },\n        \"scheduledtasks\": {\n            \"href\": \"http://localhost:8080/actuator/scheduledtasks\",\n            \"templated\": false\n        },\n        \"self\": {\n            \"href\": \"http://localhost:8080/actuator\",\n            \"templated\": false\n        },\n        \"threaddump\": {\n            \"href\": \"http://localhost:8080/actuator/threaddump\",\n            \"templated\": false\n        }\n    }\n}\n```", "```java\nmanagement.endpoint.health.show-details=always\n```", "```java\n{\n    \"name\": \"Config resource 'classpath:/application.properties' via location\n     'optional:classpath:/'\",\n    \"properties\": {\n        \"droid.description\": {\n            \"origin\": \"class path resource [application.properties] - 5:19\",\n            \"value\": \"Small, rolling android. Probably doesn't drink coffee.\"\n        },\n        \"droid.id\": {\n            \"origin\": \"class path resource [application.properties] - 4:10\",\n            \"value\": \"BB-8\"\n        },\n        \"greeting.coffee\": {\n            \"origin\": \"class path resource [application.properties] - 2:17\",\n            \"value\": \"Dakota is drinking Cafe Cereza\"\n        },\n        \"greeting.name\": {\n            \"origin\": \"class path resource [application.properties] - 1:15\",\n            \"value\": \"Dakota\"\n        },\n        \"management.endpoint.health.show-details\": {\n            \"origin\": \"class path resource [application.properties] - 8:41\",\n            \"value\": \"always\"\n        },\n        \"management.endpoints.web.exposure.include\": {\n            \"origin\": \"class path resource [application.properties] - 7:43\",\n            \"value\": \"*\"\n        }\n    }\n}\n```", "```java\njava -jar target/sbur-rest-demo-0.0.1-SNAPSHOT.jar --greeting.name=Sertanejo\n```", "```java\n{\n    \"name\": \"commandLineArgs\",\n    \"properties\": {\n        \"greeting.name\": {\n            \"value\": \"Sertanejo\"\n        }\n    }\n}\n```", "```java\necho '{\"configuredLevel\": \"TRACE\"}'\n  | http :8080/actuator/loggers/org.springframework.data.web\n```"]