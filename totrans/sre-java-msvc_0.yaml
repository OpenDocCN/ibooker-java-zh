- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book presents a phased approach to building and deploying more reliable
    Java microservices. The capabilities presented in each chapter are meant to be
    followed in order, each building upon the capabilities of earlier chapters. There
    are five phases in this journey:'
  prefs: []
  type: TYPE_NORMAL
- en: Measure and monitor your services for availability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add debuggability signals that allow you to ask questions about periods of unavailability.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Improve your software delivery pipeline to limit the chance of introducing more
    failure.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Build the capability to observe the state of deployed assets all the way down
    to source code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Add just enough traffic management to bring your services up to a level of availability
    you are satisfied with.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Our goal isn’t to build a perfect system, to eliminate all failure. Our goal
    is to end with a highly reliable system and avoid spending time in the space of
    diminishing returns.
  prefs: []
  type: TYPE_NORMAL
- en: Avoiding diminishing returns is why we will spend so much time talking about
    effective measurement and monitoring, and why this discipline precedes all others.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are in engineering management, [Chapter 1](part0005_split_000.html#4OIQ4-2d714b853a094e9a910510217e0e3d73)
    is your mission statement: to build an application platform renowned for its reliability
    and the culture of an effective platform engineering team that can deliver these
    capabilities to a broader engineering organization.'
  prefs: []
  type: TYPE_NORMAL
- en: The chapters that follow contain the blueprints for achieving this mission,
    targeted at engineers. This book is intentionally narrowed in scope to *Java*
    microservices precisely so that I can offer detailed advice on how to go about
    this, including specific measurements battle-tested for Java microservices, code
    samples, and other idiosyncracies like dependency management concerns that are
    unique to the Java virtual machine (JVM). Its focus is on immediate actionability.
  prefs: []
  type: TYPE_NORMAL
- en: My Journey
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'My professional journey in software engineering forms an arc that led me to
    write this book:'
  prefs: []
  type: TYPE_NORMAL
- en: A scrappy custom software startup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A traditional insurance company called Shelter Insurance in Missouri
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Netflix in Silicon Valley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Spring team engineer working remotely
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Gradle engineer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When I left Shelter Insurance, despite my efforts, I didn’t understand public
    cloud. In almost seven years there, I had interacted with the same group of named
    virtual machines (bare metal actually, originally). I was used to quarterly release
    cycles and extensive manual testing before releases. I felt like leaders emphasized
    and reemphasized how “hard” we expected code freezes to be leading up to releases,
    how after a release a code freeze wasn’t as hard as we would have liked, etc.
    I had never experienced production monitoring of an application—that was the responsibility
    of a network operations center, a room my badge didn’t provide access to because
    I didn’t need to know what happened there. This organization was successful by
    most measures. It has changed significantly in some ways since then, and little
    in others. I’m thankful for the opportunity to have learned under some fantastic
    engineers there.
  prefs: []
  type: TYPE_NORMAL
- en: At Netflix I learned valuable lessons about engineering and culture. I left
    after a time with a great sense of hope that some of these same practices could
    be applied to a company like Shelter Insurance, and joined the Spring team. When
    I founded the open source metrics library Micrometer, it was with a deep appreciation
    of the fact that organizations are on a journey. Rather than supporting just the
    best-in-class monitoring systems of today, Micrometer’s first five monitoring
    system implementations contained three legacy monitoring systems that I knew were
    still in significant use.
  prefs: []
  type: TYPE_NORMAL
- en: A couple of years working with and advising enterprises of various sizes on
    application monitoring and delivery automation with Spinnaker gave me an idea
    of both the diversity of organizational dynamics and their commonalities. It is
    my understanding of the commonalities, those practices and techniques that every
    enterprise could benefit from, that form the substance of this book. Every enterprise
    Java organization can apply these techniques, given a bit of time and practice.
    That includes your organization.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that should be typed literally by the user.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata and any additional information.
    You can access this page at [*https://oreil.ly/SRE_with_Java_Microservices*](https://oreil.ly/SRE_with_Java_Microservices).
  prefs: []
  type: TYPE_NORMAL
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Olga Kundzich
  prefs: []
  type: TYPE_NORMAL
- en: What I didn’t know before writing this book is how much voices from an author’s
    circle of colleagues find their way into a book. It makes complete sense, of course.
    We influence each other simply by working together! Olga’s insightful views on
    a wide range of topics have probably had the greatest single influence on my thinking
    in the last couple of years, and her voice is everywhere in this book (or at least
    the best approximation of it I can represent). Thoughts you’ll find on “the application
    platform,” continuous delivery (no no, not continuous deployment—I kept confusing
    the two), asset inventory, monitoring, and elements of traffic management are
    heavily influenced by her. Thank you Olga for investing so much energy into this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: Troy Gaines
  prefs: []
  type: TYPE_NORMAL
- en: To Troy I owe my initial introduction to dependency management, build automation,
    continuous integration, unit testing, and so many other essential skills. He was
    an early and significant influence in my growth as a software developer, as I
    know he has been to many others. Thank you, old friend, for taking the time to
    review this work as well.
  prefs: []
  type: TYPE_NORMAL
- en: Tommy Ludwig
  prefs: []
  type: TYPE_NORMAL
- en: Tommy is one of the rare telemetry experts that contributes to both distributed
    tracing and aggregated metrics technologies. It is so common that contributors
    in the observability space are hyper-focused on one area of it, and Tommy is one
    of the few that floats between them. To put it mildly, I dreaded Tommy’s review
    of Chapter 3, but was happy to find that we had more in common on this than I
    expected. Thanks for pointing out the more nuanced view of distributed tracing
    tag cardinality that made its way into Chapter 3.
  prefs: []
  type: TYPE_NORMAL
- en: Sam Snyder
  prefs: []
  type: TYPE_NORMAL
- en: I haven’t known Sam for long, but it didn’t take long for me to understand that
    Sam is an excellent mentor and patient teacher. Thank you Sam for agreeing to
    subject yourself to the arduous task of reviewing a technical book, and leaving
    so much positive and encouraging feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Mike McGarr
  prefs: []
  type: TYPE_NORMAL
- en: I received an email out of the blue from Mike in 2014 that, a short time later,
    resulted in me packing everything up and moving to California. That email set
    me on a course that changed everything. I came to know so many experts at Netflix
    that accelerated me through the learning process because Mike took a chance on
    me. It radically changed the way I view software development and operations. Mike
    is also just a fantastic human being—a kind and inquisitive friend and leader.
    Thanks, Mike.
  prefs: []
  type: TYPE_NORMAL
- en: Josh Long
  prefs: []
  type: TYPE_NORMAL
- en: Once in the book, I quoted a typical Josh Long phrase about there being “no
    place like” production. I thought I was being cheeky and fun. And then Josh wrote
    a foreword that features Buzz Lightyear…Josh is an unstoppable ball of energy.
    Thank you Josh for injecting a bit of that energy into this work.
  prefs: []
  type: TYPE_NORMAL
