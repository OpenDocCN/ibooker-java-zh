["```java\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security</groupId>\n    <artifactId>spring-security-test</artifactId>\n    <scope>test</scope>\n</dependency>\n```", "```java\nmheckler-a01 :: ~ » http :8080/aircraft\nHTTP/1.1 401\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nExpires: 0\nPragma: no-cache\nSet-Cookie: JSESSIONID=347DD039FE008DE50F457B890F2149C0; Path=/; HttpOnly\nWWW-Authenticate: Basic realm=\"Realm\"\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n\n{\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/aircraft\",\n    \"status\": 401,\n    \"timestamp\": \"2020-10-10T17:26:31.599+00:00\"\n}\n```", "```java\nUsing generated security password: 1ad8a0fc-1a0c-429e-8ed7-ba0e3c3649ef\n```", "```java\nmheckler-a01 :: ~ » http :8080/aircraft\n    --auth user:1ad8a0fc-1a0c-429e-8ed7-ba0e3c3649ef\nHTTP/1.1 200\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nExpires: 0\nPragma: no-cache\nSet-Cookie: JSESSIONID=94B52FD39656A17A015BC64CF6BF7475; Path=/; HttpOnly\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n\n[\n    {\n        \"altitude\": 40000,\n        \"barometer\": 1013.6,\n        \"bds40_seen_time\": \"2020-10-10T17:48:02Z\",\n        \"callsign\": \"SWA2057\",\n        \"category\": \"A3\",\n        \"flightno\": \"WN2057\",\n        \"heading\": 243,\n        \"id\": 1,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-10T17:48:06Z\",\n        \"lat\": 38.600372,\n        \"lon\": -90.42375,\n        \"polar_bearing\": 207.896382,\n        \"polar_distance\": 24.140226,\n        \"pos_update_time\": \"2020-10-10T17:48:06Z\",\n        \"reg\": \"N557WN\",\n        \"route\": \"IND-DAL-MCO\",\n        \"selected_altitude\": 40000,\n        \"speed\": 395,\n        \"squawk\": \"2161\",\n        \"type\": \"B737\",\n        \"vert_rate\": -64\n    },\n    {\n        \"altitude\": 3500,\n        \"barometer\": 0.0,\n        \"bds40_seen_time\": null,\n        \"callsign\": \"N6884J\",\n        \"category\": \"A1\",\n        \"flightno\": \"\",\n        \"heading\": 353,\n        \"id\": 2,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-10T17:47:45Z\",\n        \"lat\": 39.062851,\n        \"lon\": -90.084965,\n        \"polar_bearing\": 32.218696,\n        \"polar_distance\": 7.816637,\n        \"pos_update_time\": \"2020-10-10T17:47:45Z\",\n        \"reg\": \"N6884J\",\n        \"route\": \"\",\n        \"selected_altitude\": 0,\n        \"speed\": 111,\n        \"squawk\": \"1200\",\n        \"type\": \"P28A\",\n        \"vert_rate\": -64\n    },\n    {\n        \"altitude\": 39000,\n        \"barometer\": 0.0,\n        \"bds40_seen_time\": null,\n        \"callsign\": \"ATN3425\",\n        \"category\": \"A5\",\n        \"flightno\": \"\",\n        \"heading\": 53,\n        \"id\": 3,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-10T17:48:06Z\",\n        \"lat\": 39.424159,\n        \"lon\": -90.419739,\n        \"polar_bearing\": 337.033437,\n        \"polar_distance\": 30.505314,\n        \"pos_update_time\": \"2020-10-10T17:48:06Z\",\n        \"reg\": \"N419AZ\",\n        \"route\": \"AFW-ABE\",\n        \"selected_altitude\": 0,\n        \"speed\": 524,\n        \"squawk\": \"2224\",\n        \"type\": \"B763\",\n        \"vert_rate\": 0\n    },\n    {\n        \"altitude\": 45000,\n        \"barometer\": 1012.8,\n        \"bds40_seen_time\": \"2020-10-10T17:48:06Z\",\n        \"callsign\": null,\n        \"category\": \"A2\",\n        \"flightno\": \"\",\n        \"heading\": 91,\n        \"id\": 4,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-10T17:48:06Z\",\n        \"lat\": 39.433982,\n        \"lon\": -90.50061,\n        \"polar_bearing\": 331.287125,\n        \"polar_distance\": 32.622134,\n        \"pos_update_time\": \"2020-10-10T17:48:05Z\",\n        \"reg\": \"N30GD\",\n        \"route\": \"\",\n        \"selected_altitude\": 44992,\n        \"speed\": 521,\n        \"squawk\": null,\n        \"type\": \"GLF4\",\n        \"vert_rate\": 64\n    }\n]\n```", "```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\n\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    UserDetailsService authentication() {\n        UserDetails peter = User.builder()\n                .username(\"peter\")\n                .password(\"ppassword\")\n                .roles(\"USER\")\n                .build();\n\n        UserDetails jodie = User.builder()\n                .username(\"jodie\")\n                .password(\"jpassword\")\n                .roles(\"USER\", \"ADMIN\")\n                .build();\n\n        System.out.println(\"   >>> Peter's password: \" + peter.getPassword());\n        System.out.println(\"   >>> Jodie's password: \" + jodie.getPassword());\n\n        return new InMemoryUserDetailsManager(peter, jodie);\n    }\n}\n```", "```java\nmheckler-a01 :: ~ » http :8080/aircraft --auth jodie:jpassword\nHTTP/1.1 401\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nContent-Length: 0\nExpires: 0\nPragma: no-cache\nWWW-Authenticate: Basic realm=\"Realm\"\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n```", "```java\njava.lang.IllegalArgumentException: There is no PasswordEncoder\n    mapped for the id \"null\"\n\tat org.springframework.security.crypto.password\n        .DelegatingPasswordEncoder$UnmappedIdPasswordEncoder\n            .matches(DelegatingPasswordEncoder.java:250)\n                ~[spring-security-core-5.3.4.RELEASE.jar:5.3.4.RELEASE]\n```", "```java\n>>> Peter's password: ppassword\n>>> Jodie's password: jpassword\n```", "```java\nprivate final PasswordEncoder pwEncoder =\n        PasswordEncoderFactories.createDelegatingPasswordEncoder();\n```", "```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.crypto.factory.PasswordEncoderFactories;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\n\n@Configuration\npublic class SecurityConfig {\n    private final PasswordEncoder pwEncoder =\n            PasswordEncoderFactories.createDelegatingPasswordEncoder();\n\n    @Bean\n    UserDetailsService authentication() {\n        UserDetails peter = User.builder()\n                .username(\"peter\")\n                .password(pwEncoder.encode(\"ppassword\"))\n                .roles(\"USER\")\n                .build();\n\n        UserDetails jodie = User.builder()\n                .username(\"jodie\")\n                .password(pwEncoder.encode(\"jpassword\"))\n                .roles(\"USER\", \"ADMIN\")\n                .build();\n\n        System.out.println(\"   >>> Peter's password: \" + peter.getPassword());\n        System.out.println(\"   >>> Jodie's password: \" + jodie.getPassword());\n\n        return new InMemoryUserDetailsManager(peter, jodie);\n    }\n}\n```", "```java\nmheckler-a01 :: ~ » http :8080/aircraft --auth jodie:jpassword\nHTTP/1.1 200\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nExpires: 0\nPragma: no-cache\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n\n[\n    {\n        \"altitude\": 24250,\n        \"barometer\": 0.0,\n        \"bds40_seen_time\": null,\n        \"callsign\": null,\n        \"category\": \"A2\",\n        \"flightno\": \"\",\n        \"heading\": 118,\n        \"id\": 1,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-12T16:13:26Z\",\n        \"lat\": 38.325119,\n        \"lon\": -90.154159,\n        \"polar_bearing\": 178.56009,\n        \"polar_distance\": 37.661127,\n        \"pos_update_time\": \"2020-10-12T16:13:24Z\",\n        \"reg\": \"N168ZZ\",\n        \"route\": \"FMY-SUS\",\n        \"selected_altitude\": 0,\n        \"speed\": 404,\n        \"squawk\": null,\n        \"type\": \"LJ60\",\n        \"vert_rate\": 2880\n    }\n]\n```", "```java\n>>> Peter's password:\n    {bcrypt}$2a$10$rLKBzRBvtTtNcV9o8JHzFeaIskJIPXnYgVtCPs5H0GINZtk1WzsBu\n>>> Jodie's password: {\n    bcrypt}$2a$10$VR33/dlbSsEPPq6nlpnE/.ZQt0M4.bjvO5UYmw0ZW1aptO4G8dEkW\n```", "```java\nimport lombok.AllArgsConstructor;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@AllArgsConstructor\n@RestController\npublic class PositionController {\n    private final PositionRetriever retriever;\n\n    @GetMapping(\"/aircraft\")\n    public Iterable<Aircraft> getCurrentAircraftPositions() {\n        return retriever.retrieveAircraftPositions();\n    }\n\n    @GetMapping(\"/aircraftadmin\")\n    public Iterable<Aircraft> getCurrentAircraftPositionsAdminPrivs() {\n        return retriever.retrieveAircraftPositions();\n    }\n}\n```", "```java\nmheckler-a01 :: ~ » http :8080/aircraftadmin --auth jodie:jpassword\nHTTP/1.1 200\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nExpires: 0\nPragma: no-cache\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n\n[\n    {\n        \"altitude\": 24250,\n        \"barometer\": 0.0,\n        \"bds40_seen_time\": null,\n        \"callsign\": null,\n        \"category\": \"A2\",\n        \"flightno\": \"\",\n        \"heading\": 118,\n        \"id\": 1,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-12T16:13:26Z\",\n        \"lat\": 38.325119,\n        \"lon\": -90.154159,\n        \"polar_bearing\": 178.56009,\n        \"polar_distance\": 37.661127,\n        \"pos_update_time\": \"2020-10-12T16:13:24Z\",\n        \"reg\": \"N168ZZ\",\n        \"route\": \"FMY-SUS\",\n        \"selected_altitude\": 0,\n        \"speed\": 404,\n        \"squawk\": null,\n        \"type\": \"LJ60\",\n        \"vert_rate\": 2880\n    },\n    {\n        \"altitude\": 38000,\n        \"barometer\": 1013.6,\n        \"bds40_seen_time\": \"2020-10-12T20:24:48Z\",\n        \"callsign\": \"SWA1828\",\n        \"category\": \"A3\",\n        \"flightno\": \"WN1828\",\n        \"heading\": 274,\n        \"id\": 2,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-12T20:24:48Z\",\n        \"lat\": 39.348862,\n        \"lon\": -90.751668,\n        \"polar_bearing\": 310.510201,\n        \"polar_distance\": 35.870036,\n        \"pos_update_time\": \"2020-10-12T20:24:48Z\",\n        \"reg\": \"N8567Z\",\n        \"route\": \"TPA-BWI-OAK\",\n        \"selected_altitude\": 38016,\n        \"speed\": 397,\n        \"squawk\": \"7050\",\n        \"type\": \"B738\",\n        \"vert_rate\": -128\n    }\n]\n```", "```java\nmheckler-a01 :: ~ » http :8080/aircraftadmin --auth peter:ppassword\nHTTP/1.1 200\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nExpires: 0\nPragma: no-cache\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n\n[\n    {\n        \"altitude\": 24250,\n        \"barometer\": 0.0,\n        \"bds40_seen_time\": null,\n        \"callsign\": null,\n        \"category\": \"A2\",\n        \"flightno\": \"\",\n        \"heading\": 118,\n        \"id\": 1,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-12T16:13:26Z\",\n        \"lat\": 38.325119,\n        \"lon\": -90.154159,\n        \"polar_bearing\": 178.56009,\n        \"polar_distance\": 37.661127,\n        \"pos_update_time\": \"2020-10-12T16:13:24Z\",\n        \"reg\": \"N168ZZ\",\n        \"route\": \"FMY-SUS\",\n        \"selected_altitude\": 0,\n        \"speed\": 404,\n        \"squawk\": null,\n        \"type\": \"LJ60\",\n        \"vert_rate\": 2880\n    },\n    {\n        \"altitude\": 38000,\n        \"barometer\": 1013.6,\n        \"bds40_seen_time\": \"2020-10-12T20:24:48Z\",\n        \"callsign\": \"SWA1828\",\n        \"category\": \"A3\",\n        \"flightno\": \"WN1828\",\n        \"heading\": 274,\n        \"id\": 2,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-12T20:24:48Z\",\n        \"lat\": 39.348862,\n        \"lon\": -90.751668,\n        \"polar_bearing\": 310.510201,\n        \"polar_distance\": 35.870036,\n        \"pos_update_time\": \"2020-10-12T20:24:48Z\",\n        \"reg\": \"N8567Z\",\n        \"route\": \"TPA-BWI-OAK\",\n        \"selected_altitude\": 38016,\n        \"speed\": 397,\n        \"squawk\": \"7050\",\n        \"type\": \"B738\",\n        \"vert_rate\": -128\n    }\n]\n```", "```java\nprotected void configure(HttpSecurity http) throws Exception {\n    // Logging statement omitted\n\n    http\n        .authorizeRequests()\n            .anyRequest().authenticated()\n            .and()\n        .formLogin().and()\n        .httpBasic();\n}\n```", "```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    super.configure(http);\n}\n```", "```java\n// User authorization\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests()\n            .mvcMatchers(\"/aircraftadmin/**\").hasRole(\"ADMIN\")\n            .anyRequest().authenticated()\n            .and()\n            .formLogin()\n            .and()\n            .httpBasic();\n}\n```", "```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration\n    .EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration\n    .WebSecurityConfigurerAdapter;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.crypto.factory.PasswordEncoderFactories;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\n\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    private final PasswordEncoder pwEncoder =\n            PasswordEncoderFactories.createDelegatingPasswordEncoder();\n\n    @Bean\n    UserDetailsService authentication() {\n        UserDetails peter = User.builder()\n                .username(\"peter\")\n                .password(pwEncoder.encode(\"ppassword\"))\n                .roles(\"USER\")\n                .build();\n\n        UserDetails jodie = User.builder()\n                .username(\"jodie\")\n                .password(pwEncoder.encode(\"jpassword\"))\n                .roles(\"USER\", \"ADMIN\")\n                .build();\n\n        System.out.println(\"   >>> Peter's password: \" + peter.getPassword());\n        System.out.println(\"   >>> Jodie's password: \" + jodie.getPassword());\n\n        return new InMemoryUserDetailsManager(peter, jodie);\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .mvcMatchers(\"/aircraftadmin/**\").hasRole(\"ADMIN\")\n                .anyRequest().authenticated()\n                .and()\n                .formLogin()\n                .and()\n                .httpBasic();\n    }\n}\n```", "```java\nmheckler-a01 :: ~ » http :8080/aircraftadmin --auth jodie:jpassword\nHTTP/1.1 200\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nExpires: 0\nPragma: no-cache\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n\n[\n    {\n        \"altitude\": 36000,\n        \"barometer\": 1012.8,\n        \"bds40_seen_time\": \"2020-10-13T19:16:10Z\",\n        \"callsign\": \"UPS2806\",\n        \"category\": \"A5\",\n        \"flightno\": \"5X2806\",\n        \"heading\": 289,\n        \"id\": 1,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-13T19:16:14Z\",\n        \"lat\": 38.791122,\n        \"lon\": -90.21286,\n        \"polar_bearing\": 189.515723,\n        \"polar_distance\": 9.855602,\n        \"pos_update_time\": \"2020-10-13T19:16:12Z\",\n        \"reg\": \"N331UP\",\n        \"route\": \"SDF-DEN\",\n        \"selected_altitude\": 36000,\n        \"speed\": 374,\n        \"squawk\": \"6652\",\n        \"type\": \"B763\",\n        \"vert_rate\": 0\n    },\n    {\n        \"altitude\": 25100,\n        \"barometer\": 1012.8,\n        \"bds40_seen_time\": \"2020-10-13T19:16:13Z\",\n        \"callsign\": \"ASH5937\",\n        \"category\": \"A3\",\n        \"flightno\": \"AA5937\",\n        \"heading\": 44,\n        \"id\": 2,\n        \"is_adsb\": true,\n        \"is_on_ground\": false,\n        \"last_seen_time\": \"2020-10-13T19:16:13Z\",\n        \"lat\": 39.564148,\n        \"lon\": -90.102459,\n        \"polar_bearing\": 5.201331,\n        \"polar_distance\": 36.841422,\n        \"pos_update_time\": \"2020-10-13T19:16:13Z\",\n        \"reg\": \"N905J\",\n        \"route\": \"DFW-BMI-DFW\",\n        \"selected_altitude\": 11008,\n        \"speed\": 476,\n        \"squawk\": \"6270\",\n        \"type\": \"CRJ9\",\n        \"vert_rate\": -2624\n    }\n]\n```", "```java\nmheckler-a01 :: ~ » http :8080/aircraftadmin --auth peter:ppassword\nHTTP/1.1 403\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nExpires: 0\nPragma: no-cache\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\n\n{\n    \"error\": \"Forbidden\",\n    \"message\": \"\",\n    \"path\": \"/aircraftadmin\",\n    \"status\": 403,\n    \"timestamp\": \"2020-10-13T19:18:10.961+00:00\"\n}\n```", "```java\n<!--\tComment out or remove this \t-->\n<!--<dependency>-->\n<!--\t<groupId>org.springframework.boot</groupId>-->\n<!--\t<artifactId>spring-boot-starter-security</artifactId>-->\n<!--</dependency>-->\n\n<!--\tAdd these  \t    \t\t    -->\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-oauth2-client</artifactId>\n</dependency>\n<dependency>\n    <groupId>com.okta.spring</groupId>\n    <artifactId>okta-spring-boot-starter</artifactId>\n    <version>1.4.0</version>\n</dependency>\n```", "```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.oauth2.client.registration\n    .ClientRegistrationRepository;\nimport org.springframework.security.oauth2.client.web\n    .OAuth2AuthorizedClientRepository;\nimport org.springframework.security.oauth2.client.web.reactive.function.client\n    .ServletOAuth2AuthorizedClientExchangeFilterFunction;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    WebClient client(ClientRegistrationRepository regRepo,\n                     OAuth2AuthorizedClientRepository cliRepo) {\n        ServletOAuth2AuthorizedClientExchangeFilterFunction filter =\n                new ServletOAuth2AuthorizedClientExchangeFilterFunction\n                    (regRepo, cliRepo);\n\n        filter.setDefaultOAuth2AuthorizedClient(true);\n\n        return WebClient.builder()\n                .baseUrl(\"http://localhost:7634/\")\n                .apply(filter.oauth2Configuration())\n                .build();\n    }\n}\n```", "```java\nimport lombok.AllArgsConstructor;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@AllArgsConstructor\n@Component\npublic class PositionRetriever {\n    private final AircraftRepository repository;\n    private final WebClient client;\n\n    Iterable<Aircraft> retrieveAircraftPositions() {\n        repository.deleteAll();\n\n        client.get()\n                .uri(\"/aircraft\")\n                .retrieve()\n                .bodyToFlux(Aircraft.class)\n                .filter(ac -> !ac.getReg().isEmpty())\n                .toStream()\n                .forEach(repository::save);\n\n        return repository.findAll();\n    }\n}\n```", "```java\nspring:\n  security:\n    oauth2:\n      client:\n        registration:\n          okta:\n            client-id: <your_assigned_client_id_here>\n            client-secret: <your_assigned_client_secret_here>\n        provider:\n          okta:\n            issuer-uri: https://<your_assigned_subdomain_here>\n                            .oktapreview.com/oauth2/default\n```", "```java\nimport lombok.AllArgsConstructor;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@AllArgsConstructor\n@RestController\npublic class PositionController {\n    private final PositionRetriever retriever;\n\n    @GetMapping(\"/aircraft\")\n    public Iterable<Aircraft> getCurrentAircraftPositions() {\n        return retriever.retrieveAircraftPositions(\"aircraft\");\n    }\n\n    @GetMapping(\"/aircraftadmin\")\n    public Iterable<Aircraft> getCurrentAircraftPositionsAdminPrivs() {\n        return retriever.retrieveAircraftPositions(\"aircraftadmin\");\n    }\n}\n```", "```java\nimport lombok.AllArgsConstructor;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.reactive.function.client.WebClient;\n\n@AllArgsConstructor\n@Component\npublic class PositionRetriever {\n    private final AircraftRepository repository;\n    private final WebClient client;\n\n    Iterable<Aircraft> retrieveAircraftPositions(String endpoint) {\n        repository.deleteAll();\n\n        client.get()\n                .uri((null != endpoint) ? endpoint : \"\")\n                .retrieve()\n                .bodyToFlux(Aircraft.class)\n                .filter(ac -> !ac.getReg().isEmpty())\n                .toStream()\n                .forEach(repository::save);\n\n        return repository.findAll();\n    }\n}\n```", "```java\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>\n</dependency>\n<dependency>\n    <groupId>com.okta.spring</groupId>\n    <artifactId>okta-spring-boot-starter</artifactId>\n    <version>1.4.0</version>\n</dependency>\n```", "```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.web.server.ServerHttpSecurity;\nimport org.springframework.security.web.server.SecurityWebFilterChain;\n\n@Configuration\npublic class SecurityConfig {\n    @Bean\n    public SecurityWebFilterChain securityWebFilterChain(ServerHttpSecurity http) {\n        http\n                .authorizeExchange()\n                .pathMatchers(\"/aircraft/**\").hasAuthority(\"SCOPE_closedid\")\n                .pathMatchers(\"/aircraftadmin/**\").hasAuthority(\"SCOPE_openid\")\n                .and().oauth2ResourceServer().jwt();\n\n        return http.build();\n    }\n}\n```", "```java\nimport org.springframework.messaging.handler.annotation.MessageMapping;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\nimport reactor.core.publisher.Flux;\n\nimport java.io.IOException;\nimport java.time.Duration;\n\n@Controller\npublic class PlaneController {\n    private final PlaneFinderService pfService;\n\n    public PlaneController(PlaneFinderService pfService) {\n        this.pfService = pfService;\n    }\n\n    @ResponseBody\n    @GetMapping(\"/aircraft\")\n    public Flux<Aircraft> getCurrentAircraft() throws IOException {\n        return pfService.getAircraft();\n    }\n\n    @ResponseBody\n    @GetMapping(\"/aircraftadmin\")\n    public Flux<Aircraft> getCurrentAircraftByAdmin() throws IOException {\n        return pfService.getAircraft();\n    }\n\n    @MessageMapping(\"acstream\")\n    public Flux<Aircraft> getCurrentACStream() throws IOException {\n        return pfService.getAircraft().concatWith(\n                Flux.interval(Duration.ofSeconds(1))\n                        .flatMap(l -> pfService.getAircraft()));\n    }\n}\n```", "```java\nspring:\n  security:\n    oauth2:\n      resourceserver:\n        jwt:\n          issuer-uri: https://<your_assigned_subdomain_here>.oktapreview.com/\n              oauth2/default\n  rsocket:\n    server:\n      port: 7635\n\nserver:\n  port: 7634\n```", "```java\nForbidden: 403 Forbidden from GET http://localhost:7634/aircraft with root cause\n```"]