["```java\nimport org.apache.spark.sql.SparkSession;\nimport org.apache.spark.sql.Dataset;\nimport org.apache.spark.api.java.function.FilterFunction;\n\n/**\n * Read an Apache Logfile and summarize it.\n */\npublic class LogReader {\n\n    public static void main(String[] args) {\n\n        final String logFile = \"/var/wildfly/standalone/log/access_log.log\";    ![1](assets/1.png)\n        SparkSession spark =\n            SparkSession.builder().appName(\"Log Analyzer\").getOrCreate();       ![2](assets/2.png)\n        Dataset<String> logData = spark.read().textFile(logFile).cache();       ![3](assets/3.png)\n\n        long good = logData.filter(                                             ![4](assets/4.png)\n        new FilterFunction<>() {public boolean call(String s) {\n                    return s.contains(\"200\");\n                }\n            }).count();\n\n        long bad = logData.filter(new FilterFunction<>() {\n                public boolean call(String s) {\n                    return s.contains(\"404\");\n                }\n            }).count();\n\n        long ugly = logData.filter(new FilterFunction<>() {\n                public boolean call(String s) {\n                    return s.contains(\"500\");\n                }\n            }).count();\n\n        System.out.printf(                                                      ![5](assets/5.png)\n            \"Successful transfers %d, 404 tries %d, 500 errors %d\\n\",\n            good, bad, ugly);\n\n        spark.stop();\n    }\n}\n```", "```java\n<dependency>\n    <groupId>org.apache.spark</groupId>\n    <artifactId>spark-sql_2.12</artifactId>\n    <version>2.4.4</version>\n    <scope>provided</scope>\n</dependency>\n```", "```java\nSPARK_HOME=~/spark-3.0.0-bin-hadoop3.2/\n```", "```java\nSuccessful transfers 32555, 404 tries 6539, 500 errors 183\n```", "```java\n$ R\n\nR version 3.6.0 (2019-04-26) -- \"Planting of a Tree\"\nCopyright (C) 2019 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin15.6.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n...\n\n> 2 + 2\n[1] 4\n> x = 2 + 2\n> x\n[1] 4\n> r = 10 20 30 40 50\nError: unexpected numeric constant in \"r = 10 20\"\n> r = c(10,20,30,45,55,67)\n> r\n[1] 10 20 30 45 55 67\n> r+3\n[1] 13 23 33 48 58 70\n> r / 3\n[1]  3.333333  6.666667 10.000000 15.000000 18.333333 22.333333\n>quit()\nSave workspace image? [y/n/c]: n\n$\n```", "```java\nRandom r = new Random();\nfor (int i = 0; i < 10_000; i++) {\n    System.out.println(\"A normal random double is \" + r.nextDouble());\n    System.out.println(\"A gaussian random double is \" + r.nextGaussian());\n```", "```java\npng(\"randomness.png\")\nus <- read.table(\"normal.txt\")[[1]]\nns <- read.table(\"gaussian.txt\")[[1]]\n\nlayout(t(c(1,2)), respect=TRUE)\n\nhist(us, main = \"Using nextRandom()\", nclass = 10,\n       xlab = NULL, col = \"lightgray\", las = 1, font.lab = 3)\n\nhist(ns, main = \"Using nextGaussian()\", nclass = 16,\n       xlab = NULL, col = \"lightgray\", las = 1, font.lab = 3)\ndev.off()\n```", "```java\norg.renjin:renjin-script-engine:3.5-beta76\n```", "```java\n<repositories>\n    <repository>\n        <id>bedatadriven</id>\n        <name>bedatadriven public repo</name>\n        <url>https://nexus.bedatadriven.com/content/groups/public/</url>\n    </repository>\n</repositories>\n```", "```java\n    /**\n * Demonstrate interacting with the \"R\" implementation called \"Renjin\"\n */\n    public static void main(String[] args) throws ScriptException {\n        ScriptEngineManager manager = new ScriptEngineManager();\n        ScriptEngine engine = manager.getEngineByName(\"Renjin\");\n        engine.put(\"a\", 42);\n        Object ret = engine.eval(\"b <- 2; a*b\");\n        System.out.println(ret);\n    }\n```", "```java\n    private static final String R_SCRIPT_FILE = \"/randomnesshistograms.r\";\n    private static final int N = 10000;\n\n    public static void main(String[] argv) throws Exception {\n        // java.util.Random methods are non-static, do need to construct\n        Random r = new Random();\n        double[] us = new double[N], ns = new double[N];\n        for (int i=0; i<N; i++) {\n            us[i] = r.nextDouble();\n            ns[i] =r.nextGaussian();\n        }\n        try (InputStream is =\n            Random5.class.getResourceAsStream(R_SCRIPT_FILE)) {\n            if (is == null) {\n                throw new IllegalStateException(\"Can't open R file \");\n            }\n            ScriptEngineManager manager = new ScriptEngineManager();\n            ScriptEngine engine = manager.getEngineByName(\"Renjin\");\n            engine.put(\"us\", us);\n            engine.put(\"ns\", ns);\n            engine.eval(FileIO.readerToString(new InputStreamReader(is)));\n        }\n    }\n```", "```java\n> install.packages('rJava')                            ![1](assets/1.png)\ntrying URL 'http://.../rJava_0.9-11.tgz' Content type 'application/x-gzip' length 745354 bytes (727 KB)\n==================================================\ndownloaded 727 KB\n\nThe downloaded binary packages are in\n    /tmp//Rtmp6XYZ9t/downloaded_packages > library('rJava')                                    ![2](assets/2.png)\n> .jinit()\n> J('java.time.LocalDate', 'now')                    ![3](assets/3.png)\n[1] \"Java-Object{2019-11-22}\"\n> d=J('java.time.LocalDate', 'now')$toString()        ![4](assets/4.png)\n> d\n[1] \"2019-11-22\"\n```", "```java\n> d=J('java.time.LocalDate', 'now')                    ![1](assets/1.png)\n> .jcall(d, \"I\", 'getYear')                            ![2](assets/2.png)\n[1] 2019\n>\n> .jcall(\"java/lang/System\",\"S\",\"getProperty\",\"user.dir\") ![3](assets/3.png)\n[1] \"/home/ian\"\n> c=J('java/lang/System')                            ![4](assets/4.png)\n> .jcall(c, \"S\", 'getProperty', 'user.dir')\n[1] \"/home/ian\"\n>\n```", "```java\n$ gu install R\nDownloading: Component catalog from www.graalvm.org\nProcessing component archive: FastR\nDownloading: Component R: FastR  from github.com\nInstalling new component: FastR (org.graalvm.R, version 19.2.0.1)\nNOTES:\n---------------\nThe user specific library directory was not created automatically.\nYou can either create the directory manually or edit file\n/Library/Java/JavaVirtualMachines/graalvm-ce-19.2.0.1/Contents/\n  Home/jre/languages/R/etc/Renviron\nto change it to any desired location. Without user specific library\ndirectory, users will need write permission for the GraalVM home\ndirectory in order to install R packages.\n...\n[more install notes]\n```", "```java\n$ which R\n/Library/Java/JavaVirtualMachines/graalvm-ce-19.2.0.1/Contents/Home/bin/R\n/usr/local/bin/R\n```", "```java\n$ R\nR version 3.5.1 (FastR)\nCopyright (c) 2013-19, Oracle and/or its affiliates\nCopyright (c) 1995-2018, The R Core Team\nCopyright (c) 2018 The R Foundation for Statistical Computing\nCopyright (c) 2012-4 Purdue University\nCopyright (c) 1997-2002, Makoto Matsumoto and Takuji Nishimura\nAll rights reserved.\n\nFastR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information.\n\nType 'q()' to quit R.\n[Previously saved workspace restored]\n\n> 2 + 2\n[1] 4\n> ^D\nSave workspace image? [y/n/c]: n\n$\n```", "```java\n$ R\n> install.packages('timevis')\n> quit()\n$\n```", "```java\n# Draw the timeline for the epics.\n\nepics = read.table(\"epics.txt\", header=TRUE, fill=TRUE)\n\n# epics\n\nlibrary(\"timevis\")\n\ntimevis(epics)\n```"]