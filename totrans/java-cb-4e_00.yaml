- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Like any of the most-used programming languages, Java has its share of detractors,
    advocates, issues, quirks,^([1](preface01.html#idm45290711767064)) and a learning
    curve. The *Java Cookbook* aims to help the Java developer get up to speed on
    some of the most important parts of Java development. I focus on the standard
    APIs and some third-party APIs, but I don’t hesitate to cover language issues
    as well.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 像任何使用最多的编程语言一样，Java 有其反对者、支持者、问题、怪癖^([1](preface01.html#idm45290711767064))
    和一个学习曲线。*Java Cookbook* 的目标是帮助 Java 开发者迅速掌握 Java 开发的一些最重要的部分。我专注于标准 API 和一些第三方
    API，但也不吝涉及语言问题。
- en: This is the fourth edition of this book, and it has been shaped by many people
    and by the myriad changes that Java has undergone over its first two decades of
    popularity. Readers interested in Java’s history can refer to [Appendix A](app01.html#javacook-then_now).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书的第四版，经过许多人的共同努力以及 Java 这两个十年中经历的无数变化而形成。对 Java 历史感兴趣的读者可以参考 [附录 A](app01.html#javacook-then_now)。
- en: Java 11 is the current long-term supported version, but Java 12 and 13 are out.
    Java 14 is in early access and scheduled for final release the very same day as
    this book’s fourth edition. The new cadence of releases every six months may be
    great for the Java SE development team at Oracle and for click-driven, Java-related
    news sites, but it “may cause some extra work” for Java book authors, since books
    typically have a longer revision cycle than Java now does! Java 9, which came
    out after the previous edition of this book, was a breaking release, the first
    release in a very long time to break backwards compatibility, primarily the Java
    module system. Everything in the book is assumed to work on any JVM that is still
    being used to develop code. Nobody should be using Java 7 (or anything before
    it!) for anything, and nobody should be doing new development in Java 8\. If you
    are, it’s time to move on!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Java 11 是当前的长期支持版本，但 Java 12 和 13 已经发布。Java 14 正在提前访问，并计划在本书第四版发布当天最终发布。每六个月发布一次的新发布节奏可能对
    Oracle 的 Java SE 开发团队和以 Java 为关键词的新闻网站来说是个好消息，但对于 Java 书籍作者来说，“可能会增加一些额外的工作”，因为书籍的修订周期通常比
    Java 现在的发布周期长！Java 9 是本书上一版之后发布的，是一个破坏性的发布，是很长时间以来第一个破坏向后兼容性的发布，主要是 Java 模块系统。本书中的所有内容都假定在任何仍在使用的
    JVM 上都可以工作。任何人都不应该再使用 Java 7（或之前的版本！）做任何事情，并且任何人都不应该在 Java 8 上进行新的开发。如果你还在使用，现在是时候转变了！
- en: The goal of this revision is to keep the book up to date with all this change.
    While cutting out a lot of older material, I’ve added information on new features
    such as Modules and the interactive JShell, and I’ve updated a lot of other information
    along the way.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此次修订的目标是保持本书与所有这些变化的同步。虽然剔除了大量旧材料，我还添加了诸如模块和交互式 JShell 等新特性的信息，并在此过程中更新了大量其他信息。
- en: Who This Book Is For
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合谁？
- en: I’m going to assume that you know the basics of Java. I won’t tell you how to
    `println` a string, nor how to write a class that extends another and/or implements
    an interface. I presume you’ve taken a Java course such as [Learning Tree’s Introduction](https://learningtree.com/471)
    or that you’ve studied an introductory book such as [*Head First Java*](http://shop.oreilly.com/product/9780596009205.do),
    [*Learning Java*](http://shop.oreilly.com/product/0636920023463.do), or [*Java
    in a Nutshell*](http://shop.oreilly.com/product/9780596007737.do) (O’Reilly).
    However, [Chapter 1](ch01.html#javacook-getstarted) covers some techniques that
    you might not know very well and that are necessary to understand some of the
    later material. Feel free to skip around! Both the printed version of the book
    and the electronic copy are heavily cross-referenced.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我假设你已经掌握了 Java 的基础知识。我不会告诉你如何 `println` 一个字符串，也不会告诉你如何编写一个继承另一个类和/或实现接口的类。我假设你已经学过像
    [Learning Tree 的介绍](https://learningtree.com/471) 或者像 [*Head First Java*](http://shop.oreilly.com/product/9780596009205.do)、[*Learning
    Java*](http://shop.oreilly.com/product/0636920023463.do) 或 [*Java in a Nutshell*](http://shop.oreilly.com/product/9780596007737.do)（O’Reilly）这样的入门书籍。不过，[第一章](ch01.html#javacook-getstarted)
    涵盖了一些你可能不太熟悉但理解后续内容所必需的技术。欢迎随意查阅！书籍的印刷版和电子版都有大量交叉引用。
- en: What’s in This Book?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容包括什么？
- en: Java has seemed better suited to “development in the large,” or enterprise application
    development, than to the one-line, one-off script in Perl, Awk, or Python. That’s
    because it is a compiled, object-oriented language. However, this suitability
    has changed somewhat with the appearance of JShell (see [Recipe 1.4](ch01.html#javacook-getstarted-JSHELL)).
    I illustrate many techniques with shorter Java class examples and even code fragments;
    some of the simpler ones will be shown using JShell. All of the code examples
    (other than some one- or two-liners) are in one of my public GitHub repositories,
    so you can rest assured that every fragment of code you see here has been compiled,
    and most have been run recently.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Java更适合于“大规模开发”或企业应用程序开发，而不是Perl、Awk或Python中的单行一次性脚本。这是因为它是一种编译型的面向对象语言。然而，随着JShell的出现（参见[Recipe
    1.4](ch01.html#javacook-getstarted-JSHELL)），这种适用性在某种程度上有所改变。我用较短的Java类示例甚至是代码片段来说明许多技术；其中一些较简单的技术将使用JShell展示。所有的代码示例（除了一些一两行的代码）都在我的一个公共GitHub存储库中，因此你可以放心，这里所见到的每一段代码都已经编译过，而且大多数最近都运行过。
- en: Some of the longer examples in this book are tools that I originally wrote to
    automate some mundane task or another. For example, a tool called `MkIndex` (in
    the *javasrc* repository) reads the top-level directory of the place where I keep
    my Java example source code, and it builds a browser-friendly *index.html* file
    for that directory. Another example is `XmlForm`, which was used to convert parts
    of the manuscript from XML into the form needed by another publishing software.
    `XmlForm` also handled—by use of another program, `GetMark`—full and partial code
    insertions from the *javasrc* directory into the book manuscript. `XmlForm` is
    included in the Github repository I mentioned, as is a later version of `GetMark`,
    though neither of these was used in building the fourth edition. These days, O’Reilly’s
    Atlas publishing software uses [Asciidoctor](https://asciidoctor.org), which provides
    the mechanism we use for inserting files and parts of files into the book.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中一些较长的示例是我最初编写的工具，用于自动化一些单调的任务。例如，一个名为`MkIndex`（在*javasrc*存储库中）的工具读取我保存Java示例源代码的顶级目录，并构建一个适合浏览器的*index.html*文件。另一个例子是`XmlForm`，它用于将手稿的部分从XML转换为另一种出版软件所需的形式。`XmlForm`还通过另一个程序`GetMark`处理来自*javasrc*目录的完整和部分代码插入到书稿中。我提到的Github存储库中包含`XmlForm`，以及`GetMark`的后续版本，尽管这两者都没有用于第四版的构建。如今，O’Reilly的Atlas出版软件使用[Asciidoctor](https://asciidoctor.org)，它提供了我们用于向书中插入文件和文件部分的机制。
- en: Organization of This Book
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书的组织结构
- en: Let’s go over the organization of this book. Each chapter consists of a handful
    of recipes, short sections that describe a problem and its solution, along with
    a code example. The code in each recipe is intended to be largely self-contained;
    feel free to borrow bits and pieces of any of it for use in your own projects.
    The code is distributed with a Berkeley-style copyright, just to discourage wholesale
    reproduction.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看本书的组织结构。每一章由几个食谱组成，描述了一个问题及其解决方案，以及一个代码示例。每个食谱中的代码都旨在基本上是自包含的；欢迎你在自己的项目中借用其中的一些片段。该代码以伯克利样式的版权分发，仅仅是为了阻止全面复制。
- en: 'I start off [Chapter 1, *Getting Started: Compiling and Running Java*](ch01.html#javacook-getstarted),
    by describing some methods of compiling your program on different platforms, running
    them in different environments (browser, command line, windowed desktop), and
    debugging.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我从[第1章，*入门：编译和运行Java*](ch01.html#javacook-getstarted)开始，描述了在不同平台上编译程序的方法，以及在不同环境中运行它们（浏览器、命令行、窗口化桌面）和调试方法。
- en: '[Chapter 2, *Interacting with the Environment*](ch02.html#javacook-environ),
    moves from compiling and running your program to getting it to adapt to the surrounding
    countryside—the other programs that live in your computer.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章，*与环境交互*](ch02.html#javacook-environ)，从编译和运行程序转向使其适应周围环境——计算机中存在的其他程序。'
- en: The next few chapters deal with basic APIs. [Chapter 3, *Strings and Things*](ch03.html#javacook-strings),
    concentrates on one of the most basic but powerful data types in Java, showing
    you how to assemble, dissect, compare, and rearrange what you might otherwise
    think of as ordinary text. This chapter also covers the topic of internationalization/localization
    so that your programs can work as well in Akbar, Afghanistan, Algiers, Amsterdam,
    and Angleterre as they do in Alberta, Arkansas, and Alabama.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几章将涉及基本API。[第三章，*字符串和相关内容*](ch03.html#javacook-strings)集中讲解了Java中最基本但强大的数据类型之一，展示了如何组装、拆分、比较和重新排列你可能认为是普通文本的内容。本章还涵盖了国际化/本地化的话题，使得你的程序在阿克巴、阿富汗、阿尔及尔、阿姆斯特丹和法国的使用体验与在阿尔伯塔、阿肯色和阿拉巴马州的使用体验一样。
- en: '[Chapter 4, *Pattern Matching with Regular Expressions*](ch04.html#javacook-regex),
    teaches you how to use the powerful regular expressions technology from Unix in
    many string-matching and pattern-matching problem domains. Regex processing has
    been standard in Java for years, but if you don’t know how to use it, you may
    be reinventing the flat tire.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第四章，*使用正则表达式进行模式匹配*](ch04.html#javacook-regex)教你如何在许多字符串匹配和模式匹配问题领域中使用Unix的强大正则表达式技术。正则表达式处理在Java中已经标准化多年，但如果你不知道如何使用它，你可能会重新发明轮胎的平坦。'
- en: '[Chapter 5, *Numbers*](ch05.html#javacook-numbers), deals both with built-in
    numeric types such as `int` and `double`, as well as the corresponding API classes
    (`Integer`, `Double`, etc.) and the conversion and testing facilities they offer.
    There is also brief mention of the “big number” classes. Because Java programmers
    often need to deal in dates and times, both locally and internationally, [Chapter 6,
    *Dates and Times*](ch06.html#javacook-dates), covers this important topic.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第五章，*数字*](ch05.html#javacook-numbers)讨论了内置的数值类型，如`int`和`double`，以及相应的API类（`Integer`、`Double`等）和它们提供的转换和测试功能。还简要提到了“大数”类。由于Java程序员经常需要处理日期和时间，无论是本地的还是国际的，[第六章，*日期和时间*](ch06.html#javacook-dates)涵盖了这个重要主题。'
- en: 'The next few chapters cover data processing. As in most languages, arrays in
    Java are linear, indexed collections of similar objects, as discussed in [Chapter 7,
    *Structuring Data with Java*](ch07.html#javacook-structure). This chapter goes
    on to deal with the many Collections classes: powerful ways of storing quantities
    of objects in the `java.util` package, including use of Java Generics.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 接   接下来的几章将涵盖数据处理。与大多数语言一样，Java中的数组是线性的、索引的相似对象集合，如[第七章，*使用Java构建数据结构*](ch07.html#javacook-structure)中讨论的那样。本章将继续介绍许多集合类：在`java.util`包中存储大量对象的强大方式，包括Java泛型的使用。
- en: 'Despite some syntactic resemblance to procedural languages such as C, Java
    is at heart an Object-Oriented Programming (OOP) language, with some important
    Functional Programming (FP) constructs skilfully blended in. [Chapter 8, *Object-Oriented
    Techniques*](ch08.html#javacook-oo), discusses some of the key notions of OOP
    as it applies to Java, including the commonly overridden methods of `java.lang.Object`
    and the important issue of design patterns. Java is not, and never will be, a
    pure FP language. However, it is possible to use some aspects of FP, increasingly
    so with Java 8 and its support of lambda expressions (a.k.a. closures). This is
    discussed in [Chapter 9, *Functional Programming Techniques: Functional Interfaces,
    Streams, and Parallel Collections*](ch09.html#javacook-fp).'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在语法上与C等过程语言有些相似，Java从根本上是一种面向对象编程（OOP）语言，并巧妙地融合了一些重要的函数式编程（FP）构造。[第八章，*面向对象的技术*](ch08.html#javacook-oo)讨论了OOP的一些关键概念，包括常被重写的方法`java.lang.Object`以及设计模式的重要问题。Java不是，也永远不会是，纯粹的FP语言。然而，使用一些FP的特性是可能的，随着Java
    8及其对lambda表达式（即闭包）的支持，这一点变得越来越普遍。[第九章，*函数式编程技术：函数式接口、流和并行集合*](ch09.html#javacook-fp)对此进行了讨论。
- en: 'The next chapter deals with aspects of traditional input and output. [Chapter 10,
    *Input and Output: Reading, Writing, and Directory Tricks*](ch10.html#javacook-io),
    details the rules for reading and writing files (don’t skip this if you think
    files are boring; you’ll need some of this information in later chapters). The
    chapter also shows you everything else about files—such as finding their size
    and last-modified time—and about reading and modifying directories, creating temporary
    files, and renaming files on disk.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章涉及传统输入和输出的方面。[第10章，“输入和输出：读取、写入和目录技巧”](ch10.html#javacook-io)，详细说明了读取和写入文件的规则（如果您认为文件很无聊，请不要跳过这一章；您将在后面的章节中需要这些信息）。该章还向您展示了有关文件的其他内容——如查找其大小和上次修改时间——以及关于读取和修改目录、创建临时文件和重命名磁盘上的文件的所有其他信息。
- en: Big data and data science have become a thing, and Java is right in there. Apache
    Hadoop, Apache Spark, and much more of the big data infrastructure is written
    in, and extensible with, Java, as described in [Chapter 11, *Data Science and
    R*](ch11.html#javacook-ds). The R programming language is popular with data scientists,
    statsticians, and other scientists. There are at least two reimplementations of
    R coded in Java, and Java can also be interfaced directly with the standard R
    implementation in both directions, so this chapter covers R as well.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据和数据科学已经成为一个事物，而Java正好适用于此。Apache Hadoop、Apache Spark等大数据基础设施的大部分都是用Java编写的，并且可以通过Java进行扩展，如[第11章，“数据科学和R”](ch11.html#javacook-ds)所述。R编程语言在数据科学家、统计学家和其他科学家中很受欢迎。至少有两个用Java编写的R重新实现，并且Java也可以直接与标准R实现双向接口，因此本章也涵盖了R。
- en: Because Java was originally promulgated as the programming language for the
    internet, it’s only fair to spend some time on networking in Java. [Chapter 12,
    *Network Clients*](ch12.html#javacook-netclient), covers the basics of network
    programming from the client side, focusing on sockets. Today so many applications
    need to access a web service, primarily RESTful web services, that this seemed
    to be necessary. I’ll then move to the server side in [Chapter 13, *Server-Side
    Java*](ch13.html#javacook-netserver), wherein you’ll learn some server-side programming
    techniques.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因为Java最初被宣传为互联网的编程语言，花点时间在Java网络编程上是公平的。[第12章，“网络客户端”](ch12.html#javacook-netclient)，介绍了从客户端角度讲解网络编程的基础知识，重点介绍了套接字。如今，许多应用程序需要访问Web服务，主要是RESTful
    Web服务，因此这似乎是必要的。然后我将在[第13章，“服务器端Java”](ch13.html#javacook-netserver)中转向服务器端，您将在其中学习一些服务器端编程技术。
- en: One simple text-based representation for data interchange is JSON, the JavaScript
    object notation. [Chapter 14, *Processing JSON Data*](ch14.html#javacook-json),
    describes the format and some of the many APIs that have emerged to deal with
    it.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 用于数据交换的一种简单的基于文本的表示形式是JSON，即JavaScript对象表示法。[第14章，“处理JSON数据”](ch14.html#javacook-json)，描述了该格式以及一些出现的许多用于处理它的API。
- en: '[Chapter 15, *Packages and Packaging*](ch15.html#javacook-packages), shows
    how to create packages of classes that work together. This chapter also talks
    about deploying (a.k.a. distributing and installing) your software.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[第15章，“包和打包”](ch15.html#javacook-packages)，展示了如何创建一起工作的类包。本章还讨论了部署（又名分发和安装）软件的方法。'
- en: '[Chapter 16, *Threaded Java*](ch16.html#javacook-threads), tells you how to
    write classes that appear to do more than one thing at a time and let you take
    advantage of powerful multiprocessor hardware.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[第16章，“Java线程”](ch16.html#javacook-threads)，告诉您如何编写看起来可以同时执行多个操作的类，并利用强大的多处理器硬件。'
- en: '[Chapter 17, *Reflection, or “A Class Named Class”*](ch17.html#javacook-reflection),
    lets you in on such secrets as how to write API cross-reference documents mechanically
    and how web servers are able to load any old Servlet—never having seen that particular
    class before—and run it.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[第17章，“反射，或“一个名为Class的类””](ch17.html#javacook-reflection)，让您了解一些秘密，例如如何机械地编写API交叉引用文档以及Web服务器如何加载任何旧的Servlet——从未见过该特定类并运行它。'
- en: Sometimes you already have code written and working in another language that
    can do part of your work for you, or you want to use Java as part of a larger
    package. [Chapter 18, *Using Java with Other Languages*](ch18.html#javacook-otherlang),
    shows you how to run an external program (compiled or script) and also interact
    directly with native code in C/C++ or other languages.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您已经编写并在另一种语言中运行的代码可以为您的部分工作，或者您希望将Java用作较大程序包的一部分。[第18章，“使用其他语言与Java”](ch18.html#javacook-otherlang)，向您展示了如何运行外部程序（已编译或脚本），并直接与C/C++或其他语言中的本机代码交互。
- en: There isn’t room in a book this size for everything I’d like to tell you about
    Java. The [Afterword](preface02.html#javacook-afterword) presents some closing
    thoughts and a link to my online summary of Java APIs that every Java developer
    should know about.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的篇幅不足以包含我想告诉你的关于 Java 的一切。[后记](preface02.html#javacook-afterword)提供了一些结尾思考，并链接到我整理的每个
    Java 开发人员都应了解的 Java API 的在线摘要。
- en: Finally, [Appendix A, *Java Then and Now*](app01.html#javacook-then_now), gives
    the storied history of Java in a release-by-release timeline, so whatever version
    of Java you learned, you can jump in here and get up to date quickly.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，[附录 A，*Java Then and Now*](app01.html#javacook-then_now)，以版本发布时间线的形式呈现了 Java
    的传奇历史，因此无论你学习的是哪个版本的 Java，你都可以快速了解最新情况。
- en: So many topics, and so few pages! Many topics do not recieve 100% coverage;
    I’ve tried to include the most important or most useful parts of each API. To
    go beyond, check the official *javadoc* pages for each package; many of these
    pages have some brief tutorial information on how the package is to be used.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如此之多的主题，但页面有限！许多主题没有得到百分之百的覆盖；我试图包含每个 API 最重要或最有用的部分。要深入了解，请查看每个包的官方*javadoc*页面；许多这些页面上都有一些关于包如何使用的简短教程信息。
- en: Besides the parts of Java covered in this book, two other platform editions,
    Java ME and Java EE, have been standardized. Java Micro Edition (Java ME) is concerned
    with small devices such as handhelds, cell phones, and fax machines. At the other
    end of the size scale—large server machines—there’s [Eclipse Jakarta EE](https://projects.eclipse.org/projects/ee4j.jakartaee-platform),
    replacing the former Java EE, which in the last century was known as J2EE. Jakarta
    EE is concerned with building large, scalable, distributed applications. APIs
    that are part of Jakarta EE include Servlets, JavaServer Pages, JavaServer Faces,
    JavaMail, Enterprise JavaBeans (EJBs), Container and Dependency Injection (CDI),
    and Transactions. Jakarta EE packages normally begin with “javax” because they
    are not core packages. This book mentions but a few of these; there is also a
    [*Java EE 8 Cookbook*](https://www.oreilly.com/library/view/java-ee-8/9781788293037)
    by Elder Moraes (O’Reilly) that covers some of the Jakarta EE APIs, as well as
    an older [*Java Servlet & JSP Cookbook*](http://shop.oreilly.com/product/9780596005726.do)
    by Bruce Perry (O’Reilly).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了本书涵盖的 Java 部分外，还有两个其他平台版本已经标准化。Java Micro Edition (Java ME) 专注于诸如手持设备、手机和传真机等小型设备。在规模较大的服务器设备上，有[Eclipse
    Jakarta EE](https://projects.eclipse.org/projects/ee4j.jakartaee-platform)，它取代了以前的
    Java EE，在上个世纪被称为 J2EE。Jakarta EE 专注于构建大型、可扩展的分布式应用程序。Jakarta EE 的 API 包括 Servlets、JavaServer
    Pages、JavaServer Faces、JavaMail、Enterprise JavaBeans (EJBs)、Container and Dependency
    Injection (CDI) 和 Transactions。Jakarta EE 的包通常以“javax”开头，因为它们不是核心包。本书仅涉及其中几个；还有一个[*Java
    EE 8 Cookbook*](https://www.oreilly.com/library/view/java-ee-8/9781788293037)由
    Elder Moraes (O’Reilly) 编写，涵盖了一些 Jakarta EE 的 API，以及一个更早的[*Java Servlet & JSP
    Cookbook*](http://shop.oreilly.com/product/9780596005726.do)由 Bruce Perry (O’Reilly)
    编写。
- en: This book doesn’t cover Java Micro Edition, Java ME. At all. But speaking of
    cell phones and mobile devices, you probably know that Android uses Java as its
    language. What should be comforting to Java developers is that Android also uses
    most of the core Java API, except for Swing and AWT, for which it provides Android-specific
    replacements. The Java developer who wants to learn Android may consider looking
    at my [*Android Cookbook*](http://shop.oreilly.com/product/0636920038092.do) (O’Reilly),
    or the [book’s website](http://androidcookbook.com).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书完全不涵盖 Java Micro Edition、Java ME。但说到手机和移动设备，你可能知道 Android 使用 Java 作为其编程语言。对
    Java 开发人员而言，令人欣慰的是，Android 也使用了大部分核心 Java API，只是对于 Swing 和 AWT 提供了特定于 Android
    的替代品。想要学习 Android 的 Java 开发人员可以考虑查看我的[*Android Cookbook*](http://shop.oreilly.com/product/0636920038092.do)
    (O’Reilly)，或者这本书的[网站](http://androidcookbook.com)。
- en: Java Books
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java 图书
- en: 'A lot of useful information is packed into this book. However, due to the breadth
    of topics, it is not possible to give book-length treatment to any one topic.
    Because of this, the book contains references to many websites and other books.
    In pointing out these references, I’m hoping to serve my target audience: the
    person who wants to learn more about Java.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书包含了大量有用的信息。但由于涵盖的主题广泛，不可能对任何一个主题进行书籍长度的处理。因此，本书包含了许多网站和其他书籍的参考资料。在指出这些参考资料时，我希望能为我的目标读者提供帮助：那些想要更多了解
    Java 的人。
- en: O’Reilly publishes, in my opinion, the best selection of Java books on the market.
    As the API continues to expand, so does the coverage. Check out the complete list
    of [O’Reilly’s collection of Java books](https://ssearch.oreilly.com/?i=1;m_Sort=searchDate;q=java+o%27reilly;q1=Books;x1=t1&act=sort);
    you can buy them at most bookstores, both physical and virtual. You can also read
    them online through the [O’Reilly Online Learning Platform](http://oreilly.com),
    a paid subscription service. And, of course, most are now available in ebook format;
    O’Reilly ebooks are DRM free, so you don’t have to worry about their copy-protection
    scheme locking you into a particular device or system, as you do with certain
    other publishers.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，O'Reilly出版的Java书籍市场上是最佳选择。随着API的不断扩展，它们的覆盖范围也在增加。查看完整的[O'Reilly Java书籍系列](https://ssearch.oreilly.com/?i=1;m_Sort=searchDate;q=java+o%27reilly;q1=Books;x1=t1&act=sort)，你可以在大多数实体书店和虚拟书店购买它们。你也可以通过[O'Reilly在线学习平台](http://oreilly.com)，一个付费订阅服务，在线阅读它们。当然，大多数书籍现在也提供电子书格式；O'Reilly的电子书是无DRM的，因此你不必担心它们的拷贝保护方案将你锁定在特定的设备或系统上，就像某些其他出版商的做法一样。
- en: Though many books are mentioned at appropriate spots in the book, a few deserve
    special mention here.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书在适当的位置提到了许多书籍，但在这里还值得特别一提几本。
- en: First and foremost, David Flanagan and Benjamin Evan’s [*Java in a Nutshell*](http://shop.oreilly.com/product/9780596007737.do)
    (O’Reilly) offers a brief overview of the language and API and a detailed reference
    to the most essential packages. This is handy to keep beside your computer. [*Head
    First Java*](http://shop.oreilly.com/product/9780596009205.do) by Bert Bates and
    Kathy Sierra offers a much more whimsical introduction to the language and is
    recommended for the less experienced developer.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，David Flanagan和Benjamin Evan的[*Java程序员快速参考*](http://shop.oreilly.com/product/9780596007737.do)（O'Reilly）提供了语言和API的简要概述，以及对最重要的包的详细参考。这本书很方便放在你的电脑旁边。Bert
    Bates和Kathy Sierra的[*Head First Java*](http://shop.oreilly.com/product/9780596009205.do)则是一本更为风趣的入门书，推荐给经验较少的开发者。
- en: '[*Java 8 Lambdas*](http://shop.oreilly.com/product/0636920030713.do) (Warburton,
    O’Reilly) covers the Lambda syntax introduced in Java 8 in support of functional
    programming and more concise code in general.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Java 8 Lambdas*](http://shop.oreilly.com/product/0636920030713.do)（Warburton，O''Reilly）介绍了Java
    8引入的Lambda语法，支持函数式编程和更简洁的代码。'
- en: '[*Java 9 Modularity: Patterns and Practices for Developing Maintainable Applications*](http://shop.oreilly.com/product/0636920049494.do)
    by Sander Mak and Paul Bakker (O’Reilly) covers the important changes made in
    the language in Java 9 for the Java module system.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Java 9模块化：开发可维护应用程序的模式与实践*](http://shop.oreilly.com/product/0636920049494.do)（Sander
    Mak和Paul Bakker，O''Reilly）涵盖了Java 9语言中关键的更改，专注于Java模块系统。'
- en: '[*Java Virtual Machine*](http://shop.oreilly.com/product/9781565921948.do)
    by Jon Meyer and Troy Downing (O’Reilly) will intrigue the person who wants to
    know more about what’s under the hood. This book is out of print but can be found
    used and in libraries.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Java虚拟机*](http://shop.oreilly.com/product/9781565921948.do)（Jon Meyer和Troy
    Downing，O''Reilly）将会吸引那些想深入了解底层技术的人。这本书已经停印，但可以在二手市场和图书馆找到。'
- en: A definitive (and monumental) description of programming the Swing GUI is [*Java
    Swing*](http://shop.oreilly.com/product/9780596004088.do) by Robert Eckstein et
    al. (O’Reilly).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一本权威（而且庞大）的Swing GUI编程书籍是[*Java Swing*](http://shop.oreilly.com/product/9780596004088.do)（Robert
    Eckstein等人，O'Reilly）。
- en: '[*Java Network Programming*](http://shop.oreilly.com/product/0636920028420.do)
    and [*Java I/O*](http://shop.oreilly.com/product/9780596527501.do), both by Elliotte
    Harold (O’Reilly), are also useful references.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Java网络编程*](http://shop.oreilly.com/product/0636920028420.do)和[*Java I/O*](http://shop.oreilly.com/product/9780596527501.do)，均由Elliotte
    Harold（O''Reilly）编著，也是有用的参考资料。'
- en: 'For Java Database work, [*Database Programming with JDBC & Java*](http://shop.oreilly.com/product/9781565926165.do)
    by George Reese (O’Reilly) and *Pro JPA 2: Mastering the Java Persistence API*
    by Mike Keith and Merrick Schincariol (Apress) are recommended. Or my forthcoming
    [overview of Java Database](https://darwinsys.com/db_in_java).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '对于Java数据库工作，推荐[*Java数据库编程与JDBC & Java*](http://shop.oreilly.com/product/9781565926165.do)（George
    Reese，O''Reilly）和*Pro JPA 2: 掌握Java持久化API*（Mike Keith和Merrick Schincariol，Apress）。或者我的即将推出的[Java数据库概述](https://darwinsys.com/db_in_java)。'
- en: 'Although the book you’re now reading doesn’t have much coverage of the Java
    EE, I’d like to mention two books on that topic:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你现在读的这本书没有涵盖Java EE的内容，但我想提到两本相关的书：
- en: Arun Gupta covers the Enterprise Edition in [*Java EE 7 Essentials*](http://shop.oreilly.com/product/0636920030614.do)
    (O’Reilly).
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阿伦·古普塔在《Java EE 7 Essentials》（O’Reilly）中详细介绍了企业版。
- en: 'Adam Bien’s [*Real World Java EE Patterns: Rethinking Best Practices*](http://realworldpatterns.com)
    offers useful insights in designing and implementing an Enterprise application.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚当·比恩的《真实世界Java EE模式：重新思考最佳实践》（http://realworldpatterns.com）提供了在设计和实现企业应用程序中的有用见解。
- en: You can find more at the [O’Reilly website](https://shop.oreilly.com).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[O’Reilly网站](https://shop.oreilly.com)找到更多信息。
- en: Finally, although it’s not a book, Oracle has a great deal of [Java information](https://docs.oracle.com/en/java/javase/13/docs)
    on the web. This web page used to feature a large diagram showing all the components
    of Java in a “conceptual diagram.” An early version of this is shown in [Figure P-1](#javacook-preface-conceptual);
    each colored box is a clickable link to details on that particular technology.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，尽管它不是一本书，《Java信息》（https://docs.oracle.com/en/java/javase/13/docs）在网络上有大量内容。该网页曾展示了一张显示Java所有组件的大图，这是一个“概念图”。早期版本显示在[图P-1](#javacook-preface-conceptual)中；每个彩色框都是指向该特定技术详细信息的可点击链接。
- en: '![jcb4 0001](assets/jcb4_0001.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![jcb4 0001](assets/jcb4_0001.png)'
- en: Figure P-1\. Java conceptual diagram from Oracle documentation
  id: totrans-49
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图P-1\. Oracle文档中的Java概念图
- en: For better or for worse, newer versions of Java have replaced this with a text
    page; for Java 13 the page is at [*https://docs.oracle.com/en/java/javase/13*](https://docs.oracle.com/en/java/javase/13).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 不管好坏，Java的新版本已将此替换为文本页面；对于Java 13，该页面位于[*https://docs.oracle.com/en/java/javase/13*](https://docs.oracle.com/en/java/javase/13)。
- en: General Programming Books
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一般编程书籍
- en: Donald E. Knuth’s [*The Art of Computer Programming*](https://en.wikipedia.org/wiki/The_Art_of_Computer_Programming)
    (Addison-Wesley) has been a source of inspiration to generations of computing
    students since its first publication in 1968\. Volume 1 covers *Fundamental Algorithms*,
    Volume 2 is *Seminumerical Algorithms*, Volume 3 is *Sorting and Searching*, and
    Volume 4A is *Combinatorial Algorithms, Part 1*. The remaining volumes in the
    projected series are not completed. Although his examples are far from Java (he
    invented the hypothetical assembly language MIX for his examples), many of his
    discussions of algorithms—of how computers ought to be used to solve real problems—are
    as relevant today as they were years ago.^([2](preface01.html#idm45290712013016))
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 唐纳德·E·克努特的《计算机程序设计艺术》（Addison-Wesley）自1968年首次出版以来，一直是计算机学生们的灵感来源。第1卷涵盖了*基本算法*，第2卷是*半数值算法*，第3卷是*排序和搜索*，第4A卷是*组合算法，第1部分*。预计系列中的其余卷尚未完成。尽管他的示例与Java差距很大（他为示例发明了假想的汇编语言MIX），但他对算法的讨论——关于计算机如何解决实际问题——与多年前一样，至今仍然相关。^([2](preface01.html#idm45290712013016))
- en: 'Though its code examples are quite dated now, the book *The Elements of Programming
    Style* by Brian Kernighan and P. J. Plauger (McGraw-Hill) set the style (literally)
    for a generation of programmers with examples from various structured programming
    languages. Kernighan and Plauger also wrote a pair of books, *Software Tools*
    (Addison-Wesley) and *Software Tools in Pascal* (Addison-Wesley), which demonstrated
    so much good advice on programming that I used to advise all programmers to read
    them. However, these three books are dated now; many times I wanted to write a
    follow-on book in a more modern language. Instead I now defer to *The Practice
    of Programming*, Kernighan’s follow-on—cowritten with Rob Pike (Addison-Wesley)—to
    the *Software Tools* series. This book continues the Bell Labs tradition of excellence
    in software textbooks. In previous editions of this book, I had even adapted one
    bit of code from their book, their CSV parser. Finally, Kernighan recently published
    *UNIX: A History and a Memoir*, his take on the story of Unix.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它的代码示例现在看来有些过时，《编程风格的元素》一书由布赖恩·克尼甘和P. J. 普劳格（麦格劳希尔）撰写，为一代程序员设定了风格基调。克尼甘和普劳格还合著了一对书籍，《软件工具》（Addison-Wesley）和《Pascal语言中的软件工具》（Addison-Wesley），这两本书提供了大量关于编程的良好建议，以至于我曾经建议所有程序员都应该阅读。然而，这三本书现在已经过时；许多时候我想要用一种更现代的语言写一本后续书籍。现在我转而推荐克尼甘的后续之作《编程实践》—与罗布·派克（Addison-Wesley）合著—作为《软件工具》系列的延续。这本书延续了贝尔实验室在软件教科书中的卓越传统。在本书的早期版本中，我甚至从他们的书中借鉴了一小段代码，他们的CSV解析器。最后，克尼甘最近出版了《UNIX：历史与回忆》，他对Unix故事的诠释。
- en: See also *The Pragmatic Programmer* by Andrew Hunt and David Thomas (Addison-Wesley).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 还请参阅安德鲁·亨特和大卫·托马斯的 *实用编程*（Addison-Wesley）。
- en: Design Books
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计书籍
- en: Peter Coad’s *Java Design* (PTR-PH/Yourdon Press) discusses the issues of object-oriented
    analysis and design specifically for Java. Coad is somewhat critical of Java’s
    implementation of the observable-observer paradigm and offers his own replacement
    for it.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 彼得·科德的 *Java 设计*（PTR-PH/Yourdon Press）专门讨论了针对 Java 的面向对象分析和设计的问题。科德对 Java 的可观察者-观察者范式的实现持有一定的批评态度，并提供了自己的替代方案。
- en: One of the most famous books on object-oriented design in recent years is *Design
    Patterns* by Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides (Addison-Wesley).
    These authors are often collectively called the “Gang of Four,” resulting in their
    book sometimes being referred to as the GoF book. One of my colleagues called
    it “the best book on object-oriented design ever,” and I agree; at the very least,
    it’s among the best.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来关于面向对象设计最著名的书之一是 *设计模式*，作者是埃里希·伽玛、理查德·赫尔姆、拉尔夫·约翰逊和约翰·弗利西德斯（Addison-Wesley）。这些作者通常被称为“四人帮”，导致他们的书有时被称为
    GoF 书。我的一位同事称它为“有史以来最好的面向对象设计书籍”，我同意；至少，它是最好之一。
- en: '*Refactoring* by Martin Fowler (Addison-Wesley) covers a lot of “coding cleanups”
    that can be applied to code to improve readability and maintainability. Just as
    the GoF book introduced new terminology that helps developers and others communicate
    about how code is to be designed, Fowler’s book provided a vocabulary for discussing
    how it is to be improved. But this book may be less useful than others; many of
    the refactorings now appear in the Refactoring Menu of the Eclipse IDE (see [Recipe
    1.3](ch01.html#javacook-getstarted-SECT-3)).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 马丁·福勒的 *重构*（Addison-Wesley）涵盖了很多可应用于代码的“清理”工作，以提高可读性和可维护性。正如 GoF 书籍引入了有助于开发人员和其他人沟通代码设计方式的新术语一样，福勒的书提供了一个讨论如何改进代码的词汇表。但这本书可能不如其他书有用；现在许多重构内容已经出现在
    Eclipse IDE 的重构菜单中（参见 [Recipe 1.3](ch01.html#javacook-getstarted-SECT-3)）。
- en: Two important streams of methodology theories are currently in circulation.
    The first is collectively known as Agile methods, and its best-known members are
    [Scrum](https://en.wikipedia.org/wiki/Scrum_(software_development)) and Extreme
    Programming (XP). XP (the methodology, not that really old flavor of Microsoft’s
    OS) is presented in a series of small, short, readable texts led by its designer,
    Kent Beck. The first book in the XP series is *Extreme Programming Explained*
    (Addison-Wesley). A good overview of all the Agile methods is Jim Highsmith’s
    *Agile Software Development Ecosystems* (Addison-Wesley).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 目前流传的两个重要方法论流派。第一个被称为敏捷方法，最著名的成员是 [Scrum](https://en.wikipedia.org/wiki/Scrum_(software_development))
    和极限编程（XP）。XP（方法论，而不是那个真的很老的微软 OS 版本）由其设计者肯特·贝克领导，以一系列小型、简短、易读的文本呈现。XP 系列的第一本书是
    *极限编程解析*（Addison-Wesley）。对所有敏捷方法的很好概述是吉姆·海斯密斯的 *敏捷软件开发生态系统*（Addison-Wesley）。
- en: Another group of important books on methodology, covering the more traditional
    object-oriented design, is the UML series led by “the Three Amigos” (Booch, Jacobson,
    and Rumbaugh). Their major works are the *UML User Guide*, *UML Process*, and
    others. A smaller and more approachable book in the same series is Martin Fowler’s
    *UML Distilled*.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 另一组重要的方法论书籍，涵盖了更传统的面向对象设计，是由“三位好友”（布奇、雅各布森和朗保）领导的 UML 系列。他们的主要作品是 *UML 用户指南*、*UML
    过程* 等等。同一系列中一本更小、更易接近的书是马丁·福勒的 *UML 精要*。
- en: Conventions Used in This Book
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书中使用的约定
- en: This book uses the following conventions.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用以下约定。
- en: Programming Conventions
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编程约定
- en: 'I use the following terminology in this book. A program means any unit of code
    that can be run: from a five-line main program, to a servlet or web tier component,
    an EJB, or a full-blown GUI application. Applets were Java programs for use in
    a web browser; these were popular for a while but barely exist today. A servlet
    is a Java component built using Jakarta EE APIs for use in a web server, normally
    via HTTP. EJBs are business-tier components built using Jakarta APIs. An application
    is any other type of program. A desktop application (a.k.a. client) interacts
    with the user. A server program deals with a client indirectly, usually via a
    network connection (usually HTTP/HTTPS these days).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中我使用以下术语。程序指任何可运行的代码单元：从五行主程序到Servlet或Web层组件、EJB或完整的GUI应用程序。小程序是用于在Web浏览器中使用的Java程序；这些曾一度流行，但今天几乎不存在。Servlet是使用Jakarta
    EE API构建的Java组件，用于通过HTTP在Web服务器中使用。EJB是使用Jakarta API构建的业务层组件。应用程序指任何其他类型的程序。桌面应用程序（也称为客户端）与用户进行交互。服务器程序间接与客户端交互，通常通过网络连接（今天通常是HTTP/HTTPS）。
- en: The examples shown are in two varieties. Those that begin with zero or more
    import statements, a javadoc comment, and a `public class` statement are complete
    examples. Those that begin with a declaration or executable statement, of course,
    are excerpts. However, the full versions of these excerpts have been compiled
    and run, and the online source includes the full versions.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 所示示例有两种变体。以零个或多个导入语句、一个javadoc注释和一个`public class`语句开头的是完整示例。以声明或可执行语句开头的当然是摘录。但这些摘录的完整版本已经被编译和运行，在线资源包括完整版本。
- en: Recipes are numbered by chapter and number, so, for example, [Recipe 8.1](ch08.html#javacook-oo-SECT-1)
    refers to the first recipe in [Chapter 8](ch08.html#javacook-oo).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 配方按章节和编号编号，例如，[Recipe 8.1](ch08.html#javacook-oo-SECT-1)指的是[第8章](ch08.html#javacook-oo)中的第一个配方。
- en: Typesetting Conventions
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排版约定
- en: 'The following typographic conventions are used in this book:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用以下排版约定：
- en: '*Italic*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*斜体*'
- en: Used for commands, filenames, and example URLs. It is also used for emphasis
    and to define new terms when they first appear in the text.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 用于命令、文件名和示例网址。在文本中首次出现时，还用于强调和定义新术语。
- en: '`Constant width`'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`等宽字体`'
- en: Used in code examples to show partial or complete Java source code program listings.
    It is also used for class names, method names, variable names, and other fragments
    of Java code.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码示例中用于显示部分或完整的Java源代码程序清单。还用于类名、方法名、变量名和其他Java代码片段。
- en: '**`Constant width bold`**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**`等宽粗体字体`**'
- en: Used for user input, such as commands that you type on the command line.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 用于用户输入，例如在命令行上键入的命令。
- en: '*`Constant width italic`*'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*`等宽斜体字体`*'
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 显示应该被用户提供的值或由上下文确定的值替换的文本。
- en: Tip
  id: totrans-77
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: This element signifies a tip or suggestion.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示提示或建议。
- en: Note
  id: totrans-79
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This element signifies a general note.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示一般注释。
- en: Warning
  id: totrans-81
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This icon indicates a warning or caution.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 此图标表示警告或注意事项。
- en: Code Examples
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码示例
- en: The code samples for this book are on the author’s GitHub. Most are in the repository
    [*javasrc*](https://github.com/IanDarwin/javasrc), but a few are pulled in from
    one other repository, [*darwinsys-api*](https://github.com/IanDarwin/darwinsys-api).
    Details on downloading these are in [Recipe 1.6](ch01.html#javacook-getstarted-samplecode).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码示例位于作者的GitHub上。大多数位于仓库[*javasrc*](https://github.com/IanDarwin/javasrc)，但少数从另一个仓库[*darwinsys-api*](https://github.com/IanDarwin/darwinsys-api)中拉取。有关下载这些内容的详细信息，请参见[Recipe
    1.6](ch01.html#javacook-getstarted-samplecode)。
- en: Many programs are accompanied by an example showing them in action, run from
    the command line. These will usually show a prompt ending in either `$` for Unix
    or `>` for Windows, depending on which computer I was using the day I wrote that
    example. If there is text before this prompt character, it can be ignored. It
    may be a pathname or a hostname, again, depending on the system.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 许多程序都附有示例，展示它们在命令行中的运行方式。这些示例通常会显示以`$`为结尾的Unix提示符或以`>`为结尾的Windows提示符，具体取决于我编写示例时使用的计算机。如果在这个提示符字符之前有文本，可以忽略它。它可能是路径名或主机名，同样取决于系统。
- en: These examples will usually also show the full package name of the class because
    Java requires this when starting a program from the command line. And because
    that will remind you which subdirectory of the source repository to find the source
    code in, I won’t be pointing it out explicitly very often.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当从命令行启动程序时，这些示例通常还会显示类的完整包名称。因为Java要求这样做，而且这将提醒您在源代码库的哪个子目录中找到源代码，所以我不会经常明确指出它。
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Java Cookbook*
    by Ian F. Darwin (O’Reilly). Copyright 2020 RejmiNet Group, Inc., 978-1-492-07258-4.”'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢但通常不要求署名。署名通常包括标题、作者、出版商和ISBN号。例如：“*Java Cookbook* by Ian F. Darwin (O’Reilly).
    Copyright 2020 RejmiNet Group, Inc., 978-1-492-07258-4。”
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at *permissions@oreilly.com*.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您认为您对代码示例的使用超出了合理使用范围或以上授权，请随时通过*permissions@oreilly.com*与我们联系。
- en: O’Reilly Online Learning
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 奥莱利在线学习
- en: Note
  id: totrans-90
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 40多年来，[*奥莱利媒体*](http://oreilly.com)已为技术和商业培训提供了知识和见解，以帮助公司取得成功。
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, conferences, and our online learning platform. O’Reilly’s
    online learning platform gives you on-demand access to live training courses,
    in-depth learning paths, interactive coding environments, and a vast collection
    of text and video from O’Reilly and 200+ other publishers. For more information,
    please visit [*http://oreilly.com*](http://oreilly.com).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过图书、文章、会议和我们的在线学习平台分享他们的知识和专业知识。奥莱利的在线学习平台为您提供按需访问的实时培训课程、深入学习路径、交互式编码环境以及奥莱利和其他200多家出版商的大量文本和视频。欲了解更多信息，请访问[*http://oreilly.com*](http://oreilly.com)。
- en: Comments and Questions
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论和问题
- en: 'As mentioned earlier, I’ve tested all the code on at least one of the reference
    platforms, and most on several. Still, there may be platform dependencies, or
    even bugs, in my code or in some important Java implementation. Please report
    any errors you find, as well as your suggestions for future editions, by writing
    to:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面提到的，我已经在至少一个参考平台上测试了所有代码，大多数情况下是在多个平台上测试过。尽管如此，我的代码或某些重要的Java实现中可能存在平台依赖性或甚至错误。请报告您发现的任何错误以及对未来版本的建议，写信至：
- en: O’Reilly Media, Inc.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 奥莱利媒体公司
- en: 1005 Gravenstein Highway North
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1005 Gravenstein Highway North
- en: Sebastopol, CA 95472
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CA 95472，Sebastopol
- en: 800-998-9938 (in the United States or Canada)
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-998-9938（美国或加拿大）
- en: 707-829-0515 (international or local)
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0515（国际或本地）
- en: 707-829-0104 (fax)
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104（传真）
- en: There is a web page for this book where we list errata, examples, and any additional
    information. It can be accessed at [*http://shop.oreilly.com/product/0636920304371.do*](http://shop.oreilly.com/product/0636920304371.do).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 本书有一个网页，我们列出了勘误、示例和任何额外信息。您可以访问[*http://shop.oreilly.com/product/0636920304371.do*](http://shop.oreilly.com/product/0636920304371.do)。
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com)以评论或询问有关本书的技术问题。
- en: For more information about our books, courses, conferences, and news, see our
    website at [*http://www.oreilly.com*](http://www.oreilly.com).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于我们的图书、课程、会议和新闻的信息，请访问我们的网站[*http://www.oreilly.com*](http://www.oreilly.com)。
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在Facebook上找到我们：[*http://facebook.com/oreilly*](http://facebook.com/oreilly)
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在Twitter上关注我们：[*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在YouTube上观看我们：[*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)
- en: The O’Reilly site lists errata. You’ll also find the source code for all the
    Java code examples to download; *please* don’t waste your time typing them again!
    For specific instructions, see [Recipe 1.6](ch01.html#javacook-getstarted-samplecode).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 奥莱利网站列出了勘误表。您也可以找到所有Java代码示例的源代码以供下载；*请*不要浪费时间重新输入它们！有关具体说明，请参见[Recipe 1.6](ch01.html#javacook-getstarted-samplecode)。
- en: Acknowledgments
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: I wrote in the Afterword to the first edition that “writing this book has been
    a humbling experience.” I should add that maintaining it has been humbling, too.
    While many have been lavish with their praise—one very kind reviewer called it
    “arguably the best book ever written on the Java programming language”—I have
    been humbled by the number of errors and omissions in earlier editions. I have
    endeavored to correct these.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我在第一版的后记中写道，“写这本书是一次令人印象深刻的经历。”我应该补充说，维护这本书也同样令人感到印象深刻。尽管许多人对此赞不绝口——一位非常友好的评论者称其为“有史以来关于Java编程语言写得最好的书”——但我被早期版本中的错误和遗漏数量所震惊。我努力进行了改正。
- en: My life has been touched many times by the flow of the fates bringing me into
    contact with the right person to show me the right thing at the right time. [Steve
    Munro](https://en.wikipedia.org/wiki/Steve_Munro), with whom I’ve long since lost
    touch, introduced me to computers when we were in the same class in high school—in
    particular an IBM 360/30 at the Toronto Board of Education that was bigger than
    a living room, had 32 or 64*K* (not *M* or *G*!) of memory, and had perhaps the
    power of a PC/XT. The late Herb Kugel took me under his wing at the University
    of Toronto while I was learning about the larger IBM mainframes that came later.
    Terry Wood and Dennis Smith at the University of Toronto introduced me to mini-
    and micro-computers before there was an IBM PC. On evenings and weekends, the
    [Toronto Business Club of Toastmasters International](http://www.toastmasters.org)
    and Al Lambert’s Canada SCUBA School allowed me to develop my public speaking
    and teaching abilities. Several people at the University of Toronto, but especially
    [Geoffrey Collyer](https://en.wikipedia.org/wiki/Geoff_Collyer), taught me the
    features and benefits of the Unix operating system at a time when I was ready
    to learn it.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 生活中多次被命运的流动触及，让我与正确的人在正确的时间接触到正确的事物。与我早已失去联系的史蒂夫·芒罗在我们高中同班时向我介绍了计算机，特别是多伦多教育委员会的一台比起客厅还大、有32或64K（不是M或G！）内存的IBM
    360/30。后来在多伦多大学，已故的赫伯特·库格尔在我学习后来的更大型IBM主机时关心着我。特里·伍德和丹尼斯·史密斯在我接触IBM PC之前介绍了我迷你和微型计算机。在多伦多商业俱乐部的Toastmasters
    International和阿尔·兰伯特的加拿大潜水学校，我得以发展我的演讲和教学能力。多伦多大学的几位人士，尤其是杰弗里·科利尔，教会了我Unix操作系统的特性和好处，正是在我准备学习它的时候。
- en: Thanks to the many [Learning Tree](https://www.learningtree.com) instructors
    and students who showed me ways of improving my presentations. I still teach for
    “The Tree” and recommend their courses for the busy developer who wants to zero
    in on one topic in detail over four days.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢许多[Learning Tree](https://www.learningtree.com)的讲师和学生向我展示了如何改进我的演讲。我仍然为“The
    Tree”教书，并推荐他们的课程给那些希望在四天内深入了解一个主题的忙碌开发者。
- en: Closer to this project, Tim O’Reilly believed in my “little Lint book” when
    it was just a sample chapter from a proposed longer work, enabling my early entry
    into the rarefied circle of O’Reilly authors. Years later, Mike Loukides encouraged
    me to keep trying to find a Java book idea that both he and I could work with.
    And he stuck by me when I kept falling behind the deadlines. Mike also read the
    entire manuscript and made many sensible comments, some of which brought flights
    of fancy down to earth. Jessamyn Read turned many faxed and emailed scratchings
    of dubious legibility into the quality illustrations you see in this book. And
    many, many other talented people at O’Reilly helped put this book into the form
    in which you now see it.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 离这个项目更近的是，当我的“小林书”只是一个提议的更长作品的样章时，蒂姆·奥莱利相信了它，使我得以早日进入奥莱利作者的尊贵圈子。多年后，迈克·劳基德斯鼓励我继续寻找一个我们两个都能合作的Java书籍创意。在我一次次未能按时完成截稿时，他一直支持着我。迈克还阅读了整个手稿，并提出了许多明智的意见，其中一些把不切实际的想法拉回了现实。杰萨敏·里德将许多传真和电子邮件上的难以辨认的涂鸦变成了你在这本书中看到的高质量插图。还有许多奥莱利的其他才华横溢的人帮助把这本书变成了你现在看到的形态。
- en: The code examples are now dynamically included (so updates get done faster)
    rather than pasted in. My son (and functional programming developer) Benjamin
    Darwin helped meet the deadline by converting almost the entire code base to O’Reilly’s
    newest “include” mechanism and by resolving a couple of other non-Java presentation
    issues. He also helped make [Chapter 9](ch09.html#javacook-fp) clearer and more
    functional.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在代码示例已经动态包含（因此更新更快），而不是直接粘贴进来。我的儿子（功能编程开发者）Benjamin Darwin通过将几乎整个代码库转换为O'Reilly最新的“包含”机制，并解决其他几个非Java展示问题，帮助满足了截止日期。他还帮助使[第9章](ch09.html#javacook-fp)更清晰和更实用。
- en: At O’Reilly
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在O'Reilly
- en: For this fourth edition of the book, Suzanne McQuade was the editorial overseer,
    and Corbin Collins the principal editor. Corbin was especially meticulous in checking
    the manuscript. Meghan Blanchette, Sarah Schneider, Adam Witwer, Melanie Yarbrough,
    and the many production people listed on the Copyright page all played a part
    in getting the third edition ready for you to read. Thanks to Mike Loukides, Deb
    Cameron, and Marlowe Shaeffer for editorial and production work on the second
    edition.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书的第四版中，Suzanne McQuade担任编辑监督，Corbin Collins担任主编。Corbin在校对手稿方面尤为细致。Meghan
    Blanchette、Sarah Schneider、Adam Witwer、Melanie Yarbrough以及在版权页列出的许多制作人员都为第三版的完成贡献了自己的力量。感谢Mike
    Loukides、Deb Cameron和Marlowe Shaeffer在第二版的编辑和制作工作中的贡献。
- en: Technical Reviewers
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术审阅员
- en: For the fourth edition I was blessed to have two very thorough technical reviewers,
    Sander Mak and Daniel Hinojosa. Many issues that I hadn’t considered during the
    main revision were called out by these two, leading to extensive rewrites and
    changes in the last few weeks before the O’Reilly production team took over. Thanks
    so much to both of you!
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第四版，我很荣幸能够拥有两位非常彻底的技术审阅员，Sander Mak和Daniel Hinojosa。这两位指出了我在主要修订期间未考虑到的许多问题，在O'Reilly制作团队接管前的最后几周进行了广泛的重写和修改。非常感谢你们两位！
- en: My reviewer for the third edition, Alex Stangl, read the third edition manuscript
    and went far above the call of duty, making innumerable helpful suggestions, even
    finding typos that had been present in previous editions! Helpful suggestions
    on particular sections were made by Benjamin Darwin, Mark Finkov, and Igor Savin.
    For anyone I’ve forgotten to mention, I thank you all!
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我的第三版审稿人Alex Stangl阅读了第三版的手稿，并超出了职责范围，提出了无数有益的建议，甚至发现了之前版本中存在的错别字！Benjamin Darwin、Mark
    Finkov和Igor Savin对特定章节提出了有益的建议。如果我遗漏了任何人，请接受我诚挚的感谢！
- en: Bil Lewis and Mike Slinn made helpful comments on multiple drafts of the first
    edition. Ron Hitchens and Marc Loy carefully read the entire final draft of the
    first edition. I am grateful to Mike Loukides for his encouragement and support
    throughout the process. Editor Sue Miller helped shepherd the manuscript through
    the somewhat energetic final phases of production. Sarah Slocombe read the XML
    chapter in its entirety and made many lucid suggestions; unfortunately, time did
    not permit me to include all of them in the first edition.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Bil Lewis和Mike Slinn在第一版的多个草稿中提出了有益的评论。Ron Hitchens和Marc Loy仔细阅读了第一版的整个最终草稿。我非常感谢Mike
    Loukides在整个过程中的鼓励和支持。编辑Sue Miller在生产的最后阶段积极推动手稿的完成。Sarah Slocombe阅读了XML章节的全文，并提出了许多清晰的建议；不幸的是，时间不允许我在第一版中包含所有建议。
- en: Jonathan Knudsen, Andy Oram, and David Flanagan commented on book’s outline
    when it was little more than a list of chapters and recipes, and they were able
    to see the kind of book it could become and suggest ways to make it better.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Jonathan Knudsen、Andy Oram和David Flanagan在这本书的大纲还只是章节列表时提出了评论，他们能够看到这本书可能成为的类型，并提出了改进的方法。
- en: Each of these people made this book better in many ways, particularly by suggesting
    additional recipes or revising existing ones. Thanks to one and all! The faults
    that remain are my own.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 每一位参与者都在很多方面使这本书变得更好，特别是通过提出额外的配方建议或修改现有的配方。感谢每一位！尚存的错误均属于我的疏忽。
- en: Readers
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读者
- en: My sincere thanks to all the readers who found errata and suggested improvements.
    Every new edition is better for the efforts of folks like you who take the time
    and trouble to report that which needs reporting!
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我衷心感谢所有找到勘误并提出改进建议的读者。每一版新书都因像你们这样花时间和精力来报告需要改进的地方的人而变得更好！
- en: Special mention must be made of one of the book’s German translators,^([3](preface01.html#idm45290711930216))
    Gisbert Selke, who read the first edition cover to cover during its translation
    and clarified my English. Gisbert did it all over again for the second edition
    and provided many code refactorings, which have made this a far better book than
    it would be otherwise. Going beyond the call of duty, Gisbert even contributed
    one recipe ([Recipe 18.5](ch18.html#javacook-otherlang-SECT-4)) and revised some
    of the other recipes in the same chapter. Thank you, Gisbert!
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 特别要提到本书的德文译者之一^([3](preface01.html#idm45290711930216))，吉斯伯特·塞尔克（Gisbert Selke），他在翻译第一版时从头到尾阅读了整本书，并澄清了我的英语。吉斯伯特为第二版做了同样的工作，并提供了许多代码重构，使得这本书比其他情况下更好。吉斯伯特甚至超越了职责范围，为这本书做出了一份食谱（[Recipe
    18.5](ch18.html#javacook-otherlang-SECT-4)），并修改了同一章节中其他一些食谱。谢谢你，吉斯伯特！
- en: The second edition also benefited from comments by Jim Burgess, who read large
    parts of the book. Comments on individual chapters were received from Jonathan
    Fuerth, the late Kim Fowler, Marc Loy, and Mike McCloskey. My wife, Betty, and
    my then-teenaged children each proofread several chapters as well.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 第二版还受益于吉姆·伯吉斯的评论，他阅读了书的大部分内容。乔纳森·弗尔斯、已故的金·福勒、马克·洛伊和迈克尔·麦克洛斯基分别对各个章节提出了评论。我的妻子贝蒂和当时还是十几岁的孩子们也分别校对了几章内容。
- en: 'The following people contributed significant bug reports or suggested improvements:
    Rex Bosma, Rod Buchanan, John Chamberlain, Keith Goldman, Gilles-Philippe Gregoire,
    B. S. Hughes, Jeff Johnston, Rob Konigsberg, Tom Murtagh, Jonathan O’Connor, Mark
    Petrovic, Steve Reisman, Bruce X. Smith, and Patrick Wohlwend.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下人员提供了重要的错误报告或建议改进：雷克斯·博斯马、罗德·布坎南、约翰·张伯伦、基思·戈德曼、吉尔-菲利普·格雷戈瓦、B·S·休斯、杰夫·约翰斯顿、罗布·康尼斯伯格、汤姆·默塔格、乔纳森·奥康纳、马克·彼得罗维奇、史蒂夫·赖斯曼、布鲁斯·X·史密斯和帕特里克·沃尔温德。
- en: Etc.
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 等等。
- en: My dear wife, Betty Cerar, still knows more about the caffeinated beverage that
    I drink while programming than the programming language I use, but her passion
    for clear expression and correct grammar has benefited so much of my writing during
    our life together.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 亲爱的妻子贝蒂·赛拉依然对我在编程时喝的咖啡充满了了解，比我使用的编程语言更加了解，但是她对清晰表达和正确语法的热情在我们共同生活的岁月里给我的写作带来了很多好处。
- en: No book on Java would be complete without a note of thanks to James Gosling
    for inventing Java (he also invented the first Unix Emacs, the *sc* spreadsheet,
    and the NeWS window system). Thanks also to his employer Sun Microsystems (before
    they were taken over by Oracle) for releasing not only the Java language but an
    incredible array of Java tools and API libraries freely available over the internet.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一本关于Java的书能完整地没有感谢詹姆斯·高斯林发明Java（他还发明了第一个Unix Emacs、*sc*电子表格和NeWS窗口系统）。同时也感谢他的雇主Sun
    Microsystems（在被Oracle收购之前），他们不仅发布了Java语言，还在互联网上免费提供了一系列令人难以置信的Java工具和API库。
- en: Willi Powell of Apple Canada provided macOS access for the first edition, back
    in the early days of macOS.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一版的早期，苹果加拿大的威利·鲍威尔为我提供了macOS的访问权限。
- en: To each and every one of you, my sincere thanks.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每一位贡献者，我真诚地感谢你们。
- en: Book Production Software
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 书籍制作软件
- en: I used a variety of tools and operating systems in preparing, compiling, and
    testing this book. The developers of [OpenBSD](http://www.openbsd.org), “the proactively
    secure Unix-like system,” deserve thanks for making a stable and secure Unix clone
    that is also closer to traditional Unix than other freeware systems. I used the
    *vi* editor (*vi* on OpenBSD and *vim* on Windows) while inputting the original
    manuscript in XML, and I used Adobe FrameMaker (a wonderful GUI-based documentation
    tool that Adobe bought and subsequently destroyed) to format the documents. I
    do not know if I can ever forgive Adobe for destroying what was arguably the world’s
    best documentation system and for making the internet such a dangerous place by
    keeping the bug-infested Flash alive long past its best-before century. I do know
    I will never use a documentation system from Adobe for anything.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备、编译和测试本书时，我使用了各种工具和操作系统。值得感谢OpenBSD的开发者们，他们创造了“主动安全的类Unix系统”，提供了一个稳定和安全的Unix克隆系统，比其他免费软件更接近传统Unix。我在输入原始手稿的XML时使用了*vi*编辑器（在OpenBSD上是*vi*，在Windows上是*vim*），并使用Adobe
    FrameMaker（一个精美的基于GUI的文档工具，后来被Adobe收购并毁掉）来格式化文档。我不知道我是否能原谅Adobe毁掉了可以说是世界上最好的文档系统，还通过保持充满bug的Flash活跃使互联网变得如此危险。但我知道我永远不会再使用Adobe的文档系统来做任何事情。
- en: Because of this, the crowd-sourced *[Android Cookbook](http://shop.oreilly.com/product/0636920038092.do)*
    that I edited was not prepared with FrameMaker, but instead XML DocBook (generated
    from wiki markup on a Java-powered website that I wrote for the purpose) and a
    number of custom tools provided by O’Reilly’s tools group.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 由于此原因，我编辑的众包 *[Android Cookbook](http://shop.oreilly.com/product/0636920038092.do)*
    并不是用FrameMaker准备的，而是使用了XML DocBook（从我为此目的编写的基于Java的维基标记生成）和O'Reilly工具组提供的一些定制工具。
- en: The third and fourth editions of this *Java Cookbook* were formatted in [Asciidoctor](http://asciidoctor.org)
    and brought to life on the publishing toolchain of O’Reilly’s [Atlas](http://atlas.oreilly.com).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '*Java Cookbook* 的第三版和第四版是用 [Asciidoctor](http://asciidoctor.org) 格式化的，并在O''Reilly的
    [Atlas](http://atlas.oreilly.com) 出版工具链上实现。'
- en: ^([1](preface01.html#idm45290711767064-marker)) For the quirks, see the [*Java
    Puzzlers* books](http://javapuzzlers.com) by Joshua Bloch and Neal Gafter (Addison-Wesley).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](preface01.html#idm45290711767064-marker)) 有关怪癖，请参见 Joshua Bloch 和 Neal
    Gafter 的 [*Java Puzzlers* books](http://javapuzzlers.com)（Addison-Wesley）。
- en: ^([2](preface01.html#idm45290712013016-marker)) With possible exceptions for
    algorithm decisions that are less relevant today given the massive changes in
    computing power now available.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](preface01.html#idm45290712013016-marker)) 在考虑到目前计算能力的巨大变化后，对于不再那么相关的算法决策可能会有例外情况。
- en: ^([3](preface01.html#idm45290711930216-marker)) Earlier editions are or have
    been available in English, German, French, Polish, Russian, Korean, Traditional
    Chinese, and Simplified Chinese. My thanks to all the translators for their efforts
    in making the book available to a wider audience.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](preface01.html#idm45290711930216-marker)) 较早的版本有或者曾经有英文、德文、法文、波兰文、俄文、韩文、繁体中文和简体中文版本。感谢所有翻译人员为使这本书能够面向更广泛的读者群体所做的努力。
